<?xml version="1.0"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">

<channel>
	<title>Planet Python</title>
	<link>http://planetpython.org/</link>
	<language>en</language>
	<description>Planet Python - http://planetpython.org/</description>

<item>
	<title>Low Kian Seong: Review of the Xtar XP4 charger</title>
	<guid>http://blog.lowkster.com/2013/10/review-of-xtar-xp4-charger.html</guid>
	<link>http://blog.lowkster.com/2013/10/review-of-xtar-xp4-charger.html</link>
	<description>Besides tinkering around with Python and system stuff as evident from the bigger title of this blog, I am also a certified battery charger nut. Just the technology behind battery chargers and the types of them out there totally fascinates me. Recently, I was offered the chance to review one of the new battery chargers from Xtar called the XP4. Why is this battery charger special ? Well to fully appreciate how this charger is special firstly you got to understand that batteries are made out of different compositions, the two main camps currently used are the Nickle and Lithium camps. Your typical rechargeable AA/AAA you find in the market nowadays are usually of the Nickle camp while your phone and laptops usually uses Lithium batteries.&amp;nbsp; Each camps' batteries have their own special way they like to be charged and in a lot of ways are different.&lt;br /&gt;&lt;br /&gt;Because of this difference, making a charger that can automatically sense the type of battery put into it and charge it just the way it likes to be charge proves to be a challenge not many chargers currently in the market can answer currently. Currently the majority of chargers in the market are what you would call &quot;dumb chargers&quot; as in their time based, where they will charge up until a certain point then switch off. Put in a battery that is 80% full vs 10% and it will still &quot;dumbly&quot; charge it for 5 hours then switch off. Not too efficient or smart.&lt;br /&gt;&lt;br /&gt;Before this, there are actually chargers being sold that can charge both of them but these class of chargers are what people call &quot;Hobby Chargers&quot; because they were mainly used to charge battery packs used for RC toys. This also meant that if you were just looking for a charger with battery trays built in to charge 'normal' batteries, you are better off looking somewhere else. How these chargers handled dual chemistry is by having the user choose the type of battery that they are going to charge before hand. &lt;br /&gt;&lt;br /&gt;The XP4 is a dual chemistry charger new in the market. It can charge NiCD, NiCd and Lithium batteries. I have tried charging mostly NiMh batteries on it as I do not really own any Lithium batteries (well not yet). So, far from what I can see, the charger works flawlessly. It has four independant channels. What this means is that each channel works by itself like a self contained battery charger and can work individually without being effected by the other channels. Some battery chargers out in the market now have paired channels. That means that batteries must be charged in pairs as the underlying circuitry pairs up the channels.&lt;br /&gt;&lt;br /&gt;I was happy and excited to review this charger as personally I am happy that Chinese electronics are finally starting to come out on their own with their own brands rather than just acting as the behind-the-scenes manufacturer for other companies. Xtar or &lt;a href=&quot;http://www.xtarlight.com/&quot;&gt;Xtarlight&lt;/a&gt; is one of the more reputable companies based in Hong Kong.&lt;br /&gt;&lt;br /&gt;This charger will also mark Xtar's first batch of foray (the other charger being &lt;a href=&quot;http://www.xtarlight.com/05-chanpin/p-001-1.asp?styleid=277&amp;style=New%20Arrival&quot;&gt;XP1&lt;/a&gt;) into the NiMh/NiCd scene. &amp;nbsp;More and more you see these new Chinese companies coming out with their own brand of chargers which have no counterpart on the European which are at the same time affordable. While for now buying and using these chargers for now can be like a walk on the wild side as in the huge mixing bowl there are good as well as not so reputable manufacturers, a few good companies like Xtarlight has emerged that produce good and stable hardware. If the chargers produced by them have good functionality coupled with good safety features, I say all the more power to them! I am impartial to who really produces them, as long as it's a good product, though traditionally Chinese / Asian manufacturers have not really been known to put consumer safety high up in their list as they do not have as stringent as the standards enforced on them compared to their Western counterparts.&lt;br /&gt;&lt;br /&gt;On to the review....&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;My initial views on the charger:&lt;/h3&gt;&lt;br /&gt;&lt;h3&gt;Construction (5/5):&lt;/h3&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-PB1Ol_S0nHI/UlE02mowZUI/AAAAAAAAENI/c72o4NZJ4tA/s1600/20131006_174425.jpg&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://1.bp.blogspot.com/-PB1Ol_S0nHI/UlE02mowZUI/AAAAAAAAENI/c72o4NZJ4tA/s320/20131006_174425.jpg&quot; height=&quot;240&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot;&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-O0ip-Aio8Xs/UlE0M_Rb26I/AAAAAAAAELE/jQnEKMixpIw/s1600/20131006_174726.jpg&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://2.bp.blogspot.com/-O0ip-Aio8Xs/UlE0M_Rb26I/AAAAAAAAELE/jQnEKMixpIw/s320/20131006_174726.jpg&quot; height=&quot;320&quot; width=&quot;240&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;h3&gt;&amp;nbsp;&lt;/h3&gt;&lt;h3&gt;&amp;nbsp;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-qPNYUbvairA/UkvDXxWVMhI/AAAAAAAAEHQ/gznO7sZNiSc/s1600/20131002_122154.jpg&quot;&gt;&lt;img alt=&quot;XTar XP4 Panzer&quot; border=&quot;0&quot; src=&quot;http://1.bp.blogspot.com/-qPNYUbvairA/UkvDXxWVMhI/AAAAAAAAEHQ/gznO7sZNiSc/s320/20131002_122154.jpg&quot; height=&quot;240&quot; title=&quot;XTar XP4 Panzer&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/h3&gt;This charger is code named &quot;Panzer&quot; and in my opinion aptly too as the construction feels solid just like a tank. I kept on getting the model of this charger wrong initially because of their significant lineup. My advice ? Just call the frigging thing Xtar Panzer! Nice ring to it and easy to remember.&lt;br /&gt;&lt;br /&gt;The charger even comes with it's own verification code to ensure that the charger is genuine. It works albeit just a little too spartan or basic to be truly impressive or memorable.&lt;br /&gt;&lt;br /&gt;The springs feel and work well without much hint of needing any lubrication. I based this finding comparing with other chargers with springs which normally need a touch of lubrication to work normally. The case also feels solid and surprisingly does not feel light or 'cheap'. I would say on this end, I am happy that Xtar did not spare when it came to materials to build the charger, even though the cost of them putting everything into the charger did show on the box material. The charger has got a nice solid feel to it. While I would have liked to have a digital display to show charging progress of batteries, for an initial effort from Xtar, this is sufficient. Here is a picture of the charger with the 4 bays in question. These chargers because of the protrusion on the metal contact will work with flat top batteries too. Initially, I was not used to the way the battery fit into the bays but after a few days I found it to be second nature.&amp;nbsp; I guess the initial issue I had with it was because this is my first unit that uses a spring loaded.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-LDFFmILJC8A/UkvDl9Wy8bI/AAAAAAAAEHY/iFgYWcgsKYs/s1600/20131002_145157_7.jpg&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://4.bp.blogspot.com/-LDFFmILJC8A/UkvDl9Wy8bI/AAAAAAAAEHY/iFgYWcgsKYs/s320/20131002_145157_7.jpg&quot; height=&quot;240&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Performance (4/5): &lt;/h3&gt;&lt;br /&gt;Some confusion I had initially was about the temperature sensor on the charger. On the manual it states that the charger's &quot;operating temperature&quot; for NiMh batteries was about 40 Celcius. I mistaken this for that the device contained some kind of temperature sensor but as pointed out by xtar representative this is not true. One thing I must note here is that the representative from Xtar must be given a point here because of their exemplary service. Every question that I had ranging from when the charger is going to be released right up to if the charger contained any temperature sensors was answered courteously and in a timely manner. Back to the charger, while it did not have a temperature sensor, none of the batteries that I charged on it became anything beyond warm because I suspect that it's heat dissipation is really good. I guess what it really meant by &quot;operating temperature&quot; really means what normal temperature the charger will be operating at when charging NiMh batteries.&lt;br /&gt;&lt;br /&gt;I don't really have any of those fancy man toys to measure heat via thermal images&amp;nbsp; beyond a child thermometer so you have got to take my word without backing proof here. Normally for NiMh battery chargers, currently in the market there are roughly 3 ways to terminate charge on a battery and switch to trickle charge:&lt;br /&gt;&lt;br /&gt;&lt;ol&gt;&lt;li&gt;dv Change in voltage as in a voltage dip after being fully charged.&lt;/li&gt;&lt;li&gt;dT temperature controlled as in the cases where the battery becomes overly warm.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Time controlled. This is the so called &quot;dumb charger&quot;.&lt;/li&gt;&lt;/ol&gt;Ideally a NiMh charger should have the ability to do 1 and 2, just in the case if the voltage detection fails, then at least the possibility of the batteries melting in the charger can be avoided. The best case scenario is if a charger can do all three. This charger can do one of them and in most cases do it rather well so I guess it's acceptable, just that the &quot;operating temperature&quot; might be confusing and bring certain people for a loop.&lt;br /&gt;&lt;br /&gt;Nearly all of the charging scenario, my findings are all based on the 0.5A charging settings as running on the 0.25A settings, some of the charging could not be terminated and was running indefinitely. After numerous exchanges on the forums namely &lt;a href=&quot;http://www.candlepowerforums.com/&quot;&gt;candlepower forums&lt;/a&gt;, I was informed that 0.25A is way too low and most chargers would miss the termination. I take away 0.5 point from the charger here as it allows the user to pick the 0.25A charge setting although it might have problems terminating the charge on that setting, I mean the charger itself should not allow batteries to be charged at that setting if there potentially would be a problem terminating the charge at that setting.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Charging batteries(3/5)&lt;/h3&gt;Besides charging batteries of different chemistries namely Lithium and NiMh batteries this charger also come with a few other functions:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Discharge / Charge cycle for NiMh&lt;/li&gt;&lt;li&gt;Discharge of Lithium via USB to charge mobile devices (only for batteries loaded into Bay 4 of the charger)&lt;/li&gt;&lt;/ul&gt;&lt;i&gt;** For all of the times I did my evaluation of these functionality I wished that I had a fancy schmancy multimeter to capture all of the data coming from charger. Alas, I don't, I guess next time or if someone sends it to me to be evaluated.&amp;nbsp; &lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Here is what I thought of them: &lt;br /&gt;&lt;h4&gt;Charging Lithium bats&lt;/h4&gt;&lt;br /&gt;Since I did not really have any Lithium batteries, in order to be complete I decided to go out there and finally get myself a torchlight. I settled on the PD32 out of recommendation which came with a Lithium battery. &lt;br /&gt;&lt;br /&gt;&lt;h4&gt;Charging Lithium plus NiMh&lt;/h4&gt;&lt;div&gt;Both of the batteries terminated fine and I had no issues here, one improvement I can see here is if in future editions of this charger the basic lcd display in the VP1 can be incorporated somehow into this charger it would be great.&amp;nbsp;&lt;/div&gt;&lt;h4&gt;USB discharge function&amp;nbsp;&lt;/h4&gt;I tried using the USB discharge function to power up my Samsung S3 and it seems to work as advertised, the only issue I seemed to have run into is that the connector of the USB seems a bit loose (it could very well have been my own cable as well, so I won't fault the charger for this) and it disrupted the charging multiple times. Charging is acceptable and not anything memorable. The only&amp;nbsp; thing that would have liked or I found lacking is that if only the USB function would work also if connected to a AC source then it would be superb. Assuming that the unit will only be used as a powerbank seems to be a mis-step on the construction of the unit.&amp;nbsp; Also, if this unit was meant to be used as a powerbank it would be nice if batteries of different chemistries could be used instead of just Lithiums. The other thing is that the way that the unit holds the battery should be more secure if you really want to use the USB discharge function to charge up your HP or other mobile devices. Below is shown the USB section of the charger.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-f_REjW2gKE0/UlEz11u3lMI/AAAAAAAAEJo/_mln3J-ouZA/s1600/20131006_175327.jpg&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://2.bp.blogspot.com/-f_REjW2gKE0/UlEz11u3lMI/AAAAAAAAEJo/_mln3J-ouZA/s320/20131006_175327.jpg&quot; height=&quot;240&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;Discharge and Charge&lt;/h4&gt;&lt;br /&gt;The discharge and charge function is another function offered by XP4 which differentiates it from most chargers in the market now. There aren't many at this price range that does that.&amp;nbsp; The only compliant I have here is that it this cycle takes a long time as it does not allow you to choose the discharge current. The option of the charge current only takes effect during the charging stage.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Conclusion&lt;/h3&gt;&lt;i&gt;Likes&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;- The construction of the charger is great and feels solid&lt;br /&gt;- The charging works (at 0.5A) settings with NiMh and Liion batteries that I tried.&lt;br /&gt;&lt;br /&gt;&lt;i&gt;So-so&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;- The verification code on the site seems a little too basic to be impressive.&lt;br /&gt;- You cannot choose the discharge current in the discharge-charge or the refresh function.&lt;br /&gt;- USB function only works with Lithium batteries and do not work with NiMh batteries.&lt;br /&gt;- Lacking the LCD display that came with VP1.&lt;br /&gt;&lt;br /&gt;&lt;i&gt;Dislikes&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;- There are no temperature sensor which can do dT based termination&lt;br /&gt;- Charging at 0.25A charging is very spotty. Should not have allowed charging at this setting in my opinion &lt;br /&gt;- You cannot use the USB when the AC is connected to the device. &lt;br /&gt;&lt;br /&gt;As I see it now, the charger seems to be a good initial effort of Xtar foraying into the NiMh charging sphere. Where does it fit ? Well I have arguably the most advanced NiMh system out there: &lt;a href=&quot;http://www.rc711.com/shop/skyrc-nc2500-aa-aaa-battery-charger-and-analyzer-p-8164.html&quot;&gt;NC2500&lt;/a&gt; from SkyRC but where I see Xtar's XP4 shining is the convenience of just having one charger that can do all sorts of charging. If I just want to dump my batteries irrespective of type into it and not want anymore information beyond just when it's charging and when it's done XP4 fits the bill perfectly. Look for this charger if you already know something about your batteries and just want something that charges and works without you having to do a lot of settings before it starts charging. While it is not perfect, I am happy with this initial effort and do hope that they continue to improve on this charger. I am looking forward to see an improved version of this in the future.&lt;br /&gt;&lt;br /&gt;Also, I don't think that this review is complete without at least a mention of the great PR that Xtar has. The person that communicated with me about this charger was responsive and promptly answered all of my questions. Although this was my first time getting a review set from them I was very impressed with they way they treated me. This is one thing that the company has right and judging from their FB &lt;a href=&quot;https://www.facebook.com/HongKongXTAR&quot;&gt;page&lt;/a&gt;, they got the community around them happy too.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;You can probably find a good deal here:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/B00FJ50EMA/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00FJ50EMA&amp;linkCode=as2&amp;tag=plaslai-20&amp;linkId=BL75JPZNROG2JDBV&quot;&gt;XTAR XP4 Panzer Ni-MH/Li-ion Charger with USB Charging Port for Cell Phone &amp;amp; Car Adaptor&lt;/a&gt;&lt;img src=&quot;http://ir-na.amazon-adsystem.com/e/ir?t=plaslai-20&amp;l=as2&amp;o=1&amp;a=B00FJ50EMA&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Sat, 13 Dec 2014 21:34:20 +0000</pubDate>
</item>
<item>
	<title>Python Sweetness: A plan for a completely decentralized BitTorrent index</title>
	<guid>http://pythonsweetness.tumblr.com/post/105098675847</guid>
	<link>http://pythonsweetness.tumblr.com/post/105098675847</link>
	<description>&lt;p&gt;&lt;strong&gt;[not python]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With The Pirate Bay in ruins, and with its founders denouncing it for all that it has become (ridiculous porn ads and profiteering), one wonders what a replacement that doesn&amp;#8217;t suffer the same fate might resemble.&lt;/p&gt;
&lt;p&gt;While leafing through Hacker News it occurred to me the Bitcoin blockchain is already an ideal mechanism for publishing a completely decentralized BitTorrent index.&lt;/p&gt;
&lt;p&gt;Since you can easily fit the hash part of a Magnet URL in a Bitcoin transaction&amp;#8217;s OP_RETURN value, all required to publish a torrent is to move its description (title, description, categories, magnet URL) into a torrent of its own, since in the general case it would not otherwise fit within a single Bitcoin transaction. Indexers find the first hash via the blockchain, use it to fetch the full torrent description via the BitTorrent DHT, which in turn allows it to find the torrent via the magnet URL (or alternatively, includes the .torrent file directly, but this trades network efficiency for hosting overhead).&lt;/p&gt;
&lt;p&gt;To accelerate bootstrapping new indexers, occasionally &amp;#8220;roll up&amp;#8221; descriptions could be published, which are just torrents that aggregate a large number of descriptions (bucketed say, by date, DHT swarm size, or similar). Add an identifier and a dollop of public key cryptography to these roll-ups, and you effectively have a trusted &amp;#8220;channel&amp;#8221; - one guy or group with editorial control over the roll-ups they publish, and magically you have something very close to ThePirateBay&amp;#8217;s database again, only this time no load balancers to attack in a single data centre in Sweden, and no single web site to serve it covered in porn ads.&lt;/p&gt;
&lt;p&gt;For this to work, indexer software would need exist that knows how to scrape the blockchain, fetch the description torrents and build a searchable full-text index, which might be presented via a web interface (say, something that resembles The Pirate Bay). Since scraping the blockchain is fairly storage, computation, and network intensive, probably there would be relatively few indexers, although a dedicated user could always host their own.&lt;/p&gt;
&lt;p&gt;For resilience, ideally BitTorrent clients could be modified to help host the description torrents, otherwise their only copies would again be concentrated on the (relatively few) indexers, where they could easily be attacked.&lt;/p&gt;
&lt;p&gt;Yet another alternative is to produce a standard &amp;#8216;torrent description&amp;#8217; file to include in the source torrent itself. That avoids having to modify the BitTorrent clients to contribute hosting (since the &amp;#8216;description&amp;#8217; torrent becomes the torrent itself), but prevents bootstrapping such a decentralized system using the millions of torrents that already exist.&lt;/p&gt;
&lt;p&gt;Probably this idea isn&amp;#8217;t new. Still, it&amp;#8217;s fun to think about, but likely weeks to implement!&lt;/p&gt;</description>
	<pubDate>Sat, 13 Dec 2014 17:18:00 +0000</pubDate>
</item>
<item>
	<title>PyCon: PyCon 2015 Education Summit - Call for Proposals</title>
	<guid>http://pycon.blogspot.com/2014/12/pycon-2015-education-summit-call-for.html</guid>
	<link>http://pycon.blogspot.com/2014/12/pycon-2015-education-summit-call-for.html</link>
	<description>&lt;div&gt;&lt;i&gt;A guest post by&amp;nbsp;&lt;a href=&quot;https://twitter.com/chalmer_lowe&quot;&gt;Chalmer Lowe&lt;/a&gt;.&lt;/i&gt;&lt;/div&gt;&lt;h2&gt;PyCon 2015 Education Summit&lt;/h2&gt;&lt;div&gt;&lt;span&gt;The&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://us.pycon.org/2015/events/edusummit/&quot;&gt;Python Education Summit&lt;/a&gt;&lt;span&gt;, held during&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://us.pycon.org/2015/&quot;&gt;PyCon&lt;/a&gt;&lt;span&gt;&amp;nbsp;on Thursday&amp;nbsp;&lt;/span&gt;&lt;b&gt;April 9th 2015&lt;/b&gt;&lt;span&gt;, is gathering of teachers and educators focused on bringing coding literacy, through Python, to as broad a group of audiences as possible.&amp;nbsp;&lt;/span&gt;We invite educators from all venues to consider joining the discussion, share insights, learn new techniques and tools and generally share their passion for education. We are looking for educators from many venues: authors; schools, colleges, universities; community-based workshops; online programs; and government.&lt;/div&gt;&lt;div&gt;If you are interested in attending this summit, presenting or have questions, please contact&amp;nbsp;&lt;a href=&quot;mailto:chalmer.lowe@gmail.com&quot;&gt;Chalmer Lowe&lt;/a&gt;&amp;nbsp;or&amp;nbsp;&lt;a href=&quot;mailto:jessicanickel@gmail.com&quot;&gt;Jessica Nickel&lt;/a&gt;. Invitations are subject to availability.&lt;/div&gt;&lt;h2&gt;Education Summit - Call for Proposals&lt;/h2&gt;&lt;div&gt;Do you have a story to share on education and Python? We are actively looking for presenters for the Python Education Summit and have extended the submission deadline.&lt;/div&gt;&lt;div&gt;If you are interested in presenting, please submit your ideas for topics/presentations that you would like to present. We will gather feedback on the submissions to assist us in building the agenda. All submissions must be in by&amp;nbsp;&lt;b&gt;January 15th&lt;/b&gt;&amp;nbsp;and decisions on speakers/presenters will be made and speakers will be notified by&amp;nbsp;&lt;b&gt;February 1st, 2015&lt;/b&gt;.&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;label label-note&quot;&gt;Note:&lt;/span&gt;&amp;nbsp;All speakers will be offered early bird pricing for attendance at PyCon.&lt;/div&gt;&lt;div&gt;Interested in seeing the topics others are proposing to speak on? Click&amp;nbsp;&lt;a href=&quot;https://www.google.com/moderator/#16/e=211b44&quot;&gt;here&lt;/a&gt;&amp;nbsp;to have a look and&amp;nbsp;&lt;b&gt;vote&lt;/b&gt;&amp;nbsp;for your favorites - help us define this year's agenda!&lt;/div&gt;&lt;div&gt;&lt;a class=&quot;btn btn-primary&quot; href=&quot;https://www.google.com/moderator/#16/e=211b44&quot;&gt;Submit a Proposal&amp;nbsp;&lt;span class=&quot;icon icon-circle-arrow-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;h2&gt;Proposal Ideas&lt;/h2&gt;&lt;div&gt;Need some ideas for topics you could present? Maybe one of these topics will inspire you to share your experiences:&lt;/div&gt;&lt;ul&gt;&lt;li&gt;The joy and pain of authoring a book on Python&lt;/li&gt;&lt;li&gt;Teaching Python on a shoestring budget&lt;/li&gt;&lt;li&gt;Gamifying how you teach Python to strengthen engagement and return on investment&lt;/li&gt;&lt;li&gt;Using the Raspberry Pi to teach Python&lt;/li&gt;&lt;li&gt;Tips for developing your Python-based curriculum&lt;/li&gt;&lt;li&gt;How to choose what to teach&lt;/li&gt;&lt;li&gt;Educating children to program in Python&lt;/li&gt;&lt;li&gt;Educating seniors to program in Python&lt;/li&gt;&lt;li&gt;Helping a student transition from Learning Py to Py Employment&lt;/li&gt;&lt;li&gt;How to make money teaching Python&lt;/li&gt;&lt;li&gt;Developing a community program teaching Python&lt;/li&gt;&lt;li&gt;Train the Trainer: teaching volunteers to teach Python&lt;/li&gt;&lt;li&gt;Exploring the resources available to instructors&lt;/li&gt;&lt;li&gt;Choosing the right teaching resources&lt;/li&gt;&lt;li&gt;Taking a student to the next level - guiding 'self study'&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;See you at the Python Education Summit in April!&lt;/b&gt;&lt;/div&gt;</description>
	<pubDate>Sat, 13 Dec 2014 13:39:19 +0000</pubDate>
</item>
<item>
	<title>Ned Batchelder: Seeing what the computer sees</title>
	<guid>http://nedbatchelder.com//blog/201412/seeing_what_the_computer_sees.html</guid>
	<link>http://nedbatchelder.com//blog/201412/seeing_what_the_computer_sees.html</link>
	<description>&lt;p&gt;One of the challenging things about programming is being able to really see
    code the way the computer is going to see it.  Sometimes the human-only
    signals are so strong, we can't ignore them.  This is one of the reasons
    I like indentation-significant languages like Python: people attend to the
    indentation whether the computer does or not, so you might as well have
    the people and computers looking at the same thing.&lt;/p&gt;&lt;p&gt;I was reminded of this problem yesterday while trying to debug a
    &lt;a href=&quot;https://github.com/mitodl/mit_lti_flask_sample&quot;&gt;sample application&lt;/a&gt;
    I was toying with.  It has a config file with some strings and dicts in it.
    It reads in part like this:&lt;/p&gt;&lt;blockquote class=&quot;code&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SECRET_KEY&lt;/span&gt;&amp;#xA0;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;#xA0;&lt;span class=&quot;s&quot;&gt;'you-will-never-guess'&lt;/span&gt;
&lt;br /&gt;&lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;#xA0;secret&amp;#xA0;key&amp;#xA0;for&amp;#xA0;authentication&lt;/span&gt;
&lt;br /&gt;&lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;span class=&quot;n&quot;&gt;PYLTI_URL_FIX&lt;/span&gt;&amp;#xA0;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;#xA0;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;br /&gt;&lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;#xA0;Remap&amp;#xA0;URL&amp;#xA0;to&amp;#xA0;fix&amp;#xA0;edX's&amp;#xA0;misrepresentation&amp;#xA0;of&amp;#xA0;https&amp;#xA0;protocol.&lt;/span&gt;
&lt;br /&gt;&lt;span class=&quot;sd&quot;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;You&amp;#xA0;can&amp;#xA0;add&amp;#xA0;another&amp;#xA0;dict&amp;#xA0;entry&amp;#xA0;if&amp;#xA0;you&amp;#xA0;have&amp;#xA0;trouble&amp;#xA0;with&amp;#xA0;the&lt;/span&gt;
&lt;br /&gt;&lt;span class=&quot;sd&quot;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;PyLti&amp;#xA0;URL.&lt;/span&gt;
&lt;br /&gt;&lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;br /&gt;
&lt;br /&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://localhost:8000/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&amp;#xA0;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;br /&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://localhost:8000/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&amp;#xA0;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://localhost:8000/&amp;quot;&lt;/span&gt;
&lt;br /&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;br /&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://localhost/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&amp;#xA0;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;br /&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://localhost/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://192.168.33.10/&amp;quot;&lt;/span&gt;
&lt;br /&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;br /&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;br /&gt;&lt;/code&gt;&lt;/blockquote&gt;&lt;p&gt;When I saw this file, I thought, &quot;That's a weird way to comment things,&quot;
    but didn't worry more about it.  Then later when the response was failing,
    I debugged into it, and realized what was wrong with this file.  Before
    reading on, do you see what it is?&lt;/p&gt;&lt;p&gt;&lt;p class=&quot;bulletsep&quot;&gt;•    •    •&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;p class=&quot;bulletsep&quot;&gt;•    •    •&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;p class=&quot;bulletsep&quot;&gt;•    •    •&lt;/p&gt;&lt;/p&gt;&lt;p&gt;Python concatenates adjacent string literals.  This is handy for making long
    strings without having to worry about backslashes.  In real code, this
    feature is little-used, and it happens in a surprising place here.  The
    &quot;docstring&quot; for the dictionary is implicitly concatenated to the first key.
    PYLTI_URL_FIX has a key that's 163 characters long: &quot; Remap URL to ...
    URL.\nhttps://localhost:8000/&quot;, including three newlines.&lt;/p&gt;&lt;p&gt;But SECRET_KEY isn't affected.  Why? Because the SECRET_KEY assignment line
    is a complete statement all by itself, so it doesn't continue onto the next
    line.  Its &quot;docstring&quot; is a statement all by itself.  The PYLTI_URL_FIX
    docstring is inside the braces of the dictionary, so it's all part of one
    13-line statement.  All the tokens are considered together, and the adjacent
    strings are concatenated.&lt;/p&gt;&lt;p&gt;As odd as this code was, it was hard to see what was going to happen, because
    the first string was clearly meant as a comment, both in its token form
    (a multiline string, starting in the first column) and in its content (English
    text explaining the dictionary).  The second string is clearly intended as
    a key in the dict (short, containing data, indented).  But all of those
    signals are human signals, not computer signals.  So I as a human attended
    to them and misunderstood what would happen when the computer saw the same
    text and ignored those signals.&lt;/p&gt;&lt;p&gt;The &lt;a href=&quot;https://github.com/mitodl/mit_lti_flask_sample/pull/12&quot;&gt;fix&lt;/a&gt;
    of course is to use conventional comments. Programming is hard, yo.
    Stick to the conventions.&lt;/p&gt;</description>
	<pubDate>Sat, 13 Dec 2014 13:23:40 +0000</pubDate>
</item>
<item>
	<title>Python Diary: Planet Python now available on Gopher</title>
	<guid>http://www.pythondiary.com/blog/Dec.13,2014/planet-python-now-available-gopher.html</guid>
	<link>http://www.pythondiary.com/blog/Dec.13,2014/planet-python-now-available-gopher.html</link>
	<description>&lt;p&gt;In additional efforts to revive the yet to be dead Gopher protocol.  I have created a Python script which I can either run manually or by using a cron job, which aggregates RSS feeds into a Gopher friendly format.  This can enable browsers such as Lynx to easily read RSS feeds without requiring a separate RSS reader or by downloading huge amounts of data over HTTP.  What more, is that all the articles it aggregates are all archived in Gopherspace, so they will always be available even if the blog hosting it dies.  This is the advantage is not using a live feed.  This act alone will immensely increase the overall content and information available over the Gopher protocol.  Each day, there are more than 10 new Python articles.  All these articles will also soon be indexed by the Gopher search server &lt;strong&gt;Veronica&lt;/strong&gt;, adding to it's overall knowledge of information.&lt;/p&gt;
&lt;p&gt;Adding new RSS feeds is as simple as updating a standard Python list, so as a result, I also added other Planet feeds, such as Debian and KDE.  Over time, I will add more interesting feeds that Gopher users would like to be-able to read from the comfort of a lightweight text-based browser.  I have not yet decided if I will open source the script or not.  I'd personally like to clean it up before the public eye sees it.&lt;/p&gt;
&lt;p&gt;For the moment, the script is run as a cron job once daily early in the morning hours, so while you are drinking your coffee and eating breakfast, you can open up Lynx or Overbite on your Android phone to quickly catch up on the latest Python, Debian, and KDE news.&lt;/p&gt;
&lt;p&gt;I will provide both the Gopher link and a link that goes through my own proxy for your convenience:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;gopher://gopher.veroneau.net/1Feeds&quot;&gt;gopher://gopher.veroneau.net/1Feeds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://iamkevin.ca/Gopher/1Feeds/&quot; rel=&quot;nofollow&quot;&gt;http://iamkevin.ca/Gopher/1Feeds/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
	<pubDate>Sat, 13 Dec 2014 12:00:00 +0000</pubDate>
</item>
<item>
	<title>Jean-Louis Fuchs: Livestream Recorder</title>
	<guid>https://ganwell.github.io/livestream-recorder.html</guid>
	<link>https://ganwell.github.io/livestream-recorder.html</link>
	<description>&lt;p&gt;Most live stream services convert the live stream into a VOD after streaming. Some
don't, some do bad and nasty things to stream before storing it. To avoid this
problem I created a simple live stream recorder. This is running for a few
streams I watch regularly stores the streams to my NAS.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Change the script for your livestreaming service!&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;code bash literal-block&quot;&gt;
&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; pip install livestreamer
&lt;/pre&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%Y-%m-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-%H-%M-%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.flv&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;livestreamer twitch.tv/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; source -o data/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; | grep -v -E '^(\[cli\]|error)'&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sleep_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sleep_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sleep_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;</description>
	<pubDate>Sat, 13 Dec 2014 08:29:00 +0000</pubDate>
</item>
<item>
	<title>Invent with Python: Making a Text Adventure Game with the cmd and textwrap Python Modules</title>
	<guid>http://inventwithpython.com/blog/2014/12/11/making-a-text-adventure-game-with-the-cmd-and-textwrap-python-modules/</guid>
	<link>http://inventwithpython.com/blog/2014/12/11/making-a-text-adventure-game-with-the-cmd-and-textwrap-python-modules/</link>
	<description>&lt;p&gt;Text adventures are an old game genre where the entire world is textually described as a series of rooms. Play involves entering simple text commands such as &quot;move north&quot; or &quot;eat pie&quot;. Each room in the game world has its own text description, items on the ground, and exits to adjacent rooms. &quot;Room&quot; is a general name for a single area in the game world: a room can be a large open canyon or the inside of a wardrobe. Multi-user text adventures, called MUDs or Multi-User Dungeons, were the precursor to modern MMORPGs. You can still play MUDs today by finding them on &lt;a href=&quot;http://www.mudconnect.com/&quot;&gt;The Mud Connector&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://inventwithpython.com/blogstatic/esotera.png?e35b04&quot; alt=&quot;Screenshot of an old text adventure game.&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Text adventures are easyto make because they don't require graphics. This tutorial uses two Python modules, &lt;code&gt;cmd&lt;/code&gt; and &lt;code&gt;textwrap&lt;/code&gt; and makes minimal use of object-oriented programming, but you don't have to know OOP concepts to follow. (But in general, text adventures would do very well with an object-oriented approach.) This tutorial is for beginner Python 3 programmers.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/asweigart/textadventuredemo&quot;&gt;The code for Text Adventure Demo is available on GitHub.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;more-1623&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;cmd&lt;/code&gt; module provides a generic command-line interface that has several useful features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Tab-completion&lt;/strong&gt; - Type a partial command and press tab, and the game can guess the rest of the command.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;History browsing&lt;/strong&gt; - Press the up arrow key to bring up the previously entered commands.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Automatic help&lt;/strong&gt; - A help system for commands is automatically generated for your commands.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Python Debugger (&lt;a href=&quot;http://pythonconquerstheuniverse.wordpress.com/2009/09/10/debugging-in-python/&quot;&gt;tutorial here&lt;/a&gt;) in the &lt;code&gt;pdb&lt;/code&gt; module makes use of the &lt;code&gt;cmd&lt;/code&gt; module for its command line interface.&lt;/p&gt;
&lt;p&gt;To get tab-completion to work on Windows, download and install this module: &lt;a href=&quot;https://pypi.python.org/pypi/pyreadline/2.0&quot;&gt;https://pypi.python.org/pypi/pyreadline/2.0&lt;/a&gt; (On Windows with Python 3, open a command window and type &lt;code&gt;cd c:\Python34\Scripts&lt;/code&gt; and then &lt;code&gt;pip install pyreadline&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Our program will be about turn-based, single-player, and about 800 lines long. You can download the complete version from here: &lt;a href=&quot;https://raw.githubusercontent.com/asweigart/textadventuredemo/master/textadventuredemo.py&quot;&gt;Download textadventuredemo.py&lt;/a&gt; or look at the &lt;a href=&quot;https://raw.githubusercontent.com/asweigart/textadventuredemo&quot;&gt;GitHub page&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Demo of Game Play&lt;/h3&gt;
&lt;p&gt;Here's what our text adventure game will look like. It won't have combat, but will have a small town that you can navigate while picking up and looking at different things. Money isn't implemented, but shops to buy and sell at are.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Text Adventure Demo!&lt;br /&gt;
====================&lt;/p&gt;
&lt;p&gt;(Type &quot;help&quot; for commands.)&lt;/p&gt;
&lt;p&gt;Town Square&lt;br /&gt;
===========&lt;br /&gt;
The town square is a large open space with a fountain in the center. Streets&lt;br /&gt;
lead in all directions.&lt;/p&gt;
&lt;p&gt;A welcome sign stands here.&lt;br /&gt;
A bubbling fountain of green water.&lt;/p&gt;
&lt;p&gt;North: North Y Street&lt;br /&gt;
South: South Y Street&lt;br /&gt;
East: East X Street&lt;br /&gt;
West: West X Street&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;look sign&lt;/strong&gt;&lt;br /&gt;
The welcome sign reads, &quot;Welcome to this text adventure demo. You can type&lt;br /&gt;
&quot;help&quot; for a list of commands to use. Be sure to check out Al's cool programming&lt;br /&gt;
books at http://inventwithpython.com&quot;&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;look fountain&lt;/strong&gt;&lt;br /&gt;
The water in the fountain is a bright green color. Is that... gatorade?&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;north&lt;/strong&gt;&lt;br /&gt;
You move to the north.&lt;br /&gt;
North Y Street&lt;br /&gt;
==============&lt;br /&gt;
The northern end of Y Street has really gone down hill. Pot holes are everywhere, as are stray cats, rats, and wombats.&lt;/p&gt;
&lt;p&gt;A sign stands here, not bolted to the ground.&lt;/p&gt;
&lt;p&gt;South: Town Square&lt;br /&gt;
East: Bakery&lt;br /&gt;
West: Thief Guild&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;look sign&lt;/strong&gt;&lt;br /&gt;
The sign reads, &quot;Do Not Take This Sign&quot;&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;take sign&lt;/strong&gt;&lt;br /&gt;
You take a sign.&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;inventory&lt;/strong&gt;&lt;br /&gt;
Inventory:&lt;br /&gt;
Do Not Take Sign Sign&lt;br /&gt;
Donut&lt;br /&gt;
Sword&lt;br /&gt;
README Note&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;look readme&lt;/strong&gt;&lt;br /&gt;
The README note reads, &quot;Welcome to the text adventure demo. Be sure to check out the source code to see how this game is put together.&quot;&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;eat donut&lt;/strong&gt;&lt;br /&gt;
You eat a donut&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;eat readme&lt;/strong&gt;&lt;br /&gt;
You eat a README note&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;eat sword&lt;/strong&gt;&lt;br /&gt;
You cannot eat that.&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;inventory&lt;/strong&gt;&lt;br /&gt;
Inventory:&lt;br /&gt;
Sword&lt;br /&gt;
Do Not Take Sign Sign&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;e&lt;/strong&gt;&lt;br /&gt;
You move to the east.&lt;br /&gt;
Bakery&lt;br /&gt;
======&lt;br /&gt;
The delightful smell of meat pies fills the air, making you hungry. The baker flashes a grin, as he slides a box marked &quot;Not Human Organs&quot; under a table with his foot.&lt;/p&gt;
&lt;p&gt;A &quot;Shopping HOWTO&quot; note rests on the ground.&lt;/p&gt;
&lt;p&gt;South: East X Street&lt;br /&gt;
West: North Y Street&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;list&lt;/strong&gt;&lt;br /&gt;
For sale:&lt;br /&gt;
- Meat Pie&lt;br /&gt;
- Donut&lt;br /&gt;
- Bagel&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;buy pie&lt;/strong&gt;&lt;br /&gt;
You have purchased a meat pie&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;buy pie&lt;/strong&gt;&lt;br /&gt;
You have purchased a meat pie&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;buy pie&lt;/strong&gt;&lt;br /&gt;
You have purchased a meat pie&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;inventory&lt;/strong&gt;&lt;br /&gt;
Inventory:&lt;br /&gt;
Meat Pie (3)&lt;br /&gt;
Sword&lt;br /&gt;
Do Not Take Sign Sign&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;quit&lt;/strong&gt;&lt;br /&gt;
Thanks for playing!&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3&gt;The &quot;Choose Your Own Adventure&quot; Mistake&lt;/h3&gt;
&lt;p&gt;Beginners tend to write code that looks like a &quot;Choose Your Own Adventure&quot; book: the execution starts at the beginning of the program, then it jumps to another part of the code (just like the reader would turn to some page at a branching point in the book). &lt;a href=&quot;http://inventwithpython.com/extra/dragon2.py&quot;&gt;I have an example of this type of program in my dragon2.py game.&lt;/a&gt; This works, but the program becomes unwieldy as it gets larger.&lt;/p&gt;
&lt;p&gt;You won't have a &lt;code&gt;townSquare()&lt;/code&gt; function that displays the Town Square text when called like so:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;townSquare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'The town square is a large open space with a fountain in the center. Streets lead in all directions.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TOWN_SQUARE_HAS_SIGN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A welcome sign stands here.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TOWN_SQUARE_HAS_FOUNTAIN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getFountainDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'North: North Y Street'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'South: South Y Street'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'East: East X Street'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'West: West X Street'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;A better way to program a game is a more &lt;strong&gt;data structure-centric&lt;/strong&gt; approach. This sounds very abstract. Here's an example of the data structure you'll have for locations in your game:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Town Square'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'The town square is a large open space with a fountain in the center. Streets lead in all directions.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'North Y Street'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'East X Street'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'South Y Street'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'West X Street'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Welcome Sign'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Fountain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'North Y Street'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'The northern end of Y Street has really gone down hill. Pot holes are everywhere, as are stray cats, rats, and wombats.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Thief Guild'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Bakery'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Town Square'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Do Not Take Sign Sign'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You can see that the general structure of the &lt;code&gt;worldRooms&lt;/code&gt; dictionary is:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Room Name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Description of room.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Name of room to the north.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Name of an item on the ground in this room'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Another item name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And here's a data structure to hold the different types of items in the game:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Welcome Sign'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUNDDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A welcome sign stands here.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a welcome sign'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'The welcome sign reads, &amp;quot;Welcome to this text adventure demo. You can type &amp;quot;help&amp;quot; for a list of commands to use. Be sure to check out Al&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s cool programming books at http://inventwithpython.com&amp;quot;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TAKEABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'welcome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sign'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Fountain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUNDDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A bubbling fountain of green water.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a fountain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'The water in the fountain is a bright green color. Is that... gatorade?'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TAKEABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fountain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You can see that the general structure of the &lt;code&gt;worldRooms&lt;/code&gt; dictionary is:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Item Name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUNDDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'How this item is described when on the ground.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A short description of this item.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A long description of this item, used when the player looks at it.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TAKEABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# whether this item can be taken and put in your inventory&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a word the player can use to refer to this item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'another word'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;By putting the rooms and items into data structures, now you can write a &lt;strong&gt;single&lt;/strong&gt; &lt;code&gt;displayLocation()&lt;/code&gt; function that can display &lt;em&gt;any&lt;/em&gt; room in the game because it works off of the values in the &lt;code&gt;worldRooms&lt;/code&gt; data structure. You can write code that deals with rooms and items generically. Writing a big game world will be much faster, just like how interchangeable parts speed up manufacturing and factories.&lt;/p&gt;
&lt;p&gt;A map of the full world looks something like this:&lt;/p&gt;
&lt;pre&gt;        +---------+    +---------+
        | Thief   O    | Bakery  |
        | Guild   |    |         |
+------++------O--+    +----O----+
| Used |
|Anvils|        Town Square     +--------+
|      O                        |Obs Deck|
+------++----O----+    +----O----/  /
        | Black-  O    | Wizard /  /
        | smith   |    | Tower    /
        +---------+    +---------+&lt;/pre&gt;
&lt;p&gt;(Data structures like these are normally put into classes in objet-oriented programming. To keep this text adventure demo simple, I'm using dictionaries and lists.)&lt;/p&gt;
&lt;h3&gt;Constant Variables and Global Variables&lt;/h3&gt;
&lt;p&gt;Start from scratch with a blank &lt;code&gt;textadventuredemo.py&lt;/code&gt; file. Add a &lt;code&gt;#! python3&lt;/code&gt; &lt;a href=&quot;https://stackoverflow.com/questions/2429511/why-do-people-write-usr-bin-env-python-on-the-first-line-of-a-python-script&quot;&gt;shebang line&lt;/a&gt;, some comments describing the program, and the &lt;code&gt;worldRooms&lt;/code&gt; and &lt;code&gt;worldItems&lt;/code&gt; data structures. Since this is mostly text and not code, you might want to just copy and paste the code from &lt;a href=&quot;https://raw.githubusercontent.com/asweigart/textadventuredemo/master/snippets/datastructures.py&quot;&gt;the snippet on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The keys in the above data structures are constant variables:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;DESC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'desc'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'north'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'south'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'east'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'west'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;UP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'up'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'down'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ground'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'shop'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;GROUNDDESC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'grounddesc'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'shortdesc'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'longdesc'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TAKEABLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'takeable'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;EDIBLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'edible'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'descwords'&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The reason that constant variables are used instead of typing the string directly is to minimize the chance of errors. If you mistype the string &lt;code&gt;'desc'&lt;/code&gt; as &lt;code&gt;'dsec'&lt;/code&gt;, Python will not immediately complain because since &lt;code&gt;'dsec'&lt;/code&gt; is a valid string. Later there will be a KeyError when you try to use &lt;code&gt;'dsec'&lt;/code&gt; as a key, but this is a vague error message that could have many causes.&lt;/p&gt;
&lt;p&gt;But if you are using constant variables instead, mistyping &lt;code&gt;DESC&lt;/code&gt; as &lt;code&gt;DSEC&lt;/code&gt; will immediately crash the program with a NameError exception since &lt;code&gt;DSEC&lt;/code&gt; isn't a variable name. &lt;strong&gt;The sooner your program crashes, the easier it is to find the crash-causing bug.&lt;/strong&gt; If your program silently continued to work, it will take longer to trace the original bug.&lt;/p&gt;
&lt;p&gt;There is also the &lt;code&gt;SCREEN_WIDTH&lt;/code&gt; constant, which will be used by the &lt;code&gt;textwrap&lt;/code&gt; module to determine how wide the program should assume the screen is:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;SCREEN_WIDTH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Th &lt;code&gt;SCREEN_WIDTH&lt;/code&gt; constant will be explained in the next section.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;location&lt;/code&gt; and &lt;code&gt;inventory&lt;/code&gt; global variables will keep track of the player's position and inventory. The &lt;code&gt;showFullExits&lt;/code&gt; variable tracks whether to show full or brief versions of the current room's exits (this is explained later in the &lt;code&gt;displayLocation()&lt;/code&gt; function). Add the following code to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Town Square'&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# start in town square&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'README Note'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Sword'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Donut'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# start with blank inventory&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;showFullExits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;(Normally your programs should avoid using global variables, but they're used here to keep the text adventure demo code simple.)&lt;/p&gt;
&lt;p&gt;Also, import the following modules into you program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;textwrap&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;h3&gt;The textwrap Module&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;textwrap&lt;/code&gt; module can intelligently break up a string into multiple lines of a given width. You might think this is easily done with code such as the following, which breaks the &lt;code&gt;desc&lt;/code&gt; string up into lines 80 characters wide:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'The town square is a large open space with a fountain in the center. Streets lead in all directions.'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;But this can cut off a line right in the middle of words, like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;The town square is a large open space with a fountain in the center. Streets lea
d in all directions.&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;textwrap.wrap()&lt;/code&gt; function is smart enough to avoid chopping lines in the middle of a word. It returns a list, with each line as a string in the list:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;textwrap&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'The town square is a large open space with a fountain in the center. Streets lead in all directions.'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;textwrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;The town square is a large open space with a fountain in the center. Streets
lead in all directions.&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To make it easy to change the screen width that &lt;code&gt;textwrap.wrap()&lt;/code&gt; uses, pass the &lt;code&gt;SCREEN_WIDTH&lt;/code&gt; constant for the second argument. That way, if you want to change the screen width you only need to change the &lt;code&gt;SCREEN_WIDTH&lt;/code&gt; value.&lt;/p&gt;
&lt;h3&gt;Location and Movement Functions&lt;/h3&gt;
&lt;p&gt;When the player walks into a room, the displayed text looks something like this:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Town Square&lt;br /&gt;
===========&lt;br /&gt;
The town square is a large open space with a fountain in the center. Streets&lt;br /&gt;
lead in all directions.&lt;/p&gt;
&lt;p&gt;A welcome sign stands here.&lt;br /&gt;
A bubbling fountain of green water.&lt;/p&gt;
&lt;p&gt;North: North Y Street&lt;br /&gt;
South: South Y Street&lt;br /&gt;
East: East X Street&lt;br /&gt;
West: West X Street
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The data for each room is tied up in the &lt;code&gt;worldRooms&lt;/code&gt; variable. You need a function that, given the name of the room as a string, will print out text like the above. This will need to print out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The room's name&lt;/li&gt;
&lt;li&gt;The room's description&lt;/li&gt;
&lt;li&gt;A list of the items on the ground in this room&lt;/li&gt;
&lt;li&gt;A list of all the available exits&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add the following code to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;displayLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;A helper function for displaying an area's description and exits.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Print the room name.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Print the room's description (using textwrap.wrap())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textwrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCREEN_WIDTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Print all the items on the ground.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUNDDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Print all the exits.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;exits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;exits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showFullExits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Exits: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;There will also be a &lt;code&gt;moveDirection()&lt;/code&gt; function that, given a north/south/east/west/up/down string argument, will change the &lt;code&gt;location&lt;/code&gt; global variable to the new location.&lt;/p&gt;
&lt;p&gt;But it will only do this if the direction was a valid one to make. If the player is able to move in the given direction, the new room's description will be displayed on the screen. Add the following code to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;moveDirection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;A helper function that changes the location of the player.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You move to the &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;displayLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You cannot move in that direction'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You'll see how these functions are used by the command line interface in a bit. But if you want to see how the code you have so far works, add the following temporary code:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# TEMPORARY CODE:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;displayLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'quit'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;moveDirection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Your program will now look like &lt;a href=&quot;https://raw.githubusercontent.com/asweigart/textadventuredemo/master/snippets/movement.py&quot;&gt;this source code on GitHub&lt;/a&gt;. When you run this program, you will be able to move around the game world by typing &lt;code&gt;north&lt;/code&gt;, &lt;code&gt;south&lt;/code&gt;, &lt;code&gt;east&lt;/code&gt;, &lt;code&gt;west&lt;/code&gt;, &lt;code&gt;up&lt;/code&gt;, and &lt;code&gt;down&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Notice a few things about this game world:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Moving in an invalid direction results in &lt;code&gt;'You cannot move in that direction'&lt;/code&gt; printed to the screen.&lt;/li&gt;
&lt;li&gt;At the top of the wizard's tower, the &quot;Magical Escalator to Nowhere&quot; room's up exit &lt;em&gt;leads to itself&lt;/em&gt;. This means if you exit up from this room, you will arrive in the same room. You can effectively go up an infinite amount of times. This is a side effect of the way the room data structures are set up.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are just a few more helper functions you'll need.&lt;/p&gt;
&lt;h3&gt;Item Helper Functions&lt;/h3&gt;
&lt;p&gt;These functions all work with the item data structure you have already set up. You won't quite see how these functions are needed right now, but they will be explained later.&lt;/p&gt;
&lt;p&gt;Remember that the &lt;code&gt;worldItems&lt;/code&gt; variable is a dictionary with key-value pairs that look like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;s&quot;&gt;'Fountain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUNDDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A bubbling fountain of green water.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a fountain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'The water in the fountain is a bright green color. Is that... gatorade?'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TAKEABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fountain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The helper functions for items are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getAllDescWords()&lt;/code&gt; - Given a list of strings of item names, return a list with all of these items' DESCWORDS strings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getAllFirstDescWords()&lt;/code&gt; - Given a list of strings of item names, return a list with all of these items' first DESCWORDS strings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getFirstItemMatchingDesc()&lt;/code&gt; - Given a string and a list of item names, return a string of the name of the first item that has a DESCWORD string that matches the given string argument.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getAllItemsMatchingDesc()&lt;/code&gt; - Given a string and a list of item names, return a list of strings of item names for items that have the given string argument as one of their DESCWORD strings.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add the following code to your programs:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getAllDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Returns a list of &amp;quot;description words&amp;quot; for each item named in itemList.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# make itemList unique&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;descWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;descWords&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getAllFirstDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Returns a list of the first &amp;quot;description word&amp;quot; in the list of&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    description words for each item named in itemList.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# make itemList unique&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;descWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;descWords&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getFirstItemMatchingDesc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# make itemList unique&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getAllItemsMatchingDesc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# make itemList unique&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;matchingItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;matchingItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matchingItems&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;list(set(itemList))&lt;/code&gt; code is a Pythonic way to get rid of duplicate values in a list by coverting the list to a set and back to a list. Note that this might change the order of the values in the list, since the set data type is unordered.&lt;/p&gt;
&lt;h3&gt;Creating a Command Line Interface with the cmd Module&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;cmd&lt;/code&gt; module frees us from reinventing the wheel when creating the command line interface for the text adventure. First, create a class that subclasses &lt;code&gt;cmd.Cmd&lt;/code&gt;. The &lt;code&gt;cmd&lt;/code&gt; module will read any methods that begin with &lt;code&gt;do_&lt;/code&gt;, &lt;code&gt;complete_&lt;/code&gt; and &lt;code&gt;help_&lt;/code&gt; for it's command, tab-completion, and help system features, respectively.&lt;/p&gt;
&lt;p&gt;Here's a short example. Add the following code to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TextAdventureCmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;prompt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt; '&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# The default() method is called when none of the other do_*() command methods match.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'I do not understand that command. Type &amp;quot;help&amp;quot; for a list of commands.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# A very simple &amp;quot;quit&amp;quot; command to terminate the program:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Quit the game.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# this exits the Cmd application loop in TextAdventureCmd.cmdloop()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;help_combat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Combat is not implemented in this program.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;There are several cmd-specific things about this code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The string in the &lt;code&gt;prompt&lt;/code&gt; member variable is printed when the player is expected to begin typing in a command. In your text adventure's case, this will be the &lt;code&gt;'\n&gt;'&lt;/code&gt; string: a newline followed by a &amp;gt; character.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;default()&lt;/code&gt; method will be called by the command line interface when it cannot understand the command the player typed. In this case, a &quot;I do not understand&quot; message is printed to the screen.&lt;/li&gt;
&lt;li&gt;When the player types in a command, the command line interface checks if there are any methods of the same name as the command to handle it. For example, &quot;quit&quot; would be handled by &lt;code&gt;do_quit()&lt;/code&gt;. If the player entered the &quot;qwerty&quot; command but there is no &lt;code&gt;do_qwerty()&lt;/code&gt; method, the &lt;code&gt;default()&lt;/code&gt; method is called instead.&lt;/li&gt;
&lt;li&gt;When a &lt;code&gt;do_&amp;lt;command&amp;gt;()&lt;/code&gt; returns, the command line interface will let the player type in another command. If a &lt;code&gt;do_&amp;lt;command&amp;gt;()&lt;/code&gt; returns the value &lt;code&gt;True&lt;/code&gt;, the command line interface will stop asking for commands.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;do_quit()&lt;/code&gt; method implements the &quot;quit&quot; command. Since it returns &lt;code&gt;True&lt;/code&gt;, the command line interface will stop asking the player for commands.&lt;/li&gt;
&lt;li&gt;The docstring at the top of each &lt;code&gt;do_&amp;lt;command&amp;gt;()&lt;/code&gt; function will automatically be used for the command line interface's help system.
&lt;li&gt;The &lt;code&gt;help_combat()&lt;/code&gt; method implements the &quot;help combat&quot; command. You can add as many help topics as you want: typing &quot;help&quot; by itself lists all of them. Since there is no combat in this text adventure, this function prints a message telling the player there is no combat.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;arg&lt;/code&gt; parameter in &lt;code&gt;default()&lt;/code&gt; and &lt;code&gt;do_quit()&lt;/code&gt; will be explained later.&lt;/li&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;To kick off the command line interface code, you will need to call the &lt;code&gt;cmd.Cmd&lt;/code&gt; object's &lt;code&gt;cmdloop()&lt;/code&gt; method. Take out the temporary code in the &lt;code&gt;while True:&lt;/code&gt; loop and add the following to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Text Adventure Demo!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'===================='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'(Type &amp;quot;help&amp;quot; for commands.)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;displayLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TextAdventureCmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmdloop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Thanks for playing!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Your program should now look like &lt;a href=&quot;https://raw.githubusercontent.com/asweigart/textadventuredemo/master/snippets/basiccmdloop.py&quot;&gt;this file on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;The cmd Help System&lt;/h3&gt;
&lt;p&gt;When you run this program, the movement commands won't work (they were implemented in the temporary &lt;code&gt;while&lt;/code&gt; loop you removed) but you can run the &quot;help&quot;, &quot;help quit&quot;, and &quot;help combat&quot; commands:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;strong&gt;help&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Documented commands (type help ):&lt;br /&gt;
========================================&lt;br /&gt;
help  quit&lt;/p&gt;
&lt;p&gt;Miscellaneous help topics:&lt;br /&gt;
==========================&lt;br /&gt;
combat&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;help quit&lt;/strong&gt;&lt;br /&gt;
Quit the game.&lt;/p&gt;
&lt;p&gt;&amp;gt; &lt;strong&gt;help combat&lt;/strong&gt;&lt;br /&gt;
Combat is not implemented in this program.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Notice that the &quot;quit&quot; command's docstring has been used for the &quot;help quit&quot; command. You can end this program by running &quot;quit&quot;, which makes the command line interface call the &lt;code&gt;do_quit()&lt;/code&gt; method. Since it is a &lt;code&gt;do_&amp;lt;command&amp;gt;()&lt;/code&gt; method that returns &lt;code&gt;True&lt;/code&gt;, it causes the &lt;code&gt;TextAdventureCmd().cmdloop()&lt;/code&gt; function return and the execution reaches the end of the source code.&lt;/p&gt;
&lt;p&gt;As a free feature provided by the command line interface, pressing the up arrow key will cycle through the command history. This provides an easy way to re-enter commands you previously typed.&lt;/p&gt;
&lt;h3&gt;The Move Commands and Tab Completion&lt;/h3&gt;
&lt;p&gt;In order to move the player around, you'll need a &lt;code&gt;do_north()&lt;/code&gt; method for the &quot;north&quot; command, a &lt;code&gt;do_south()&lt;/code&gt; method for the &quot;south&quot; command, and so on. All of these methods will simply call the &lt;code&gt;moveDirection()&lt;/code&gt; function with the appropriate argument. Add the following to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;c&quot;&gt;# These direction commands have a long (i.e. north) and show (i.e. n) form.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Since the code is basically the same, I put it in the moveDirection()&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# function.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_north&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Go to the area to the north, if possible.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;moveDirection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'north'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_south&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Go to the area to the south, if possible.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;moveDirection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'south'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_east&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Go to the area to the east, if possible.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;moveDirection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'east'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_west&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Go to the area to the west, if possible.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;moveDirection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'west'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Go to the area upwards, if possible.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;moveDirection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'up'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_down&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Go to the area downwards, if possible.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;moveDirection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'down'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Since the code is the exact same, we can just copy the&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# methods with shortened names:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;do_n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_north&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;do_s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_south&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;do_e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_east&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;do_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_west&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;do_u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_up&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;do_d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_down&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Because the &quot;n&quot; and &quot;north&quot; commands would do the same thing, we can create another function with the same code by assigning &lt;code&gt;do_n = do_north&lt;/code&gt;, and so on.&lt;/p&gt;
&lt;p&gt;To toggle the Boolean value in the global &lt;code&gt;showFullExits&lt;/code&gt; variable, an &quot;exits&quot; command can be implemented in &lt;code&gt;do_exits()&lt;/code&gt;. Add the following to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_exits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Toggle showing full exit descriptions or brief exit descriptions.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showFullExits&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;showFullExits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showFullExits&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showFullExits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Showing full exit descriptions.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Showing brief exit descriptions.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;With this code, your program should look like &lt;a href=&quot;https://raw.githubusercontent.com/asweigart/textadventuredemo/master/snippets/cmdmovement.py&quot;&gt;this file on GitHub&lt;/a&gt;. When you run this program, the north/south/east/west/up/down commands will all work.&lt;/p&gt;
&lt;h3&gt;Inventory&lt;/h3&gt;
&lt;p&gt;The &quot;inventory&quot; command will display the contents of the &lt;code&gt;inventory&lt;/code&gt; global variable. Rather than just a &lt;code&gt;do_inventory()&lt;/code&gt; method that runs &lt;code&gt;print(inventory)&lt;/code&gt;, there's additional code that checks if the player has more than one of a type of item. So an &lt;code&gt;inventory&lt;/code&gt; value of &lt;code&gt;['Donut', 'Donut', 'Donut']&lt;/code&gt; will display a single line: &lt;code&gt;Donut (3)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add the following code to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Display a list of the items in your possession.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Inventory:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;  (nothing)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# first get a count of each distinct item in the inventory&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# get a list of inventory items with duplicates removed:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Inventory:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'  &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; (&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;)'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'  '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;do_inv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_inventory&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To add an identical &quot;inv&quot; shortcut command, the &lt;code&gt;do_inv = do_inventory&lt;/code&gt; line is added after the &lt;code&gt;do_inventory()&lt;/code&gt; function.&lt;/p&gt;
&lt;h3&gt;Taking and Dropping Items&lt;/h3&gt;
&lt;p&gt;Every room in the &lt;code&gt;worldRooms&lt;/code&gt; data structure has a &lt;code&gt;GROUND&lt;/code&gt; key whose value is a list of items on the ground of that room. By removing items from the &lt;code&gt;inventory&lt;/code&gt; list and adding them to the &lt;code&gt;GROUND&lt;/code&gt; list, the player can &quot;drop&quot; the item in a certain room. The items will continue to be on the ground even if the player leaves the room and comes back. Similarly, by removing a value from the &lt;code&gt;GROUND&lt;/code&gt; list and adding it to the &lt;code&gt;inventory&lt;/code&gt; list, the player can &quot;take&quot; the item.&lt;/p&gt;
&lt;p&gt;The &quot;take&quot; and &quot;drop&quot; commands are a bit more complicated: There is text that follows the &quot;take&quot; and &quot;drop&quot; words such as in &quot;take sign&quot; or &quot;drop sword&quot;. The additional text is passed to the &lt;code&gt;do_&amp;lt;command&amp;gt;()&lt;/code&gt; function for its &lt;code&gt;arg&lt;/code&gt; parameter. So if the player enters the command &quot;drop sword&quot;, the &lt;code&gt;do_drop()&lt;/code&gt; method is called with &lt;code&gt;'sword'&lt;/code&gt; passed for its &lt;code&gt;arg&lt;/code&gt; parameter.&lt;/p&gt;
&lt;p&gt;The drop and take methods will have to do more than modify &lt;code&gt;inventory&lt;/code&gt; and the &lt;code&gt;GROUND&lt;/code&gt; key's value. They must handle the player forgetting to specify what to take/drop, check that the item is actually on the ground/inventory, and if the object is &quot;takeable&quot; (that is, it's &lt;code&gt;TAKEABLE&lt;/code&gt; key's value is &lt;code&gt;True&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Also, items can be referred to by any of it's &lt;code&gt;DESCWORDS&lt;/code&gt; from the &lt;code&gt;worldItems&lt;/code&gt; data structure. For example, the sword item:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;s&quot;&gt;'Sword'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUNDDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A sword lies on the ground.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a sword'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A longsword, engraved with the word, &amp;quot;Exkaleber&amp;quot;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sword'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'exkaleber'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'longsword'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},}&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;...has a &lt;code&gt;DESCWORDS&lt;/code&gt; value of &lt;code&gt;['sword', 'exkaleber', 'longsword']&lt;/code&gt;. So the &quot;drop sword&quot;, &quot;drop exkaleer&quot;, and &quot;drop longsword&quot; would all refer to the same sword to drop.&lt;/p&gt;
&lt;p&gt;Add the following code to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_take&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;take &amp;lt;item&amp;gt; - Take an item on the ground.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# put this value in a more suitably named variable&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;itemToTake&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemToTake&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Take what? Type &amp;quot;look&amp;quot; the items on the ground here.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;cantTake&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# get the item name that the player's command describes&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllItemsMatchingDesc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemToTake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAKEABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;cantTake&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# there may be other items named this that you can take, so we continue checking&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You take &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# remove from the ground&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# add to inventory&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cantTake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You cannot take &amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemToTake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'That is not on the ground.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;drop &amp;lt;item&amp;gt; - Drop an item from your inventory onto the ground.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# put this value in a more suitably named variable&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;itemToDrop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# get a list of all &amp;quot;description words&amp;quot; for each item in the inventory&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;invDescWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# find out if the player doesn't have that item&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemToDrop&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You do not have &amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; in your inventory.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemToDrop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# get the item name that the player's command describes&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getFirstItemMatchingDesc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemToDrop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You drop &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# remove from inventory&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# add to the ground&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;After you are finished, your program will look like &lt;a href=&quot;https://raw.githubusercontent.com/asweigart/textadventuredemo/master/snippets/takedrop.py&quot;&gt;this file on GitHub&lt;/a&gt;. When you run the program, you will be able to drop and take items (provided they have the &lt;code&gt;TAKEABLE&lt;/code&gt; setting).&lt;/p&gt;
&lt;h3&gt;Tab Completion&lt;/h3&gt;
&lt;p&gt;if the player types a partial command, such as &quot;nor&quot;, they can press the Tab key and the command line interface will complete the command: &quot;north&quot;. The command line  interface knows this because &quot;north&quot; is the only command that begins with &quot;nor&quot;. If there were other commands that began with &quot;nor&quot;, pressing Tab would bring up a list of possible complete commands.&lt;/p&gt;
&lt;p&gt;However, say that the player has an &lt;code&gt;inventory&lt;/code&gt; value of &lt;code&gt;['sword', 'swingset', 'swampwater']&lt;/code&gt; and had entered &quot;drop sw&quot; and pressed Tab. The command line interface knows all the commands because it can see what &lt;code&gt;do_%lt;command&amp;gt;()&lt;/code&gt; functions there are. But items on the ground or in the inventory are specific to your program, so you will need a way to tell the command line interface what it should return for possible tab completions.&lt;/p&gt;
&lt;p&gt;This is done by the &lt;code&gt;complete_&amp;lt;command&amp;gt;()&lt;/code&gt; methods. These methods have the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;text&lt;/code&gt; is the part after the command. If &quot;drop sw&quot; were being completed, &lt;code&gt;text&lt;/code&gt; would be set to &lt;code&gt;'sw'&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;line&lt;/code&gt; is the entire command that was entered. If &quot;drop sw&quot; were being completed, &lt;code&gt;line&lt;/code&gt; would be set to &lt;code&gt;'drop sw'&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;begidx&lt;/code&gt; is index in &lt;code&gt;line&lt;/code&gt; where the last word begins. If &quot;drop sw&quot; were being completed, &lt;code&gt;begidx&lt;/code&gt; would be &lt;code&gt;5&lt;/code&gt;, which is where &lt;code&gt;'sw'&lt;/code&gt; begins.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;endidx&lt;/code&gt; is index in &lt;code&gt;line&lt;/code&gt; where the last word begins. If &quot;drop sw&quot; were being completed, &lt;code&gt;endidx&lt;/code&gt; would be &lt;code&gt;7&lt;/code&gt;, which is where &lt;code&gt;'sw'&lt;/code&gt; ends.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the Tab key is pressed, the command's &lt;code&gt;complete_&amp;lt;command&amp;gt;()&lt;/code&gt; method is called and passed the command typed in so far. For example, typing &quot;drop sw&quot;-Tab will call the &lt;code&gt;complete_drop()&lt;/code&gt; method and typing &quot;take sw&quot;-Tab will call the &lt;code&gt;complete_take()&lt;/code&gt; method. If a &lt;code&gt;complete_&amp;lt;command&amp;gt;()&lt;/code&gt; method command doesn't exist, such as not &lt;code&gt;complete_qwerty()&lt;/code&gt; method for &quot;qwerty sw&quot;, then the command line interface does nothing.&lt;/p&gt;
&lt;p&gt;Using the &lt;code&gt;getAllFirstDescWords()&lt;/code&gt; helper function, you can add &lt;code&gt;complete_take()&lt;/code&gt; and &lt;code&gt;complete_drop()&lt;/code&gt; methods to determine what item the player is trying to take or drop. Add the following to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;complete_take&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;begidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# if the user has only typed &amp;quot;take&amp;quot; but no item name:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllFirstDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# otherwise, get a list of all &amp;quot;description words&amp;quot; for ground items matching the command text so far:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAKEABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# make list unique&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;complete_drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;begidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;itemToDrop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# get a list of all &amp;quot;description words&amp;quot; for each item in the inventory&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;invDescWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'drop &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# command is complete&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# if the user has only typed &amp;quot;drop&amp;quot; but no item name:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemToDrop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllFirstDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# otherwise, get a list of all &amp;quot;description words&amp;quot; for inventory items matching the command text so far:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# make list unique&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Your program will look like &lt;a href=&quot;https://raw.githubusercontent.com/asweigart/textadventuredemo/master/snippets/takedrop_complete.py&quot;&gt;this file on GitHub&lt;/a&gt;. When you run the program, you will be able to type &quot;drop sw&quot;, then press Tab, and the command will complete to &quot;drop sword&quot;.&lt;/p&gt;
&lt;h3&gt;Looking at Things&lt;/h3&gt;
&lt;p&gt;The &quot;look&quot; command will have similar &lt;code&gt;do_look()&lt;/code&gt; and &lt;code&gt;complete_look()&lt;/code&gt; methods. Typing &quot;look&quot; will print the current room's &lt;code&gt;DEC&lt;/code&gt; key's value. Typing &quot;look exits&quot; will print the names of all the adjacent rooms, while &quot;look &quot; will print the name of the room in that direction. The player can also type &quot;look &quot; to look at a item that is either on the ground or in their inventory.&lt;/p&gt;
&lt;p&gt;Enter the following code for the &quot;look&quot; command:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_look&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Look at an item, direction, or the area:&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;&amp;quot;look&amp;quot; - display the current area's description&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;&amp;quot;look &amp;lt;direction&amp;gt;&amp;quot; - display the description of the area in that direction&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;&amp;quot;look exits&amp;quot; - display the description of all adjacent areas&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;&amp;quot;look &amp;lt;item&amp;gt;&amp;quot; - display the description of an item on the ground or in your inventory&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# &amp;quot;look&amp;quot; will re-print the area description&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;displayLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'exits'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'north'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'west'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'east'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'south'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'up'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'down'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'e'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'s'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'u'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'e'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'s'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'u'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UP&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOWN&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'There is nothing in that direction.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# see if the item being looked at is on the ground at this location&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getFirstItemMatchingDesc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textwrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCREEN_WIDTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# see if the item being looked at is in the inventory&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getFirstItemMatchingDesc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textwrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCREEN_WIDTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You do not see that nearby.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;complete_look&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;begidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# get a list of all &amp;quot;description words&amp;quot; for each item in the inventory&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;invDescWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;groundDescWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;shopDescWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]))&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invDescWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groundDescWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shopDescWords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'look &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# command is complete&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# if the user has only typed &amp;quot;look&amp;quot; but no item name, show all items on ground, shop and directions:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getAllFirstDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getAllFirstDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# make list unique&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# otherwise, get a list of all &amp;quot;description words&amp;quot; for ground items matching the command text so far:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groundDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# otherwise, get a list of all &amp;quot;description words&amp;quot; for items for sale at the shop (if this is one):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shopDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# check for matching directions&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NORTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# get a list of all &amp;quot;description words&amp;quot; for inventory items matching the command text so far:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lookingAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# make list unique&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The program will now look like &lt;a href=&quot;https://raw.githubusercontent.com/asweigart/textadventuredemo/master/snippets/look.py&quot;&gt;this file on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Shops&lt;/h3&gt;
&lt;p&gt;Shops are rooms that have a &lt;code&gt;SHOP&lt;/code&gt; key, such as the Bakery room:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;s&quot;&gt;'Bakery'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'The delightful smell of meat pies fills the air, making you hungry. The baker flashes a grin, as he slides a box marked &amp;quot;Not Human Organs&amp;quot; under a table with his foot.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'North Y Street'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SOUTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'East X Street'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Meat Pie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Donut'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Bagel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Shop Howto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The value for the &lt;code&gt;SHOP&lt;/code&gt; is a list of items that the shop sells. Inside these rooms, the player can run the &quot;list&quot; command (to see what is for sale), the &quot;buy&quot; command (to purchase an item), and the &quot;sell&quot; command (to pawn an item from the player's inventory). For simplicity, any item can be sold to any shop. Also, money is currently not implemented in this game, so items in the shop are free.&lt;/p&gt;
&lt;p&gt;Several things must be checked when the player tries to run these commands: Is the player currently in a shop room? Did the player forget to specify what they want to buy or sell? Does the shop sell what the player wants to buy? Does the player have the item they want to sell to the shop? The following code implements the &quot;list&quot;, &quot;buy&quot;, and &quot;sell&quot; commands and addresses all these issues. Add the following code to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;List the items for sale at the current location's shop. &amp;quot;list full&amp;quot; will show details of the items.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'This is not a shop.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'For sale:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'  - &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'full'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textwrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCREEN_WIDTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_buy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;buy &amp;lt;item&amp;gt;&amp;quot; - buy an item at the current location's shop.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'This is not a shop.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;itemToBuy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemToBuy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Buy what? Type &amp;quot;list&amp;quot; or &amp;quot;list full&amp;quot; to see a list of items for sale.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getFirstItemMatchingDesc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemToBuy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# NOTE - If you wanted to implement money, here is where you would add&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# code that checks if the player has enough, then deducts the price&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# from their money.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You have purchased &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; is not sold here. Type &amp;quot;list&amp;quot; or &amp;quot;list full&amp;quot; to see a list of items for sale.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemToBuy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;complete_buy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;begidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;itemToBuy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# if the user has only typed &amp;quot;buy&amp;quot; but no item name:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemToBuy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllFirstDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# otherwise, get a list of all &amp;quot;description words&amp;quot; for shop items matching the command text so far:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# make list unique&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_sell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;sell &amp;lt;item&amp;gt;&amp;quot; - sell an item at the current location's shop.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'This is not a shop.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;itemToSell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemToSell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Sell what? Type &amp;quot;inventory&amp;quot; or &amp;quot;inv&amp;quot; to see your inventory.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemToSell&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;# NOTE - If you wanted to implement money, here is where you would add&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;# code that gives the player money for selling the item.&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You have sold &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You do not have &amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;. Type &amp;quot;inventory&amp;quot; or &amp;quot;inv&amp;quot; to see your inventory.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemToSell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;complete_sell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;begidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SHOP&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldRooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;itemToSell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# if the user has only typed &amp;quot;sell&amp;quot; but no item name:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemToSell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllFirstDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# otherwise, get a list of all &amp;quot;description words&amp;quot; for inventory items matching the command text so far:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# make list unique&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;When you are finished typing in this code, your program will look like &lt;a href=&quot;https://raw.githubusercontent.com/asweigart/textadventuredemo/master/snippets/shops.py&quot;&gt;this file on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Eating&lt;/h3&gt;
&lt;p&gt;Some items are marked as edible by having an &lt;code&gt;EDIBLE&lt;/code&gt; key set to &lt;code&gt;True&lt;/code&gt; For example, Meat Pies, Bagels, and Donuts are all edible items:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;s&quot;&gt;'Meat Pie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUNDDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A suspicious meat pie rests on the ground.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a meat pie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A meat pie. It tastes like chicken.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EDIBLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'meat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Bagel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUNDDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A bagel rests on the ground. (Gross.)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a bagel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'It is a donut-shaped bagel.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EDIBLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bagel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'Donut'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GROUNDDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A donut rests on the ground. (Gross.)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a donut'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LONGDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'It is a bagel-shaped donut.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EDIBLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'donut'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;For simplicity, eating things doesn't do anything other than remove them from your inventory. But you could implement health or hunger levels in your text adventure, and need eat (or drink) items or else have adverse effects. There's nothing new about how the &lt;code&gt;do_eat()&lt;/code&gt; and &lt;code&gt;complete_eat()&lt;/code&gt; functions work. Add the following code to your program:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;eat &amp;lt;item&amp;gt;&amp;quot; - eat an item in your inventory.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;itemToEat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemToEat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Eat what? Type &amp;quot;inventory&amp;quot; or &amp;quot;inv&amp;quot; to see your inventory.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;cantEat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllItemsMatchingDesc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemToEat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EDIBLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;cantEat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# there may be other items named this that you can eat, so we continue checking&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# NOTE - If you wanted to implement hunger levels, here is where&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# you would add code that changes the player's hunger level.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You eat &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHORTDESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cantEat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You cannot eat that.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'You do not have &amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;. Type &amp;quot;inventory&amp;quot; or &amp;quot;inv&amp;quot; to see your inventory.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemToEat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;complete_eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;begidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;itemToEat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# if the user has only typed &amp;quot;eat&amp;quot; but no item name:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemToEat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAllFirstDescWords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# otherwise, get a list of all &amp;quot;description words&amp;quot; for edible inventory items matching the command text so far:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DESCWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worldItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EDIBLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;descWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possibleItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# make list unique&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;With the above code added, you will have finished the entire text adventure program. This program can be downloaded from GitHub: &lt;a href=&quot;https://raw.githubusercontent.com/asweigart/textadventuredemo/master/textadventuredemo.py&quot;&gt;https://raw.githubusercontent.com/asweigart/textadventuredemo/master/textadventuredemo.py&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Ideas for New Features&lt;/h3&gt;
&lt;p&gt;That's it for this text adventure tutorial. Because of the &lt;code&gt;cmd&lt;/code&gt; module's command line interface features, it is fairly easy to add new commands to your game. From here, there are several things you could add to your game:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add HP, hunger/thirst levels, and status effects. (These are common to RPG-like games.)&lt;/li&gt;
&lt;li&gt;Combat with randomly wandering monsters.&lt;/li&gt;
&lt;li&gt;Casting magic spells, or learning new spells from spellbook items.&lt;/li&gt;
&lt;li&gt;Drinking items, including potions which can have magical effects.&lt;/li&gt;
&lt;li&gt;Equipping items, such as wearing helmets or wielding swords.&lt;/li&gt;
&lt;li&gt;Money, including different types of currencies that shops can accept or deny.&lt;/li&gt;
&lt;li&gt;Several new rooms to expand the world.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are interested in creating a &lt;a href=&quot;http://www.roguebasin.com/index.php?title=Main_Page&quot;&gt;roguelike&lt;/a&gt; (a genre that is sort of like the Diablo games except with ASCII-art graphics), the libtcod module will be very helpful. There are tutorials &lt;a href=&quot;http://www.roguebasin.com/index.php?title=Complete_Roguelike_Tutorial,_using_python%2Blibtcod&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://kooneiform.wordpress.com/2009/03/29/241/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I detail the differences between these genre of text-based games in my blog post, &lt;a href=&quot;http://inventwithpython.com/blog/2013/06/05/text-adventure-vs-mud-vs-roguelike-vs-dwarf-fortress/&quot;&gt;Text Adventure vs. MUD vs. Roguelike vs. Dwarf Fortress&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can try playing MUDs you find through &lt;a href=&quot;http://www.mudconnect.com/&quot;&gt;The Mud Connector&lt;/a&gt; to get new ideas for additional features you'd like to add. Good luck, and have fun!&lt;/p&gt;</description>
	<pubDate>Fri, 12 Dec 2014 21:39:52 +0000</pubDate>
</item>
<item>
	<title>Invent with Python: Why is Object-Oriented Programming Useful? (With a Role Playing Game Example)</title>
	<guid>http://inventwithpython.com/blog/2014/12/02/why-is-object-oriented-programming-useful-with-an-role-playing-game-example/</guid>
	<link>http://inventwithpython.com/blog/2014/12/02/why-is-object-oriented-programming-useful-with-an-role-playing-game-example/</link>
	<description>&lt;p&gt;This blog post is those still new to programming and have probably heard about &quot;object-oriented programming&quot;, &quot;OOP&quot;, &quot;classes&quot;, &quot;inheritance/encapsulation/polymorphism&quot;, and other computer science terms but still don't get what exactly OOP is used for. In this post I'll explain &lt;em&gt;why&lt;/em&gt; OOP is used and how it makes coding easier. This post uses Python 3 code, but the concepts apply to any programming language.&lt;/p&gt;

&lt;p&gt;There are two key non-OOP concepts to understand right off the bat:&lt;br /&gt;
&lt;ol&gt;
    &lt;li&gt;&lt;strong&gt;Duplicate code is a Bad Thing.&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Code will always be changed.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;


&lt;span id=&quot;more-1717&quot;&gt;&lt;/span&gt;

&lt;p&gt;Aside from small &quot;throw-away&quot; programs that are written for some single task and only run once, you'll almost always need to update your code to either &lt;strong&gt;fix bugs&lt;/strong&gt; or &lt;strong&gt;add new features&lt;/strong&gt;. A large part of writing good software is writing software that is readable and easy to change.&lt;/p&gt;

&lt;p&gt;If you have copy/pasted code in your program, changing it requires making the same change to multiple places in your program. This is problematic. If you miss applying the change to some places, you'll fail to fix the bug everywhere or implement the new feature inconsistently. &lt;em&gt;Duplicate code is a Bad Thing.&lt;/em&gt; Having duplicate code in your program is setting yourself up for bugs and headache.&lt;/p&gt;

&lt;p&gt;Functions let you get rid of duplicate code. You write the code in a function once, and just call the function everywhere your program needs that code run. Updating the function's code updates it everywhere the function is called automatically. Just as functions makes updating code easier, using object-oriented programming techniques also organizes your code to make changes easier. &lt;em&gt;And code will always be changed.&lt;/em&gt;&lt;/p&gt;

&lt;strong&gt;The Role Playing Game Example&lt;/strong&gt;

&lt;p&gt;Most OOP tutorials stink. They have &quot;Car&quot; classes with &quot;Honk&quot; methods and other examples that are unrelatable to the actual programs that new coders write or have used before. So this blog will use an RPG-style video game (think World of Warcraft, Pokemon, or Dungeons &amp;#038; Dragons). We're used to thinking of things in these games as a collection of integers and strings. Check out all the numbers on this Diablo status screen or D &amp;#038; D character sheet:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://inventwithpython.com/blogstatic/oop_stats1.jpg?e35b04&quot;&gt;&lt;img src=&quot;http://inventwithpython.com/blogstatic/oop_stats1.jpg?e35b04&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://inventwithpython.com/blogstatic/oop_stats2.jpg?e35b04&quot;&gt;&lt;img src=&quot;http://inventwithpython.com/blogstatic/oop_stats2.jpg?e35b04&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Taking out the graphics from these RPG video games, the characters, armor, and other objects are just a bunch of integer or string values in variables. Without using object-oriented concepts, you could implement these things in Python code like this:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;name = 'Elsa'
health = 50
magicPoints = 80
inventory = {'gold': 40, 'healing potion': 2, 'key': 1}

print('The hero %s has %s health.' % (name, health))&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;The above variable names are pretty generic. To add monsters in this program, you'll need to rename the player character's variables and make new ones for the monsters:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;heroName = 'Elsa'
heroHealth = 50
heroMagicPoints = 80
heroInventory = {'gold': 40, 'healing potion': 2, 'key': 1}
monsterName = 'Goblin'
monsterHealth = 20
monsterMagicPoints = 0
monsterInventory = {'gold': 12, 'dagger': 1}

print('The hero %s has %s health.' % (heroName, heroHealth))&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;But of course you'll want to have more than one monster, but then you'll have variables like &lt;code&gt;monster1Name&lt;/code&gt;, &lt;code&gt;monster2Name&lt;/code&gt;, etc. That's a poor way to code, so maybe you'll make the monster variables into lists:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;monsterName = ['Goblin', 'Dragon', 'Goblin']
monsterHealth = [20, 300, 18]
monsterMagicPoints = [0, 200, 0]
monsterInventory = [{'gold': 12, 'dagger': 1}, {'gold': 890, 'magic amulet': 1}, {'gold': 15, 'dagger': 1}]&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;Then you could just have the first goblin's stats be the values at index &lt;code&gt;0&lt;/code&gt; in the lists, the dragon's stats are at index &lt;code&gt;1&lt;/code&gt;, and the other goblin's stats are at index &lt;code&gt;2&lt;/code&gt;. This way you could have multiple monsters contained in these variables.&lt;/p&gt;

&lt;p&gt;But this kind of code easily leads to bugs. If your lists get out of sync, the program will no longer work correctly. Say the player vanquishes the goblin at index &lt;code&gt;0&lt;/code&gt; and the program calls a vanquishMonster() function. But the function has a bug and deletes the values from all the lists except (accidentally) &lt;code&gt;monsterInventory&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;def vanquishMonster(monsterIndex):
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;del monsterName[monsterIndex]
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;del monsterHealth[monsterIndex]
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;del monsterMagicPoints[monsterIndex]
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# Note there is no del for monsterInventory

vanquishMonster(0)&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;The monster lists end up looking like:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;monsterName = ['Dragon', 'Goblin']
monsterHealth = [300, 18]
monsterMagicPoints = [200, 0]
monsterInventory = [{'gold': 12, 'dagger': 1}, {'gold': 890, 'magic amulet': 1}, {'gold': 15, 'dagger': 1}]&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;Now it looks like the dragon's inventory is the same as the old goblin's inventory. And the second goblin now has the inventory the dragon had. &lt;em&gt;This is quickly getting out of hand.&lt;/em&gt;  The problem is that you have &lt;em&gt;one&lt;/em&gt; monster's data spread out over multiple variables. You could fix this by putting a single monster's data into a dictionary, and then have a list of dictionaries:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;monsters = [{'name': 'Goblin', 'health': 20, 'magic points': 0, 'inventory': {'gold': 12, 'dagger': 1}},
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{'name': 'Dragon', 'health': 300, 'magic points': 200, 'inventory': {'gold': 890, 'magic amulet': 1}},
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{'name': 'Goblin', 'health': 18, 'magic points': 0, 'inventory': {'gold': 15, 'dagger': 1}}]&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;G'ah. This code is getting complex. For example, the inventory of a monster is a dictionary-in-a-dictionary-in-a-list. What if things like spells or inventory items also have their own attributes and need to be dictionaries? What if an inventory item could be a sack, which itself contains other inventory items? This monsters dictionary would get intense.&lt;/p&gt;

&lt;p&gt;This is something that object-oriented programming can solve by creating a new data type.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating Classes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Classes are the blueprints for a new data type in your program.&lt;/strong&gt; Object-oriented programming provides a new approach for modeling the armor, monsters, etc. much better than a hodge-podge of lists and dictionaries, even though OOP concepts it take some getting used to.&lt;/p&gt;

&lt;p&gt;In fact, since the hero will have all the same features of monsters (health, inventory, etc.) we can just have a generic &lt;code&gt;LivingThing&lt;/code&gt; class that the hero and monsters share. Your code can be changed to look like this:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;class LivingThing():
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def __init__(self, name, health, magicPoints, inventory):
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.name = name
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.health = health
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.magicPoints = magicPoints
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.inventory = inventory

# Create the LivingThing object for the hero.
hero = LivingThing('Elsa', 50, 80, {})
monsters = []
monsters.append(LivingThing('Goblin', 20, 0, {'gold': 12, 'dagger': 1}))
monsters.append(LivingThing('Dragon', 300, 200, {'gold': 890, 'magic amulet': 1}))

print('The hero %s has %s health.' % (hero.name, hero.health))&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;Hey look, using classes has already cut down our code in half since we can use the same code for both player characters and monsters.&lt;/p&gt;

&lt;p&gt;In the above code you are defining a new data type/class (pedantics aside, but the two terms are basically the same. See also: &lt;a href=&quot;https://stackoverflow.com/questions/468145/what-is-the-difference-between-type-and-class&quot;&gt;Stack Overflow - What's the difference between a type and a class?&lt;/a&gt;) called &lt;code&gt;LivingThing&lt;/code&gt;. You can have &lt;code&gt;LivingThing&lt;/code&gt; values/objects (again, two terms for basically the same thing) just like you can have integer values, string values, or boolean values.&lt;/p&gt;

&lt;p&gt;Some Python-specific details about the above code:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;class LivingThing():&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;The above is a &lt;code&gt;class&lt;/code&gt; statement that defines a new class, just like &lt;code&gt;def&lt;/code&gt; statements define a new function. The class's name is &lt;code&gt;LivingThing&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def __init__(self, name, health, magicPoints, inventory):&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;The above defines a method for the &lt;code&gt;LivingThing&lt;/code&gt; class. &lt;strong&gt;&quot;Method&quot;&lt;/strong&gt; is just the name used for functions that belong to a class. (See also: &lt;a href=&quot;https://stackoverflow.com/questions/155609/what-is-the-difference-between-a-method-and-a-function&quot;&gt;Stack Overflow - What is the difference between a method and a function?&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This particular method is special. The name &lt;code&gt;__init__()&lt;/code&gt; is used for the &quot;constructor function&quot; (also called a &quot;constructor method&quot;, or &quot;constructor&quot; or &quot;ctor&quot; for short) for the class. While a class is a blue print for a new data type, you still need to create values of this data type in order to have something that you can store in variables or pass to functions.&lt;/p&gt;

&lt;p&gt;When called, the constructor creates the new object, runs the code in the constructor, and returns the new object. This is what the &lt;code&gt;hero = LivingThing('Elsa', 50, 80, {})&lt;/code&gt; line is. No matter what the class name is, the constructor is always named &lt;code&gt;__init__&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If a class has no &lt;code&gt;__init__()&lt;/code&gt; method, Python supplies a generic constructor method for your class that doesn't do anything. But the &lt;code&gt;__init__()&lt;/code&gt; method is a good place for code that does the initial setup of a new object.&lt;/p&gt;

&lt;p&gt;In Python, the first parameter for methods &lt;code&gt;self&lt;/code&gt;. The &lt;code&gt;self&lt;/code&gt; parameter is used to create member variables, explained next.&lt;/p&gt;

&lt;p&gt;The body of the constructor function is this:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.name = name
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.health = health
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.magicPoints = magicPoints
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.inventory = inventory&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;This seems a bit repetitive, but what this code does is create member variables for the object being created by the constructor. Member variables will begin with &lt;code&gt;self.&lt;/code&gt; to show that they are member variables belonging to the object, and not just regular local variables in the method.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Calling the Constructor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;# Create the LivingThing object for the hero.
hero = LivingThing('Elsa', 50, 80, {})
monsters = [LivingThing('Goblin', 20, 0, {'gold': 12, 'dagger': 1}),
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LivingThing('Dragon', 300, 200, {'gold': 890, 'magic amulet': 1}),
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LivingThing('Goblin', 18, 0, {'gold': 15, 'dagger': 1})]

print('The hero %s has %s health.' % (hero.name, hero.health))&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;The constructor call in Python will just look like a function call using the the class's name. So &lt;code&gt;LivingThing()&lt;/code&gt; is the call to the &lt;code&gt;LivingThing&lt;/code&gt; class's &lt;code&gt;__init__()&lt;/code&gt; constructor. The above &lt;code&gt;LivingThing('Elsa', 50, 80, {})&lt;/code&gt; call creates a new &lt;code&gt;LivingThing&lt;/code&gt; object is created and stored in the &lt;code&gt;hero&lt;/code&gt; variable. The above code also creates &lt;code&gt;LivingThing&lt;/code&gt; objects for the three monsters and stores them in the &lt;code&gt;monsters&lt;/code&gt; list.&lt;/p&gt;

&lt;p&gt;And here's where we begin to see the benefits of object-oriented programming. If another programmer is reading your code, when they see the &lt;code&gt;LivingThing()&lt;/code&gt; call they know they can just look for &quot;class LivingThing&quot; and find out the details of everything they need to know about what a &lt;code&gt;LivingThing&lt;/code&gt; is.&lt;/p&gt;

&lt;p&gt;But an even bigger benefit comes when you try to update your &lt;code&gt;LivingThing&lt;/code&gt; class.&lt;/p&gt;

&lt;strong&gt;Updating Classes&lt;/strong&gt;

Say you wanted to add &quot;hunger&quot; levels to your RPG. If a hero or monster has a &lt;code&gt;hunger&lt;/code&gt; level of &lt;code&gt;0&lt;/code&gt;, they are not at all hungry. But if their &lt;code&gt;hunger&lt;/code&gt; level is above &lt;code&gt;100&lt;/code&gt;, then they take damage and their &lt;code&gt;health&lt;/code&gt; value decreases each day. You could change your &lt;code&gt;__init__()&lt;/code&gt; method to this:

&lt;p&gt;&lt;textarea&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def __init__(self, name, health, magicPoints, inventory):
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.name = name
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.health = health
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.magicPoints = magicPoints
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.inventory = inventory
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.hunger = 0  # all living things start with hunger level 0&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;Without changing &lt;em&gt;any&lt;/em&gt; other line of code, &lt;em&gt;every&lt;/em&gt; &lt;code&gt;LivingThing&lt;/code&gt; object in your game now has a hunger level! You don't have to worry about some &lt;code&gt;LivingThing&lt;/code&gt; objects having the &lt;code&gt;hunger&lt;/code&gt; member variable and some not: the very definition of what a &lt;code&gt;LivingThing&lt;/code&gt; is has been updated.&lt;/p&gt;

&lt;p&gt;You also don't have to change any of the constructor calls since you didn't add a new hunger level parameter to the &lt;code&gt;__init__()&lt;/code&gt; method. That's because &lt;code&gt;0&lt;/code&gt; is a good common-sense default value for a new &lt;code&gt;LivingThing&lt;/code&gt; object's hunger level. If you do add a new parameter to &lt;code&gt;__init__()&lt;/code&gt; for the hunger levels, you'll have to update all the code that calls the constructor. But this is true for any function anyway.&lt;/p&gt;

&lt;p&gt;If your RPG has a lot of default values for things, you can avoid a lot of &quot;boilerplate&quot; code by using classes with a constructor that sets the default for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Methods&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Methods are useful for running code that affect the object itself. For example, you could just have code that changes the health of a LivingThing object directly:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;hero = LivingThing('Elsa', 50, {})
hero.health -= 10  # Elsa takes 10 points of damage&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;But this isn't a very robust way to handle taking damage. Lots of other game logic needs to be checked whenever something takes damage. For example, say you want to check if a character dies each time they take damage. You would need code like this:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;hero = LivingThing('Elsa', 50, {})
hero.health -= 10  # Elsa takes 10 points of damage
if hero.health  0:
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print(hero.name + ' has died!')&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;The problem with the above approach is that you would need that check everywhere your code decreases the health of a &lt;code&gt;LivingThing&lt;/code&gt; object. But duplicating code is a Bad Thing. The non-OOP way to prevent duplicate code would be to put it in a function:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;def takeDamage(livingThingObject, dmgAmount):
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;livingThingObject.health = self.health - dmgAmount
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if livingThingObject.health  0:
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print(livingThingObject.name + ' is dead!')  

hero = LivingThing('Elsa', 50, {})
takeDamage(hero, 10)  # Elsa takes 10 points of damage&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;This is a better solution because any updates to &lt;code&gt;takeDamage()&lt;/code&gt; (such as factoring in armor, protective spells, bonuses, etc.) just have to be added to the &lt;code&gt;takeDamage()&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;However, the downside is that when your program grows in size, it's easy for &lt;code&gt;takeDamage()&lt;/code&gt; to get lost in among them. It isn't so clear that &lt;code&gt;takeDamage()&lt;/code&gt; is related to the &lt;code&gt;LivingThing&lt;/code&gt; class. If you have hundreds of functions in your program, it will be hard to figure out which ones are related to the &lt;code&gt;LivingThing&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;The solution is to turn this function into a &lt;code&gt;LivingThing&lt;/code&gt; method:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;class LivingThing():
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# ...other code in the class...

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def takeDamage(self, dmgAmount):
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.health = self.health - dmgAmount
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if self.health == 0:
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print(self.name + ' is dead!')

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# ...other code in the class...

hero = LivingThing('Elsa', 50, {})
hero.takeDamage(10)  # Elsa takes 10 points of damage&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;Once your program has many classes, each with many methods and member variables, you will begin to see how OOP can help organize your programs to be more manageable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Public and Private Methods&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Methods and member variables can be marked as public or private. Public methods can be called and public member variables can be set by any code, inside or outside of the class. Private methods can be called and private member variables can be set only by code inside the object's own class.&lt;/p&gt;

&lt;p&gt;In some languages such as Java, this &quot;can be called/set&quot; is strictly enforced by the compiler. In Python, there's no such concept as &quot;private&quot; and &quot;public&quot;. All methods and member variables are &quot;public&quot;. However, the convention is that if a method name begins with an underscore, it is marked as private. This is why you'll see methods such as &lt;code&gt;_takeDamage()&lt;/code&gt;. Nothing prevents you from writing code that calls private methods or set private member variables from outside the object's class, but you've been fairly warned not to do that.&lt;/p&gt;

&lt;p&gt;The reason for having this public/private distinction is to set expectations for how the class interacts with outside code. (See also: &lt;a href=&quot;https://stackoverflow.com/questions/2620699/why-private-methods-in-the-object-oriented&quot;&gt;Stack Overflow - Why &quot;private&quot; methods in the object oriented?&lt;/a&gt;) The programmer of the class expects that other people won't write code that calls the private methods or sets the private member variables.&lt;/p&gt;

&lt;p&gt;For example, the &lt;code&gt;takeDamage()&lt;/code&gt; method factors in checking for death if health falls below 0. You may want to add all sorts of other checks in the code. Things like armor, agility, and protective spells could factor in to reduce the damage taken. The &lt;code&gt;LivingThing&lt;/code&gt; object might be wearing an enchanted cape that &lt;em&gt;heals&lt;/em&gt; them by adding the damage amount to their &lt;code&gt;health&lt;/code&gt; instead of subtracting. All of this game logic can go in the &lt;code&gt;takeDamage()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;But all of OOP organizing is for nothing if you accidentally put this code in there:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;class LivingThing():
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# ...code in the class...

hero = LivingThing('Elsa', 50, {})

# ...some more code...

if someCondition:
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hero.health -= 50&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;That &lt;code&gt;hero.health -= 50&lt;/code&gt; will subtract 50 points of health, without taking into any consideration what armor Elsa is wearing, if she has protective spells, or is wearing that enchanted healing cape. This code bluntly decrements &lt;code&gt;health&lt;/code&gt; by &lt;code&gt;50&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It's easy to forget about the &lt;code&gt;takeDamage()&lt;/code&gt; method and accidentally write code like this. This doesn't check if the &lt;code&gt;hero&lt;/code&gt; object's &lt;code&gt;health&lt;/code&gt; member variable has dropped below &lt;code&gt;0&lt;/code&gt;. The program continues as though Elsa is alive even if she has negative health! This is a bug we can avoid with public/private members and methods.&lt;/p&gt;

&lt;p&gt;If you rename the &lt;code&gt;health&lt;/code&gt; member variable to &lt;code&gt;_health&lt;/code&gt; and mark it private, then it's easy to catch this bug when you write it:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;hero = LivingThing('Elsa', 50, {})

# ...some more code...

if someCondition:
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hero._health -= 50 # WAIT! This code is outside the hero object's class but modifying a private member variable! This must be a bug!&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;In a language like Java where the compiler enforces private/public access, it would be impossible to write a program that illegally accesses a private member or method. Object-oriented programming helps prevent these kinds of bugs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inheritance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using the LivingThing class for dragons is nice, but dragons have a lot of other qualities in addition to the ones provided by &lt;code&gt;LivingThing&lt;/code&gt;. So you want to create a new &lt;code&gt;Dragon&lt;/code&gt; class that will have member variables like &lt;code&gt;airSpeed&lt;/code&gt; and &lt;code&gt;breathType&lt;/code&gt; (which can be string such as &lt;code&gt;'fire'&lt;/code&gt;, &lt;code&gt;'blizzard'&lt;/code&gt;, &lt;code&gt;'lightning'&lt;/code&gt;, &lt;code&gt;'poison gas'&lt;/code&gt;, etc).&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;Dragon&lt;/code&gt; objects will also have &lt;code&gt;health&lt;/code&gt;, &lt;code&gt;magicPoints&lt;/code&gt;, &lt;code&gt;inventory&lt;/code&gt;, and all the other things that &lt;code&gt;LivingThing&lt;/code&gt; objects have, you &lt;em&gt;could&lt;/em&gt; just create a new &lt;code&gt;Dragon&lt;/code&gt; class and copy/paste all the code from your &lt;code&gt;LivingThing&lt;/code&gt; class. But this would result in duplicate code, which is a Bad Thing.&lt;/p&gt;

&lt;p&gt;Instead, make a &lt;code&gt;Dragon&lt;/code&gt; class that is a &lt;strong&gt;subclass&lt;/strong&gt; of the &lt;code&gt;LivingThing&lt;/code&gt; class:&lt;/p&gt;

&lt;p&gt;&lt;textarea&gt;class LivingThing():
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# ...other code in the class...

class Dragon(LivingThing):
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# ...Dragon-specific code in the class...&lt;/textarea&gt;&lt;/p&gt;

&lt;p&gt;This is effectively saying, &quot;A &lt;code&gt;Dragon&lt;/code&gt; is the same as a &lt;code&gt;LivingThing&lt;/code&gt;, with some additional methods and member variables&quot;. When you create a &lt;code&gt;Dragon&lt;/code&gt; object, it will automatically have all the same methods and member variables as &lt;code&gt;LivingThing&lt;/code&gt; (saving us from duplicating the code). But it could also have dragon-specific methods and member variables to it. Further, any code that deals with a &lt;code&gt;LivingThing&lt;/code&gt; object can automatically handle a &lt;code&gt;Dragon&lt;/code&gt; object because &lt;code&gt;Dragon&lt;/code&gt; objects already have the &lt;code&gt;LivingThing&lt;/code&gt; members and methods. This principle is called &lt;strong&gt;subtype polymorphism&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In practice, inheritance is easy to abuse though. You must be certain that any conceivable change or update you make to the &lt;code&gt;LivingThing&lt;/code&gt; class would also be something you would want the &lt;code&gt;Dragon&lt;/code&gt; class &lt;em&gt;and every other subclass of &lt;code&gt;LivingThing&lt;/code&gt;&lt;/em&gt; to also have. This might not always be so straightforward.&lt;/p&gt;

&lt;p&gt;For example, what if you created &lt;code&gt;Monster&lt;/code&gt; and &lt;code&gt;Hero&lt;/code&gt; subclasses of the &lt;code&gt;LivingThing&lt;/code&gt; class, and then created &lt;code&gt;FlyingMonster&lt;/code&gt; and &lt;code&gt;MagicalMonster&lt;/code&gt; subclasses from &lt;code&gt;Monster&lt;/code&gt;. Would the new &lt;code&gt;Dragon&lt;/code&gt; class be a subclass of &lt;code&gt;FlyingMonster&lt;/code&gt; or &lt;code&gt;MagicalMonster&lt;/code&gt;? Or maybe just its own subclass of &lt;code&gt;Monster&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;This is where inheritance and OOP start to get tricky and religious arguments over the &quot;correct&quot; way to design classes come about. I want to keep this blog post short and simple, so I'll leave these topics as exercises for the reader to look into. (See also &lt;a href=&quot;https://stackoverflow.com/questions/49002/prefer-composition-over-inheritance&quot;&gt;Stack Overflow - Prefer composition over inheritance?&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Composition_over_inheritance&quot;&gt;Wikipedia - Composition over inheritance&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I hate programming tutorials for beginners that start with object-oriented programming. OOP is a very abstract concept. Until have some experience and are writing large programs, you won't understand why using classes and objects makes programming easier. Instead, the neophyte is left with a steep learning curve to climb and no idea why they're climbing it. I hope the RPG example has at least given you a glimpse as to why OOP can be helpful. There is MUCH more to OOP. If you want to learn more, try googling for &lt;a href=&quot;https://www.google.com/search?q=python%20object%20oriented%20design&quot;&gt;&quot;python object oriented design&quot;&lt;/a&gt; or &lt;a href=&quot;https://www.google.com/search?q=python+design+patterns&quot;&gt;&quot;python design patterns&quot;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are still confused by OOP concepts, feel free to write programs without classes. You don't &lt;strong&gt;need&lt;/strong&gt; them and they can result in over-engineered code. But once you have some coding experience under your belt, the benefits of object-oriented programming will become apparent. Good luck!&lt;/p&gt;</description>
	<pubDate>Fri, 12 Dec 2014 20:30:53 +0000</pubDate>
</item>
<item>
	<title>Reinout van Rees: Naming things: don't use reserved words</title>
	<guid>http://reinout.vanrees.org/weblog/2014/12/12/naming_things.html</guid>
	<link>http://reinout.vanrees.org/weblog/2014/12/12/naming_things.html</link>
	<description>&lt;div class=&quot;document&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: added postfixed-with-underscore examples.&lt;/p&gt;
&lt;p&gt;I'm currently cleaning up some code. Some people just cannot spell
&amp;quot;p-e-p-8&amp;quot; if their lives depended on it, apparently. Luckily I'm
civilized so I only &lt;em&gt;threaten&lt;/em&gt; with dismemberment.&lt;/p&gt;
&lt;p&gt;Look at this gem I just uncovered:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
tg_after = instance.filter.technischegegevensfilter_set.exclude(
    pk=instance.pk).filter(
        datum_vanaf__gt=instance.datum_vanaf).order_by(
            'datum_vanaf')[:1]
&lt;/pre&gt;
&lt;p&gt;Don't mind about the Dutch in there. Just look at those two &lt;strong&gt;filter&lt;/strong&gt;
words in the first two lines. They're even nicely underneath each
other. At least they are now, I first had to fit the 159 characters
long line within 78 characters, of course.&lt;/p&gt;
&lt;p&gt;In Django, you do sql filtering with
&lt;tt class=&quot;docutils literal&quot;&gt;.filter(some_condition=42)&lt;/tt&gt;. That's not what's happening in the
first line, though. There's a foreign key called &lt;tt class=&quot;docutils literal&quot;&gt;filter&lt;/tt&gt; there! So
the first &lt;tt class=&quot;docutils literal&quot;&gt;filter&lt;/tt&gt; is the name of a foreign key and the second
&lt;tt class=&quot;docutils literal&quot;&gt;filter&lt;/tt&gt; is the filter method that is used everywhere in Django.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Big confusion&lt;/strong&gt;. And big chance that someone else that reads the
code messes it up somehow.&lt;/p&gt;
&lt;p&gt;So... steer clear of common words used in your programming language or
framework or whatever. Some examples:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Don't use &lt;tt class=&quot;docutils literal&quot;&gt;type&lt;/tt&gt; as an name. Use &lt;tt class=&quot;docutils literal&quot;&gt;customer_type&lt;/tt&gt; or
&lt;tt class=&quot;docutils literal&quot;&gt;station_type&lt;/tt&gt; or whatever. Only use &lt;tt class=&quot;docutils literal&quot;&gt;type&lt;/tt&gt; by itself if you
really mean the python build-in. Alternatively you can postfix it
with an underscore, so &lt;tt class=&quot;docutils literal&quot;&gt;type_&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Don't use &lt;tt class=&quot;docutils literal&quot;&gt;class&lt;/tt&gt;. Either use the often-used &lt;tt class=&quot;docutils literal&quot;&gt;klass&lt;/tt&gt; or
&lt;tt class=&quot;docutils literal&quot;&gt;class_&lt;/tt&gt; alternative if you want to keep it short. But why not use
&lt;tt class=&quot;docutils literal&quot;&gt;css_class&lt;/tt&gt; if you want to return a css class, for instance?&lt;/li&gt;
&lt;li&gt;Don't use &lt;tt class=&quot;docutils literal&quot;&gt;filter&lt;/tt&gt; for Django models. Even if you're modelling
filters that are used for groundwater extraction (as in this
case). Call them &lt;tt class=&quot;docutils literal&quot;&gt;WaterFilter&lt;/tt&gt; or so.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So... you can now go and fix your code. You've got about 45 minutes
before I'm ready sharpening my axe.&lt;/p&gt;
&lt;/div&gt;</description>
	<pubDate>Fri, 12 Dec 2014 20:17:00 +0000</pubDate>
</item>
<item>
	<title>PyCharm: Feature Spotlight: TextMate bundles in PyCharm</title>
	<guid>http://feedproxy.google.com/~r/Pycharm/~3/D9OUJUWAULg/</guid>
	<link>http://feedproxy.google.com/~r/Pycharm/~3/D9OUJUWAULg/</link>
	<description>&lt;p&gt;Happy Friday everyone,&lt;/p&gt;
&lt;p&gt;Today I’m going to shed some light on how to get syntax highlighting for unsupported languages and file types in PyCharm.&lt;/p&gt;
&lt;p&gt;As you probably know, PyCharm supports only a limited number of languages and technologies. PyCharm supports them with intelligence that appears in code completion, smart navigation, refactorings, inspections, and suggestions. But sometimes you might need to edit some project-specific files of an unsupported file type. In PyCharm you can open any file and edit it right away, but it always helpful to get at least syntax highlighting for it. Thanks to the TextMate bundles support you can get syntax highlighting for a wide range of languages.&lt;/p&gt;
&lt;p&gt;Let’s see how to enable highlighting for an unsupported language in PyCharm. For example, in your project you might have some shell scripts &amp;#8211; PyCharm doesn’t support the Shell language by default, however there is a TextMate bundle available for it:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/shell.png&quot;&gt;&lt;img class=&quot;alignleft size-full wp-image-2914&quot; alt=&quot;shell&quot; src=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/shell.png&quot; width=&quot;904&quot; height=&quot;448&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is a few simple steps you take to enable the highlighting for the Shell language inside PyCharm:&lt;/p&gt;
&lt;p&gt;1. First go to Settings (Preferences for Mac OS) and make sure that the “TextMate bundles support” plugin is installed and enabled:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/plugin.png&quot;&gt;&lt;img class=&quot;alignleft size-full wp-image-2911&quot; alt=&quot;plugin&quot; src=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/plugin.png&quot; width=&quot;881&quot; height=&quot;535&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2. Download a TextMate bundle. In my example I use the &lt;a href=&quot;https://github.com/textmate/shellscript.tmbundle&quot;&gt;shellscript TextMate bundle&lt;/a&gt; from the official &lt;a href=&quot;https://github.com/textmate&quot;&gt;TextMate GitHub repo&lt;/a&gt;.&lt;br /&gt;
3. Open Settings again and go to &lt;em&gt;Editor | TextMate Bundles&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/settings.png&quot;&gt;&lt;img class=&quot;alignleft size-full wp-image-2913&quot; alt=&quot;settings&quot; src=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/settings.png&quot; width=&quot;881&quot; height=&quot;533&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4. Click “+” and locate the bundle on your filesystem. After that the bundle appears in the list of recognized bundles:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/selected.png&quot;&gt;&lt;img class=&quot;alignleft size-full wp-image-2912&quot; alt=&quot;selected&quot; src=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/selected.png&quot; width=&quot;881&quot; height=&quot;536&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5. From this point you just need to click OK and enjoy the new syntax highlighting in the editor:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/colored.png&quot;&gt;&lt;img class=&quot;alignleft size-full wp-image-2908&quot; alt=&quot;colored&quot; src=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/colored.png&quot; width=&quot;901&quot; height=&quot;448&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That’s it! However, lets hold for a while and consider some additional settings you might want to adjust.&lt;br /&gt;
The first thing you’ll probably want to change is a syntax coloring scheme. This can be done in &lt;em&gt;Settings | Editior | Textmate Bundles&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/colorscheme.png&quot;&gt;&lt;img class=&quot;alignleft size-full wp-image-2909&quot; alt=&quot;colorscheme&quot; src=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/colorscheme.png&quot; width=&quot;903&quot; height=&quot;626&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The second thing you’ll probably need is to adjust file types associations. For that go to &lt;em&gt;Settings | Editor | File Types&lt;/em&gt; and choose the “Files supported via TextMate bundles” option.&lt;br /&gt;
Here you can modify the list of registered filename patterns and the ones that are ignored:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/filetypes.png&quot;&gt;&lt;img class=&quot;alignleft size-full wp-image-2910&quot; alt=&quot;filetypes&quot; src=&quot;http://blog.jetbrains.com/pycharm/files/2014/12/filetypes.png&quot; width=&quot;883&quot; height=&quot;535&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hope this post helps!&lt;br /&gt;
See you next week.&lt;/p&gt;
&lt;p&gt;-Dmitry&lt;/p&gt;
&lt;img src=&quot;http://feeds.feedburner.com/~r/Pycharm/~4/D9OUJUWAULg&quot; height=&quot;1&quot; width=&quot;1&quot; alt=&quot;&quot; /&gt;</description>
	<pubDate>Fri, 12 Dec 2014 19:44:46 +0000</pubDate>
</item>
<item>
	<title>PyCharm: PyCharm 4.0.3 RC is available</title>
	<guid>http://feedproxy.google.com/~r/Pycharm/~3/nPH-sfKExjA/</guid>
	<link>http://feedproxy.google.com/~r/Pycharm/~3/nPH-sfKExjA/</link>
	<description>&lt;p&gt;Today we’ve published the &lt;strong&gt;PyCharm 4.0.3 RC&lt;/strong&gt; bug-fix update.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://confluence.jetbrains.com/display/PYH/PyCharm+139.742+Release+Notes&quot;&gt;Release notes&lt;/a&gt; lists all fixes from the previous PyCharm 4.0.2 update. The most notable among them are: a fix for a UI bug with find action, a fix for a remote debugger hanging, a fix for color settings in an embedded terminal, a test runner for Django nose tests is also fixed.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://confluence.jetbrains.com/display/PYH/JetBrains+PyCharm+Preview+%28EAP%29&quot;&gt;Download PyСharm 4.0.3 RC&lt;/a&gt; for your platform from the project EAP page and please report any bugs and feature request to our &lt;a href=&quot;https://youtrack.jetbrains.com/issues/PY&quot;&gt;Issue Tracker&lt;/a&gt;. It also will be available shortly as a patch update from within the IDE. Make sure you’ve selected the &lt;em&gt;Beta Releases&lt;/em&gt; channel in update settings.&lt;/p&gt;
&lt;p&gt;&lt;em&gt; Develop with Pleasure!&lt;/em&gt;&lt;br /&gt;
&lt;em&gt; -PyCharm team&lt;/em&gt;&lt;/p&gt;
&lt;img src=&quot;http://feeds.feedburner.com/~r/Pycharm/~4/nPH-sfKExjA&quot; height=&quot;1&quot; width=&quot;1&quot; alt=&quot;&quot; /&gt;</description>
	<pubDate>Fri, 12 Dec 2014 12:34:40 +0000</pubDate>
</item>
<item>
	<title>Python Diary: Building a Gopher client in Django</title>
	<guid>http://www.pythondiary.com/blog/Dec.12,2014/building-gopher-client-django.html</guid>
	<link>http://www.pythondiary.com/blog/Dec.12,2014/building-gopher-client-django.html</link>
	<description>&lt;p&gt;Have you ever wanted to enable your users to access your Gopher server without the need of them installing a browser plugin, installing a standalone software, or using a third part proxy service?  Now you can, by adding this simple Django app to any existing Django project.  It doesn't depend on anything by my updated &lt;a href=&quot;http://iamkevin.ca/Gopher/0library/gopherlib.py&quot;&gt;gopherlib.py&lt;/a&gt;, and the following app which I will explain here.  I have already developed it and deployed it, so I will not be covering every single detail.  For the most part, it's a very basic Django app that only uses function-based views to get the job done.  So, this app might be good as a starting point for people new to Django, as there's nothing terribly complex going on here.  You can see a fully working example &lt;a href=&quot;http://iamkevin.ca/Gopher/&quot;&gt;here&lt;/a&gt;.  First let's cover the &lt;strong&gt;urls.py&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.conf.urls&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patterns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;urlpatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patterns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'djgopher.views'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'^$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'root_menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gopher_root_menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'^RemoteDoc$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'remote_document'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gopher_remote'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'^(?P&amp;lt;selector&amp;gt;.+)$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gopher_selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This isn't the most elegant way to grab the selector from the URL, but it gets the job done.  This may have some security implications behind it, I am hoping that my code which handles this selector can't be easily exploited.  Feel free to point out to me any possible security concerns and a way to fix it.  Let's move onto the &lt;strong&gt;views.py&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;djgopher.gopherlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Gopher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GopherMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextFile&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.shortcuts&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.http&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Http404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponseRedirect&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PIL&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;StringIO&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringIO&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;root_menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Gopher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gopher.veroneau.net'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_root_menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'djgopher/menu.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Root Menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here is the first function based view, it's only task is to display the initial gopher menu to the user.  I did hardcode my own Gopher server here, but for most use cases, you can actually put in &lt;i&gt;127.0.0.1&lt;/i&gt; to refer to the local Gopher server.  Here, we initialize the Gopher class, and obtain the root menu of that server.  Then we send it off to a template which we will get into shortly.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;META&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'QUERY_STRING'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'?'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;META&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'QUERY_STRING'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;gtype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'query'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gtype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'7'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'djgopher/search.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]})&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Gopher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gopher.veroneau.net'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GopherMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'djgopher/menu.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]})&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimetype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text/plain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gtype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'I'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;typ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typ&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'jpeg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;typ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StringIO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimetype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'image/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gtype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimetype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'image/gif'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gtype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'9'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimetype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'application/octet-stream'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Unhandled.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimetype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text/plain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This function based view handles the actual rendering of the chosen selector.  Here we check for a query string and append it to the selector so that the Gopher server can manage it.  Then we check if the item type is a search, if so, then we display a special template if no query came in.  This template is a basic form that will prompt the user for their search query.  Finally, if we're still processing here, we grab our selector from the server and check what type we are handling.  Technically, we should check if we support the type before even downloading any data to save bandwidth, but for now this should be fine.  I believe I will update it shortly so that the item type is properly checked beforehand.  Depending on the item type, we either display a menu, a text file, image, or perform a binary download.  We also use the PIL library if the image file doesn't have a valid extension to make sure we serve the correct information to the browser.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;remote_document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'uri'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Http404&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponseRedirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://gopher.floodgap.com/gopher/gw?gopher://&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Gopher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimetype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text/plain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponseRedirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://gopher.floodgap.com/gopher/gw?gopher://&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This final function based view is to enable users to retrieve remote documents, such as &lt;a href=&quot;http://iamkevin.ca/Gopher/RemoteDoc?uri=gopher.quux.org:70/0/Computers/Standards%20and%20Specs/RFC/docs/rfc1436.txt&quot;&gt;this one here&lt;/a&gt;.  I only want to enable text document linking, not anything else to limit bandwidth and overall complexity.  There are other clients and proxies out there that can easily grab resources from any Gopher server, so it's best to leverage those services for this.&lt;/p&gt;
&lt;h3&gt;The Templates&lt;/h3&gt;
&lt;p&gt;The templates are pretty dead simple, as this is a very basic client application, nothing too fancy is required to display Gopher content.  Here is our &lt;strong&gt;base.html&lt;/strong&gt; template:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt; | Django Gopher Client&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt; | Django Gopher Client&lt;span class=&quot;nt&quot;&gt;&amp;lt;hr/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endblock&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See?  Nothing too complex, not even a stylesheet, although feel free to skin your own client all you want.  Here is the template which renders a Gopher menu for us in HTML:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;djgopher/base.html&amp;quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gopher&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;pre&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;menu&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;item.type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'i'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;item.type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'3'&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item.type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;STATIC_URL&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;}}{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item.name&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item.type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;STATIC_URL&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;}}{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item.name&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endblock&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We are using &lt;strong&gt;pre&lt;/strong&gt; tags here to ensure the content in the menu is rendered correctly.  Lots of Gopherholes, including my own use ASCII art in the menus.  &lt;a href=&quot;gopher://gopherpedia.com&quot;&gt;Gopherpedia&lt;/a&gt; is another example of this.  This template uses some custom template filters to enable us to dynamically place in URLs and icons using Python code.  Like they say, the template is not for logic! Our final template is the &lt;strong&gt;search.html&lt;/strong&gt; template:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;djgopher/base.html&amp;quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gopher_selector&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;csrf_token&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;
Query: &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;query&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Go&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endblock&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The search template is pretty normal, just a basic HTML post form.  Now, finally here is the template tag library to render those filters:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.core.urlresolvers&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.utils.safestring&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mark_safe&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;register&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ICON_TYPES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'text.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dir.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'h'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'html.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'9'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'binary.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'I'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'image.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'image.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'7'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'search.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'error.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'telnet.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@register.filter&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hURL:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'gopher.veroneau.net'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'port'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;?uri=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gopher_remote'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'telnet://&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'port'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://gopher.floodgap.com/gopher/gw?gopher://&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gopher_selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@register.filter&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;static_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mark_safe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;img src=&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;djgopher/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;static_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICON_TYPES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first dictionary you see there is to make selecting the icon like a case-select, which is much more efficient than a ton of if statements.  The first filter here, &lt;strong&gt;selector&lt;/strong&gt; is used to resolve a menu item into a URL that WWW browsers can understand.  Here, we check various attributes based on the Gopher standard and write an HTTP compatible URL link the user can click on.  Anything from the supported Gopher server is handled internally by our selector view.  Anything that has an external host is handled according to it's type.  This makes it so that all Gopher menu items work regardless if the local client supports remote servers.  Finally, we have the simple &lt;strong&gt;icon&lt;/strong&gt; filter that does nothing more by write out a proper &lt;strong&gt;IMG&lt;/strong&gt; tag with the icon for the menu item.&lt;/p&gt;
&lt;p&gt;And there you have it, a fully functional Gopher client all done from within a Django app!  So now you have no excuse not to run your own Gopher server.  For some interesting places to visit on Gopher, check out my &lt;a href=&quot;http://iamkevin.ca/Gopher/1Bookmarks.g&quot;&gt;Bookmarks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As mentioned in my previous post about Gopher, I will soon be making all my Python Diary content available in Gopherspace, it will contain both full HTML versions and text versions.  So, if you ever wanted to try browsing a less distracting side of the Internet where advertisers and trackers can't find you, now is a great time!  Over time, I am planning on developing many gateway applications for the Internets most popular online locations, such as Twitter, and various news outlets.  I think I'd personally like to add RSS feeds to my Gopherspace to enable the easy reading of many popular Python blogs from Planet Python.  If your on Android, be sure to check out the &lt;a href=&quot;http://iamkevin.ca/Gopher/1library/OverbiteAndroid&quot;&gt;updated Gopher client&lt;/a&gt;, which can really save you on your mobile bandwidth!&lt;/p&gt;</description>
	<pubDate>Fri, 12 Dec 2014 12:00:00 +0000</pubDate>
</item>
<item>
	<title>Python for biologists: Randomly sampling reads from a FASTQ file</title>
	<guid>http://pythonforbiologists.com/index.php/randomly-sampling-reads-from-a-fastq-file/</guid>
	<link>http://pythonforbiologists.com/index.php/randomly-sampling-reads-from-a-fastq-file/</link>
	<description>&lt;p&gt;&lt;strong&gt;Attention readers: this article is about how to write a Python program to randomly sample reads from a FASTQ file. If you just want to run the program, &lt;a href=&quot;https://raw.githubusercontent.com/mojones/random_scripts/14218de511d24b6450df4dc98ca15752626b6797/sample_fastq.py&quot;&gt;save it from this link&lt;/a&gt; and run it with -h to view usage. Alternatively, use one of the &lt;a href=&quot;http://homes.cs.washington.edu/~dcjones/fastq-tools/&quot;&gt;many&lt;/a&gt; &lt;a href=&quot;http://seqanswers.com/forums/showthread.php?t=16505&quot;&gt;other&lt;/a&gt; &lt;a href=&quot;http://www-huber.embl.de/users/anders/HTSeq/doc/tour.html&quot;&gt;tools&lt;/a&gt; which perform this job, and were probably not written in an afternoon as an example. &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you&amp;#8217;re interested in how to write such a program yourself, then read on&amp;#8230;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A common task in bioinformatics is to take a data file &amp;#8211; here we&amp;#8217;re looking at next-generation sequencing reads in FASTQ format &amp;#8211; and generate random samples from it. Let&amp;#8217;s say we want to sample 10% of the reads from a given file. Here&amp;#8217;s one way of doing it &amp;#8211; we can take advantage of the fact that each FASTQ record is exactly four lines long and grab four lines at a time, and only write them to the output if the number of records we&amp;#8217;ve seen is an exact multiple of 10:&lt;/p&gt;
&lt;pre class=&quot;brush: python; title: ; notranslate&quot;&gt;
record_number = 0
with open(&amp;quot;test.fastq&amp;quot;) as input:
    with open(&amp;quot;sample.fastq&amp;quot;, &amp;quot;w&amp;quot;) as output:
        for line1 in input:
            line2 = input.next()
            line3 = input.next()
            line4 = input.next()
            if record_number % 10 == 0:
                    output.write(line1)
                    output.write(line2)
                    output.write(line3)
                    output.write(line4)
            record_number += 1
&lt;/pre&gt;
&lt;p&gt;This works pretty well &amp;#8211; on a test file containing 10 million FASTQ records it runs in about two minutes on my computer, with no particular attempt at optimization. An obvious problem with this code is that we&amp;#8217;re going to get exactly the same 10% of reads every time we run it, and for some types of analysis we&amp;#8217;d like to be able to generate a bunch of random 10% samples. To do this we need to change the logic of our code a bit; rather than looking at the record number to decide whether or not to write a given read to the output file, we&amp;#8217;ll pick a random number between 0 and 9 and write the file if it&amp;#8217;s equal to zero:&lt;/p&gt;
&lt;pre class=&quot;brush: python; title: ; notranslate&quot;&gt;
import random

with open(&amp;quot;test.fastq&amp;quot;) as input:
    with open(&amp;quot;sample.fastq&amp;quot;, &amp;quot;w&amp;quot;) as output:
        for line1 in input:
            line2 = input.next()
            line3 = input.next()
            line4 = input.next()
            if random.randrange(0,10) == 0:
                    output.write(line1)
                    output.write(line2)
                    output.write(line3)
                    output.write(line4)
&lt;/pre&gt;
&lt;p&gt;This actually slows things down quite a bit &amp;#8211; this version of the code takes twice as long to run, as generating random numbers is relatively computationally expensive.&lt;/p&gt;
&lt;p&gt;This version lets us easily extend the idea for any sample size &amp;#8211; for each record we will pick a number between 1 and 100 and if it&amp;#8217;s less than our sample percent, then we write the record to the output file:&lt;/p&gt;
&lt;pre class=&quot;brush: python; title: ; notranslate&quot;&gt;
import random

percent = 35
with open(&amp;quot;test.fastq&amp;quot;) as input:
    with open(&amp;quot;sample.fastq&amp;quot;, &amp;quot;w&amp;quot;) as output:
        for line1 in input:
            line2 = input.next()
            line3 = input.next()
            line4 = input.next()
            if random.randrange(1,101) &amp;lt;= percent:
                    output.write(line1)
                    output.write(line2)
                    output.write(line3)
                    output.write(line4)
&lt;/pre&gt;
&lt;p&gt;This will do nicely for when we want to sample a given &lt;strong&gt;proportion&lt;/strong&gt; of reads from our file, but what about when we need to sample a given &lt;strong&gt;number&lt;/strong&gt; of reads? The easiest thing to do is probably to add a pre-processing step where we count the number of lines in the file and divide by four to get the number of records, then turn that into a percentage to use in our existing code:&lt;/p&gt;
&lt;pre class=&quot;brush: python; title: ; notranslate&quot;&gt;
from __future__ import division
import random

number_to_sample = 3000000

with open(&amp;quot;test.fastq&amp;quot;) as input:
    num_lines = sum([1 for line in input])
total_records = int(num_lines / 4)
print(&amp;quot;sampling &amp;quot; + str(number_to_sample) + &amp;quot; out of &amp;quot; + str(total_records) + &amp;quot; records&amp;quot;)

percent = (number_to_sample / total_records) * 100
print(&amp;quot;sampling &amp;quot; + str(percent) + &amp;quot; % of records&amp;quot;)

with open(&amp;quot;test.fastq&amp;quot;) as input:
    with open(&amp;quot;sample.fastq&amp;quot;, &amp;quot;w&amp;quot;) as output:
        for line1 in input:
            line2 = input.next()
            line3 = input.next()
            line4 = input.next()
            if random.randrange(1,101) &amp;lt;= percent:
                    output.write(line1)
                    output.write(line2)
                    output.write(line3)
                    output.write(line4)

&lt;/pre&gt;
&lt;p&gt;This code works but has a pretty severe limitation; because random.randrange() only returns integers it can&amp;#8217;t deal correctly with situations where the correct percentage is not an integer. To fix this, we could express the proportion of reads to keep as a decimal and switch from using randrange() to random(), which returns a floating point number. However, this might still run into problems with floating-point accuracy. A neater way to do it might be to use random.sample() to pick which records to keep after counting the total number, then just compare each record to that list. Storing the list of record numbers to keep as a set allows for rapid lookup:&lt;/p&gt;
&lt;pre class=&quot;brush: python; title: ; notranslate&quot;&gt;
from __future__ import division
import random

number_to_sample = 3000000

with open(&amp;quot;test.fastq&amp;quot;) as input:
    num_lines = sum([1 for line in input])
total_records = int(num_lines / 4)
print(&amp;quot;sampling &amp;quot; + str(number_to_sample) + &amp;quot; out of &amp;quot; + str(total_records) + &amp;quot; records&amp;quot;)

records_to_keep = set(random.sample(xrange(total_records + 1), number_to_sample))
record_number = 0
with open(&amp;quot;test.fastq&amp;quot;) as input:
    with open(&amp;quot;sample.fastq&amp;quot;, &amp;quot;w&amp;quot;) as output:
        for line1 in input:
            line2 = input.next()
            line3 = input.next()
            line4 = input.next()
            if record_number in records_to_keep:
                    output.write(line1)
                    output.write(line2)
                    output.write(line3)
                    output.write(line4)
            record_number += 1
&lt;/pre&gt;
&lt;p&gt;This version of the code works to sample any number of records, and as a bonus is much quicker (at the expense of memory) since it only has to generate one random number per output sequence, rather than one random number per input sequence as in the earlier versions.&lt;/p&gt;
&lt;p&gt;If we&amp;#8217;re planning on using this program to create multiple samples of records from a single file, then there&amp;#8217;s one more refinement we might want to make. Rather than simply running the program multiple times, we can create a bunch of output files in a single pass, meaning that we only have to count the number of lines in the input file once, and iterate over the input file once. Here we use a list to store the output file objects, and another list to store the sets of selected records for each output file:&lt;/p&gt;
&lt;pre class=&quot;brush: python; title: ; notranslate&quot;&gt;
from __future__ import division
import random

number_to_sample = 3000000
number_of_replicates = 10

with open(&amp;quot;test.fastq&amp;quot;) as input:
    num_lines = sum([1 for line in input])
total_records = int(num_lines / 4)
print(&amp;quot;sampling &amp;quot; + str(number_to_sample) + &amp;quot; out of &amp;quot; + str(total_records) + &amp;quot; records&amp;quot;)

output_files = []
output_sequence_sets = []
for i in range(number_of_replicates):
    output_files.append(open(&amp;quot;sample.fastq.&amp;quot; + str(i), &amp;quot;w&amp;quot;))
    output_sequence_sets.append(set(random.sample(xrange(total_records + 1), number_to_sample)))

record_number = 0
with open(&amp;quot;test.fastq&amp;quot;) as input:
        for line1 in input:
            line2 = input.next()
            line3 = input.next()
            line4 = input.next()
            for i, output in enumerate(output_files):
                if record_number in output_sequence_sets[i]:
                        output.write(line1)
                        output.write(line2)
                        output.write(line3)
                        output.write(line4)
                record_number += 1

for output in output_files:
    output.close()
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mojones/random_scripts/14218de511d24b6450df4dc98ca15752626b6797/sample_fastq.py&quot;&gt;Here&amp;#8217;s a link to a slight tidied-up version&lt;/a&gt; of the code with a minimal user interface to make running it a bit more pleasant. Interested in learning how to write tools like this yourself? &lt;a href=&quot;http://pythonforbiologists.com/books&quot;&gt;Check out the Python for Biologists books&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Fri, 12 Dec 2014 10:21:37 +0000</pubDate>
</item>
<item>
	<title>Vasudev Ram: Project Enferno: RAD framework with Python / Flask / MongoDB / Redis</title>
	<guid>http://jugad2.blogspot.com/2014/12/project-enferno-rad-framework-with.html</guid>
	<link>http://jugad2.blogspot.com/2014/12/project-enferno-rad-framework-with.html</link>
	<description>&lt;p&gt;&lt;/p&gt;By &lt;a href=&quot;http://www.dancingbison.com&quot;&gt;Vasudev Ram&lt;/a&gt;&lt;p&gt;&lt;/p&gt;&lt;a href=&quot;http://jugad2.blogspot.co.uk/feeds/posts/default/-/python&quot;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;http://www.enferno.io&quot;&gt;&lt;img src=&quot;http://www.enferno.io/static/img/logo.jpg&quot; height=&quot;25%&quot; width=&quot;25%&quot; /&gt;&lt;/a&gt;&lt;br /&gt;Just saw this via &lt;a href=&quot;http://www.pythonweekly.com/&quot;&gt;Python Weekly's&lt;/a&gt; email newsletter. &lt;b&gt;Enferno&lt;/b&gt; seems to be a RAD (&lt;b&gt;Rapid Application Development&lt;/b&gt;) &lt;b&gt;framework&lt;/b&gt; of sorts, using &lt;b&gt;&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt;&lt;/b&gt;, some &lt;b&gt;Flask extensions&lt;/b&gt;, &lt;a href=&quot;http://www.mongodb.org/&quot;&gt;MongoDB&lt;/a&gt; AND MongoEngine, and Redis.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.enferno.io/&quot;&gt;Enferno framework&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;I've worked on a project or two using Python, Flask and MongoDB (which is a NoSQL database), and found it a useful combination for developing apps relatively quickly. Enferno may be worth checking out, which I will do sometime later and may then blog about it.&lt;br /&gt;&lt;a href=&quot;http://jugad2.blogspot.co.uk/feeds/posts/default/-/python&quot;&gt;&lt;/a&gt;&lt;br /&gt;Here is an &lt;a href=&quot;http://martinfowler.com/nosql.html&quot;&gt;article about NoSQL&lt;/a&gt; by &lt;a href=&quot;http://martinfowler.com/&quot;&gt;Martin Fowler&lt;/a&gt; that may be of interest to newcomers to the field. Fowler and &lt;a href=&quot;http://www.sadalage.com/&quot;&gt;Pramod Sadalage&lt;/a&gt; have also written a book, &lt;b&gt;NoSQL Distilled&lt;/b&gt;, which is linked to from Fowler's NoSQL article page. I've read Fowler's earlier book &lt;b&gt;UML Distilled&lt;/b&gt;, a small and useful summary of UML, and it looks from the title that their NoSQL book may be on the same lines.&lt;br /&gt;&lt;br /&gt;- &lt;a href=&quot;http://jugad2.blogspot.in/2013/03/dancing-bison-enterprises-profile.html&quot;&gt;Vasudev Ram - Dancing Bison Enterprises&lt;/a&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;b&gt;&lt;a href=&quot;mailto:vasudevram@gmail.com?subject=Email%20me%20about%20your%20new%20products%20and%20services&quot;&gt;Signup for email about interesting new stuff from me.&lt;/a&gt;&lt;/b&gt; &lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;a href=&quot;http://www.dancingbison.com/contact.html&quot;&gt;Contact Page&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://jugad2.blogspot.com/search/label/python&quot;&gt;Other Python posts&lt;/a&gt; | &lt;a href=&quot;http://jugad2.blogspot.com/search/label/xtopdf&quot;&gt;Posts about xtopdf&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;!-- AddThis Button BEGIN --&gt; &lt;div class=&quot;addthis_toolbox addthis_default_style&quot;&gt;&lt;a href=&quot;http://www.addthis.com/bookmark.php?v=250&amp;username=vasudevram&quot; class=&quot;addthis_button_compact&quot;&gt;Share&lt;/a&gt; &lt;span class=&quot;addthis_separator&quot;&gt;|&lt;/span&gt; &lt;a class=&quot;addthis_button_preferred_1&quot;&gt;&lt;/a&gt; &lt;a class=&quot;addthis_button_preferred_2&quot;&gt;&lt;/a&gt; &lt;a class=&quot;addthis_button_preferred_3&quot;&gt;&lt;/a&gt; &lt;a class=&quot;addthis_button_preferred_4&quot;&gt;&lt;/a&gt; &lt;/div&gt;  &lt;!-- AddThis Button END --&gt;&lt;div class=&quot;blogger-post-footer&quot;&gt;&lt;a href=&quot;http://www.dancingbison.com&quot;&gt;Vasudev Ram&lt;/a&gt;
&lt;br /&gt;&lt;/div&gt;</description>
	<pubDate>Fri, 12 Dec 2014 02:32:08 +0000</pubDate>
</item>
<item>
	<title>Invent with Python: &amp;quot;Let&amp;#039;s Create Software&amp;quot; Tutorial: Bus Routes Overlaid on Google Maps</title>
	<guid>http://inventwithpython.com/blog/2014/02/11/lets-create-software-bus-routes-overlaid-on-google-maps/</guid>
	<link>http://inventwithpython.com/blog/2014/02/11/lets-create-software-bus-routes-overlaid-on-google-maps/</link>
	<description>&lt;p&gt;&lt;em&gt;The &quot;Let's Create Software&quot; series covers the creation of small, complete software projects from start to finish. The entire process and code is explained to give beginner and intermediate programmers an idea of what it is like to not just program, but create an entire piece of software from scratch.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There's a &lt;a href=&quot;http://www.sfmta.com/maps/muni-system-map&quot;&gt;large PDF system map&lt;/a&gt; of all the Muni bus routes in San Francisco (as well as &lt;a href=&quot;http://www.sfmta.com/maps&quot;&gt;maps of the individual Muni routes&lt;/a&gt;). If I need to find directions, Google Maps' mass transit instructions are fine. But sometimes I'd like to just browse all the routes throughout the city. However the large PDF is slow to render on my laptop (moreso on my phone). Scrolling the PDF also results in a lengthy wait for redrawing.&lt;/p&gt;
&lt;p&gt;So I had the idea to use Google Maps' API to draw out a map of all the Muni routes. This would have the benefit of the system map PDF but also be easier to load and navigate. I have no experience using the Google Maps API and am vaguely aware that there's public data about Muni bus routes, but I'll learn along the way.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni&quot;&gt;The completed SF Muni Google Map.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://inventwithpython.com/sfmuni/sfmuni_screenshot1.png?e35b04&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://inventwithpython.com/sfmuni/sfmuni_screenshot2.png?e35b04&quot; /&gt;&lt;/p&gt;
&lt;p&gt;To follow along with this tutorial, it helps to have a bit of Python or JavaScript knowledge, or know a little bit about programming. I've tried to keep this as straightforward as possible, even for non-programmers to roughly follow.&lt;/p&gt;
&lt;p&gt;This project will involve writing a few &quot;throw-away&quot; scripts to parse and extract data, and my preferred language is Python. While I do all the scripts in Python 3 (note: Python 3 has some backwards incompatibilities with Python 2. My scripts might not run on Python 2), you can use whatever language you like. The final software will be done with JavaScript since it is a web page that uses the Google Maps API. (The final result is here: &lt;a href=&quot;http://inventwithpython.com/sfmuni/&quot;&gt;http://inventwithpython.com/sfmuni/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In general, by &quot;throw-away&quot; script I mean a script that is written in order to be run once to perform a task. Software such as Firefox or Angry Birds I want to keep around to run again and again, but a throw-away script I just need to automate a certain task. I'll still keep this script; I won't actually delete this script once I've run it, but I most likely won't ever need it again.&lt;/p&gt;
&lt;p&gt;A note to beginning programmers who might feel like this project might be too advanced for them: even though I have years of experience programming, I still made many mistakes and went down a few blind alleys while putting this code together. Although it looks like I just sat down and typed out this code, just remember that this tutorial is the polished outcome of quite a bit of tenacious work. Don't be discouraged or intimidated, just keep at it!&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;more-1626&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Prior Art Search&lt;/h2&gt;
&lt;p&gt;The first part before we do any programming project is to see what else is already out there. It might be fun to reimplement something that's already out there, but by looking at what other people have done, we can get ideas for what we might want to do. Or you might find the exact software you wanted is already made, and can save yourself the trouble.&lt;/p&gt;
&lt;p&gt;Doing a few Google Searches, I see that there's &lt;a href=&quot;http://www.sflivebus.com/&quot;&gt;SF Live Bus&lt;/a&gt;, which gives a live feed of every bus's position using the Google Maps API and the NextBus API. But it doesn't show the routes on the maps like the system map does.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.nextbus.com/&quot;&gt;NextBus&lt;/a&gt; has outfitted the buses and trains of many municipal transit systems with GPS locators and provides a data feed of them. They also have an API that is well documented.&lt;/p&gt;
&lt;p&gt;Other than that, I haven't really found anything like what I want to do specifically.&lt;/p&gt;
&lt;h2&gt;Decide on Features (and Non-Features)&lt;/h2&gt;
&lt;p&gt;Here's what I want the software to do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use Google Maps with all the usual navigation controls that it provides, but all the Muni routes are overlaid on top of it.&lt;/li&gt;
&lt;li&gt;Also, have all the stops marked on the map.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, it's important to come up with a list of features you will &lt;strong&gt;not&lt;/strong&gt; have. It's really easy to say, &quot;Hey it'd be cool if it could do this...&quot; and keep accumulating features and making the software more complicated. While good learning experiences for the programmer, half-finished projects are almost always useless for other people. Our system map software will &lt;strong&gt;not&lt;/strong&gt; have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Display current position of the buses.&lt;/li&gt;
&lt;li&gt;Have bus predictions for the stops.&lt;/li&gt;
&lt;li&gt;Offer directions between locations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'll come up with new features as I make progress, but keeping the scope of the project from constantly expanding will prevent me from ending up with another half-finished project.&lt;/p&gt;
&lt;h2&gt;Research&lt;/h2&gt;
&lt;p&gt;There are four things I'll have to learn before I can create this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get a list of all the bus routes for San Francisco Muni .&lt;/li&gt;
&lt;li&gt;Figure out the coordinates of the routes so that I can draw them on the map.&lt;/li&gt;
&lt;li&gt;Figure out the coordinates of all the stops in the city.&lt;/li&gt;
&lt;li&gt;Learn enough of the Google Maps API to create a map and draw lines and markers on it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The NextBus site has &lt;a href=&quot;http://www.nextbus.com/xmlFeedDocs/NextBusXMLFeed.pdf‎&quot;&gt;a PDF that explains their public data feed&lt;/a&gt;. We can use that to figure out the coordinates for routes and stops. You don't have to read it, I'll be explaining what I do as I do it.&lt;/p&gt;
&lt;h2&gt;Getting a List of Routes&lt;/h2&gt;
&lt;p&gt;According to the &lt;a href=&quot;http://www.nextbus.com/xmlFeedDocs/NextBusXMLFeed.pdf‎&quot;&gt;NextBus PDF&lt;/a&gt;, &lt;code&gt;sf-muni&lt;/code&gt; is the &quot;agency name&quot; (NextBus provides info for many different cities' bus systems) that we plug into the URL for the XML data feed. You can access &lt;a href=&quot;http://webservices.nextbus.com/service/publicXMLFeed?command=routeList&amp;a=sf-muni&quot;&gt;http://webservices.nextbus.com/service/publicXMLFeed?command=routeList&amp;#038;a=sf-muni&lt;/a&gt; to get XML text with all the routes. The XML looks like this:&lt;/p&gt;
&lt;pre&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt; 
&amp;lt;body copyright=&quot;All data copyright San Francisco Muni 2014.&quot;&amp;gt;
&amp;lt;route tag=&quot;F&quot; title=&quot;F-Market &amp;#038; Wharves&quot;/&amp;gt;
&amp;lt;route tag=&quot;J&quot; title=&quot;J-Church&quot;/&amp;gt;
&amp;lt;route tag=&quot;KT&quot; title=&quot;KT-Ingleside/Third Street&quot;/&amp;gt;
&amp;lt;route tag=&quot;L&quot; title=&quot;L-Taraval&quot;/&amp;gt;
...&lt;/pre&gt;
&lt;p&gt;I need to extract the information in the &lt;code&gt;tag&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt; attributes. I &lt;em&gt;could&lt;/em&gt; just spend time copying &amp;#038; pasting this information, but instead I'll write a throw-away Python script (called &lt;a href=&quot;http://inventwithpython.com/sfmuni/getroutes.py&quot;&gt;getroutes.py&lt;/a&gt; to do this for me.&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;http://inventwithpython.com/sfmuni/getroutes.py&quot;&gt;getroutes.py&lt;/a&gt; or &lt;a href=&quot;http://pastebin.com/xn4msVJu&quot;&gt;view it online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've installed the &lt;a href=&quot;http://docs.python-requests.org/en/latest/&quot;&gt;Requests&lt;/a&gt; module to make downloading the XML data easier. The &lt;a href=&quot;http://docs.python-requests.org/en/latest/user/quickstart/&quot;&gt;quick start&lt;/a&gt; page has a good intro in how to use it. To download a web page, you &lt;code&gt;import requests&lt;/code&gt; and then call &lt;code&gt;requests.get()&lt;/code&gt; to download the page. The &lt;code&gt;requests.get()&lt;/code&gt; function returns a &quot;request object&quot; which has the webpage as a string in the &lt;code&gt;text&lt;/code&gt; attribute. (The Requests module is &lt;strong&gt;much&lt;/strong&gt; easier to use than Python's urllib2 module.)&lt;/p&gt;
&lt;p&gt;I'll use the &lt;code&gt;xml&lt;/code&gt; and &lt;code&gt;pprint&lt;/code&gt; modules to turn the XML text file into a Python dictionary value that is saved to a file named &lt;a href=&quot;http://inventwithpython.com/sfmuni/routedata.py&quot;&gt;routedata.py&lt;/a&gt;. I can pass a dictionary value to the &lt;code&gt;pprint.pformat()&lt;/code&gt; function, and it will return a string of what that dictionary would look like typed as code. &lt;/p&gt;
&lt;p&gt;I'm using Python code to generate Python code! This sounds complicated, but just keep in mind that a Python script is just a plain text file: Technically this is Python code that generates Python code: &lt;code&gt;print(&quot;print('Hello world!')&quot;)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;http://inventwithpython.com/sfmuni/routedata.py&quot;&gt;routedata.py&lt;/a&gt; or &lt;a href=&quot;http://pastebin.com/jYiBDUk6&quot;&gt;view it online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I now have a &lt;a href=&quot;http://inventwithpython.com/sfmuni/routedata.py&quot;&gt;routedata.py&lt;/a&gt; file that looks like this:&lt;/p&gt;
&lt;pre&gt;allRoutes = {'1': '1-California',
 '10': '10-Townsend',
 '108': '108-Treasure Island',
 '12': '12-Folsom/Pacific',
...&lt;/pre&gt;
&lt;p&gt;I won't actually run this script, but I'll import it for the &lt;code&gt;allRoutes&lt;/code&gt; variable in future scripts. There are 81 routes listed in this dictionary.&lt;/p&gt;
&lt;p&gt;The entire process has looked like this:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NextBus XML feed URL &gt; getroutes.py processing &gt; Dictionary in routedata.py&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Getting Route Path Data&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;http://www.nextbus.com/xmlFeedDocs/NextBusXMLFeed.pdf‎&quot;&gt;NextBus PDF&lt;/a&gt; explaining their API says I can access a URL like &lt;a href=&quot;http://webservices.nextbus.com/service/publicXMLFeed?command=routeConfig&amp;a=sf-muni&amp;r=N&quot;&gt;http://webservices.nextbus.com/service/publicXMLFeed?command=routeConfig&amp;#038;a=sf-muni&amp;#038;r=N&lt;/a&gt; to get all the information about the N route. I just have to replace &quot;N&quot; with the other route names in the URL to get info for the other routes. Part of the XML at this URL looks like this:&lt;/p&gt;
&lt;pre&gt;&amp;lt;path&amp;gt;
&amp;lt;point lat=&quot;37.76017&quot; lon=&quot;-122.50878&quot;/&amp;gt;
&amp;lt;point lat=&quot;37.7603&quot; lon=&quot;-122.50812&quot;/&amp;gt;
&amp;lt;point lat=&quot;37.76039&quot; lon=&quot;-122.50606&quot;/&amp;gt;
&amp;lt;point lat=&quot;37.76052&quot; lon=&quot;-122.50284&quot;/&amp;gt;
&amp;lt;point lat=&quot;37.76068&quot; lon=&quot;-122.49915&quot;/&amp;gt;
&amp;lt;point lat=&quot;37.76083&quot; lon=&quot;-122.49596&quot;/&amp;gt;
&amp;lt;/path&amp;gt;
&amp;lt;path&amp;gt;
&amp;lt;point lat=&quot;37.76493&quot; lon=&quot;-122.45651&quot;/&amp;gt;
&amp;lt;point lat=&quot;37.76537&quot; lon=&quot;-122.45293&quot;/&amp;gt;&lt;/pre&gt;
&lt;p&gt;Each &amp;lt;path&amp;gt; element has the &amp;lt;point&amp;gt; elements which have latitude and longitude data &quot;that can be used to draw a route on a map.&quot; (according to the &lt;a href=&quot;http://www.nextbus.com/xmlFeedDocs/NextBusXMLFeed.pdf‎&quot;&gt;NextBus PDF&lt;/a&gt;.) The reason there are multiple &amp;lt;path&amp;gt; elements instead of one giant &amp;lt;path&amp;gt; element is also explained in the PDF: &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;Due to the nature of the configuration there can be many separate paths, some of them overlapping. A map client should simply draw all of the paths. The paths are not necessarily in any kind of order so you should only connect the points within a path. You should &lt;strong&gt;not&lt;/strong&gt; connect the points between two separate paths though.&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;So we'll need to write another script that downloads the XML for each of the 81 routes, parses it to get the path information, and then put it in a big Python dictionary. I want the Python dictionary to look something like this:&lt;/p&gt;
&lt;pre&gt;allRoutesPathData = {'N': [ [{'lon': XXX, 'lat': XXX}, {'lon': XXX, 'lat': XXX}, ...], ... ],
                     '1': [ [{'lon': XXX, 'lat': XXX}, {'lon': XXX, 'lat': XXX}, ...], ... ],
...&lt;/pre&gt;
&lt;p&gt;The dictionary's keys will be strings of the route name. The values will be lists of lists which represent each &amp;lt;path&amp;gt; element. This list will contain a series of dictionaries with keys &lt;code&gt;'lon'&lt;/code&gt; and &lt;code&gt;lat&lt;/code&gt; for the coordinate points.&lt;/p&gt;
&lt;p&gt;My &lt;a href=&quot;http://inventwithpython.com/sfmuni/getpathdata.py&quot;&gt;getpathdata.py&lt;/a&gt; script will create the URL for each route, download the XML, parse the longitude and latitude data in the XML, and then produce a giant Python dictionary with this data in a file named &lt;a href=&quot;http://inventwithpython.com/sfmuni/munipaths.py&quot;&gt;munipaths.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;http://inventwithpython.com/sfmuni/getpathdata.py&quot;&gt;getpathdata.py&lt;/a&gt; or &lt;a href=&quot;http://pastebin.com/Qw9KrxZ8&quot;&gt;view it online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;http://inventwithpython.com/sfmuni/munipaths.py&quot;&gt;munipaths.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The output of this program is in &lt;a href=&quot;http://inventwithpython.com/sfmuni/munipaths.py&quot;&gt;munipaths.py&lt;/a&gt; and looks like this:&lt;/p&gt;
&lt;pre&gt;munipaths = {'1': [[{'lat': '37.78984', 'lon': '-122.43367'},
        {'lat': '37.78999', 'lon': '-122.4325'},
        {'lat': '37.79019', 'lon': '-122.43085'},
        {'lat': '37.79036', 'lon': '-122.42918'},
        {'lat': '37.79068', 'lon': '-122.42714'},
...&lt;/pre&gt;
&lt;p&gt;This process can be summarized as:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Each NextBus route URL &gt; getpathdata.py processing &gt; Dictionary in munipaths.py&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Getting Route Stop Data&lt;/h2&gt;
&lt;p&gt;We'll also collect the stop information from the same XML feed that had the path information. According to the &lt;a href=&quot;http://www.nextbus.com/xmlFeedDocs/NextBusXMLFeed.pdf‎&quot;&gt;NextBus PDF&lt;/a&gt;, the attributes we'll be interested in are &quot;title&quot;, &quot;lat&quot;, &quot;lon&quot;, and &quot;stopId&quot;. I'll write a script to download and extract this data just like I did with the path data. I'll call this script &lt;a href=&quot;http://inventwithpython.com/sfmuni/getstopdata.py&quot;&gt;getstopdata.py&lt;/a&gt; and make it from a modified &lt;a href=&quot;http://inventwithpython.com/sfmuni/getpathdata.py&quot;&gt;getpathdata.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;http://inventwithpython.com/sfmuni/getstopdata.py&quot;&gt;getstopdata.py&lt;/a&gt; or &lt;a href=&quot;http://pastebin.com/eVeLNspA&quot;&gt;view it online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;http://inventwithpython.com/sfmuni/munistops.py&quot;&gt;munistops.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It outputs the giant Python dictionary to &lt;a href=&quot;http://inventwithpython.com/sfmuni/munistops.py&quot;&gt;munistops.py&lt;/a&gt;, which looks like this:&lt;/p&gt;
&lt;pre&gt;munistops = {'1': [{'lat': '37.7954199',
        'lon': '-122.397',
        'stopId': '14015',
        'title': 'Clay St &amp;#038; Drumm St'},
       {'lat': '37.7945',
        'lon': '-122.3976099',
        'stopId': '16294',
        'title': 'Sacramento St &amp;#038; Davis St'},
...&lt;/pre&gt;
&lt;p&gt;This process can be summarized as:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Each NextBus route URL &gt; getstopdata.py processing &gt; Dictionary in munistops.py&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Figure Out How Google Maps API Works&lt;/h2&gt;
&lt;p&gt;Okay! Now that we have all our data, we need to figure out how to draw it on Google Maps using their API. First, I'm going to &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/&quot;&gt;start reading through the Google Maps API documentation&lt;/a&gt;. (You don't have to read it, I'll summarize.)&lt;/p&gt;
&lt;p&gt;It starts off &quot;This documentation is designed for people familiar with JavaScript programming and object-oriented programming concepts.&quot; So you'll have to know a bit of JavaScript to make use of it.&lt;/p&gt;
&lt;p&gt;First, &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/tutorial#api_key&quot;&gt;according to the guide&lt;/a&gt;, we have to &lt;a href=&quot;https://code.google.com/apis/console/?noredirect&quot;&gt;sign up for a Google API key&lt;/a&gt;. This will require having a Google account. The instructions seem a bit out of date (Google has a new Dev Console site). From the APIs menu item on the left, I had to turn on &quot;Google Maps API v3&quot;. Then I went to the Credentials menu item on the left, and clicked the &quot;Create New Key&quot; button and typed in &quot;*.inventwithpython.com/*&quot; and &quot;inventwithpython.com/*&quot; as the HTTP referers since this is where I'll host the map. (My inventwithpython.com site can optionally be www.inventwithpython.com, hence the two different referers.)&lt;/p&gt;
&lt;p&gt;This gave me my API key, which for me was &quot;AIzaSyAq1luszpXp057mCW_qifsvM-_fzCOf2Ok&quot; (This key will only work on maps on the inventwithpython.com site, so you can't copy and paste it into your own apps. But getting your own API key is pretty easy.)&lt;/p&gt;
&lt;p&gt;I'll host the map at &lt;a href=&quot;http://inventwithpython.com/sfmuni&quot;&gt;http://inventwithpython.com/sfmuni&lt;/a&gt; in the index.html file (that way, the user won't have to type the &quot;index.html&quot; part of the URL).&lt;/p&gt;
&lt;p&gt;You can &lt;a href=&quot;http://pastebin.com/7HWNKLan&quot;&gt;view the final source HTML of index.html online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've copied their &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/tutorial#HelloWorld&quot;&gt;&quot;Hello World&quot;&lt;/a&gt; example, entering in my own API key and setting the &quot;sensor&quot; parameter to &quot;false&quot; (since this site won't use GPS to find the user's position).&lt;/p&gt;
&lt;p&gt;I browsed to &lt;a href=&quot;http://maps.google.com&quot;&gt;http://maps.google.com&lt;/a&gt; and did a search for &quot;San Francisco, CA&quot;, and then clicking the &quot;link&quot; icon I got this URL: &lt;a href=&quot;https://maps.google.com/?ll=37.7577,-122.4376&amp;spn=0.15906,0.308647&amp;t=m&amp;z=12&quot;&gt;https://maps.google.com/?ll=37.7577,-122.4376&amp;#038;spn=0.15906,0.308647&amp;#038;t=m&amp;#038;z=12&lt;/a&gt;. This gives a nice full view of San Francisco, and the &lt;code&gt;ll=37.7577,-122.4376&lt;/code&gt; part of the URL tells me the latitude and longitude values of the current map. I set the initial latitude and longitude of my Google Map to 37.7577 and -122.4376, and the initial zoom level to 12.&lt;/p&gt;
&lt;p&gt;I've posted this first map at this URL: &lt;a href=&quot;http://inventwithpython.com/sfmuni/firstmap.html&quot;&gt;http://inventwithpython.com/sfmuni/firstmap.html&lt;/a&gt;. You can &lt;a href=&quot;http://pastebin.com/2WjAsKjg&quot;&gt;view the source HTML of this webpage online&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Drawing Lines on the Google Map&lt;/h2&gt;
&lt;p&gt;Next, I need to read up some more to figure out how to draw what Google Maps calls &quot;polylines&quot; on the map. I'll use polylines to draw out the routes. There is &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/shapes#polylines&quot;&gt;documentation for drawing shapes&lt;/a&gt; as well as &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/examples/polyline-simple&quot;&gt;an example using polylines&lt;/a&gt; on the Google site.&lt;/p&gt;
&lt;p&gt;From the documentation, it looks like I have to have JavaScript code that creates a series of &quot;google.maps.LatLng&quot; objects which are used to create a &quot;google.maps.Polyline&quot; object. I can also set the color, opacity, and width (in pixels) of the polyline with the strokeColor, strokeOpacity, and strokeWeight parameters for the Polyline constructor.&lt;/p&gt;
&lt;p&gt;After all that, I call &lt;code&gt;setMap(map)&lt;/code&gt; on the Polyline object, where &lt;code&gt;map&lt;/code&gt; is the Google map object that was used in the &quot;Hello World&quot; example and is in firstmap.html page&lt;/p&gt;
&lt;p&gt;So I'm going to have to write Python code to generate the text of the JavaScript code. (Once again, I could do all this typing by hand, but that would take hours and hours.) But first, while I'll use the same width and opacity for each route, I don't want to use the same color for each route. I could just use the colors from the original &lt;a href=&quot;http://www.sfmta.com/maps/muni-system-map&quot;&gt;Muni System Map PDF&lt;/a&gt;, but there's a lot of color reuse. Instead I'll use some standard RGB colors: #FF0000, #00FF00, #0000FF, #FFFF00, #00FFFF, #FF00FF, #800000, #008000, #000080, #808000, #008080, #800080&lt;/p&gt;
&lt;p&gt;The JavaScript code I have to generate for each Polyline object looks something like this:&lt;/p&gt;
&lt;pre&gt;var routePath = new google.maps.Polyline({
    path: [new google.maps.LatLng(37.78984, -122.43367), ... ],
    strokeColor: '#FF0000',
    strokeOpacity: 1.0,
    strokeWeight: 2
  });
routePath.setMap(map);&lt;/pre&gt;
&lt;p&gt;I wrote &lt;a href=&quot;http://inventwithpython.com/sfmuni/generatePolylineJS.py&quot;&gt;generatePolylineJS.py&lt;/a&gt; to create this JavaScript code, which is outputted to a text file named &lt;a href=&quot;http://inventwithpython.com/sfmuni/polylineJS.js?e35b04&quot;&gt;polylineJS.js&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;http://inventwithpython.com/sfmuni/generatePolylineJS.py&quot;&gt;generatePolylineJS.py&lt;/a&gt; or &lt;a href=&quot;http://pastebin.com/e6vsaaYb&quot;&gt;view it online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;http://inventwithpython.com/sfmuni/polylineJS.js?e35b04&quot;&gt;polylineJS.js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The JavaScript code output is ready to be copied and pasted into our maps web page, and it looks like this:&lt;/p&gt;
&lt;pre&gt;var routePath = new google.maps.Polyline({
    path: [new google.maps.LatLng(37.77774, -122.43817), new google.maps.LatLng( ... ],
    strokeColor: '#00FF00',
    strokeOpacity: 1.0,
    strokeWeight: 2
  });
routePath.setMap(map);

var routePath = new google.maps.Polyline({
    path: [new google.maps.LatLng(37.77999, -122.42014) ...
...&lt;/pre&gt;
&lt;p&gt;I've copied and pasted all this text into my maps web page, index.html, at the end of the &lt;code&gt;initialize()&lt;/code&gt; function. You can view what the file looks like at this point here: &lt;a href=&quot;http://inventwithpython.com/sfmuni/secondmap.html&quot;&gt;http://inventwithpython.com/sfmuni/secondmap.html&lt;/a&gt; (Right-click this link to save the HTML file.)&lt;/p&gt;
&lt;p&gt;Look at how huge this html file is! Over 800 kb! I'm glad I wrote a script that could automatically grab the route coordinates from the NextBus feed and then generate the necessary JavaScript for me. If I had to somehow manually mark each of the latitude and longitude points for each of the routes, that would have taken weeks!&lt;/p&gt;
&lt;h2&gt;Reducing the File Size&lt;/h2&gt;
&lt;p&gt;There are 14,266 points in the web page now for all the routes. The web page file is about 800 kb in size, which will be slow to load for smart phones. Let's take out all the redundant code by simply placing the latitude and longitude numbers in a JavaScript object, and then have JavaScript code go through this object to create the Polyline objects. We'll have to write a Python script to generate this JavaScript code for us.&lt;/p&gt;
&lt;p&gt;We want to go from this:&lt;/p&gt;
&lt;pre&gt;var routePath = new google.maps.Polyline({
    path: [new google.maps.LatLng(37.77774, -122.43817), new google.maps.LatLng( ... ],
    strokeColor: '#00FF00',
    strokeOpacity: 1.0,
    strokeWeight: 2
  });
routePath.setMap(map);

var routePath = new google.maps.Polyline({
    path: [new google.maps.LatLng(37.77999, -122.42014) ...
...&lt;/pre&gt;
&lt;p&gt;...to something like this:&lt;/p&gt;
&lt;pre&gt;var allData = {&quot;38BX&quot;: [[37.78271,-122.4458,37.78537,-122.44643,37.79107,-122.40095,37.79117, ... (a lot more data here)
var routeColors = {&quot;38BX&quot;: &quot;#00FF00&quot;,&quot;9&quot;: &quot;#008000&quot;, ...
var routeNames = [&quot;38BX&quot;,&quot;9&quot;,&quot;8X&quot;, ...


for (var i = 0; i  routeNames.length; i++) { // loop over each route
    var routeName = routeNames[i];
    for (var j = 0; j  allData[routeName].length; j++) { // loop over each path on the route
        var curPath = allData[routeName][j];
        var polylinePoints = [];
        for (var k = 0; k  curPath.length; k += 2) { // loop over each point in the path
            polylinePoints.push(new google.maps.LatLng(curPath[k], curPath[k+1]));
        }
        var routePath = new google.maps.Polyline({
            path: polylinePoints,
            strokeColor: routeColors[routeName],
            strokeOpacity: 1.0,
            strokeWeight: 2
            });
        routePath.setMap(map);
    }
}&lt;/pre&gt;
&lt;p&gt;This will be much smaller since we only have the &lt;code&gt;new google.maps.LatLng(...)&lt;/code&gt; and &lt;code&gt;var routePath = new google.maps.Polyline(...)&lt;/code&gt; code typed once. The JavaScript code creates an array named &lt;code&gt;polylinePoints&lt;/code&gt; that has &lt;code&gt;google.maps.LatLng&lt;/code&gt; objects in it for the points on each path on each route. The &lt;code&gt;routeColors&lt;/code&gt; JavaScript array will store the randomly-determined color to use for each route.&lt;/p&gt;
&lt;p&gt;Also, I noticed that my data currently has a lot of redundant routes on it. For example, the 14 Mission bus route is the same as the 14L &quot;Local&quot; Mission and 14X &quot;Express&quot; Mission routes. I'll set up my new script to not include the following routes: 1AX, 1BX, 5L, 8AX, 8BX, 9L, 14L, 14X, 28L, 31AX, 31BX, 38L, 38AX, 38BX, 71L, K OWL, L OWL, M OWL, N OWL, T OWL. (Routes like the 82X stay because the original route 82 no longer exists.) Also, I later found out that routes 59, 60, 61, 30X, and NX are listed in the NextBus XML feed but are no longer in service.&lt;/p&gt;
&lt;p&gt;This JavaScript code will be generated by our Python script (named &lt;a href=&quot;http://inventwithpython.com/sfmuni/generatePolylineJS2.py&quot;&gt;generatePolylineJS2.py&lt;/a&gt;) and outputted to a file named &lt;a href=&quot;http://inventwithpython.com/sfmuni/polylineJS2.py&quot;&gt;polylineJS2.js&lt;/a&gt;. We can copy and paste this JavaScript code into our map web page.&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;http://inventwithpython.com/sfmuni/generatePolylineJS2.py&quot;&gt;generatePolylineJS2.py&lt;/a&gt; or &lt;a href=&quot;http://pastebin.com/PW0njP6n&quot;&gt;view it online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Download the output file, &lt;a href=&quot;http://inventwithpython.com/sfmuni/polylineJS2.js?e35b04&quot;&gt;polylineJS2.js&lt;/a&gt;, or &lt;a href=&quot;http://pastebin.com/Ap6YVUGT&quot;&gt;view it online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The new map web page is at &lt;a href=&quot;http://inventwithpython.com/sfmuni/thirdmap.html&quot;&gt;thirdmap.html&lt;/a&gt;. It's the same as &lt;a href=&quot;http://inventwithpython.com/sfmuni/secondmap.html&quot;&gt;secondmap.html&lt;/a&gt;, except at 226 kb it's about 70% smaller, making it much faster to load.&lt;/p&gt;
&lt;h2&gt;Adding Mouseover Events to the Lines&lt;/h2&gt;
&lt;p&gt;The different colors don't tell us what the route numbers are. It'd be nice if this information showed up whenever we hovered the mouse over it. According to the &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/events&quot;&gt;Events documentation for Google Maps&lt;/a&gt;, we can just call &lt;code&gt;addListener()&lt;/code&gt; on the &lt;code&gt;google.maps.Polyline&lt;/code&gt; and pass them the string &lt;code&gt;'mouseover'&lt;/code&gt; and a JavaScript function to call when the mouse hovers over the polyline.&lt;/p&gt;
&lt;p&gt;To display the route name, we can use an &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/infowindows&quot;&gt;InfoWindow object&lt;/a&gt; that Google Maps provides. When the mouse hovers over a line, move the InfoWindow to the mouse cursor, and then open it and display the route name. When the mouse leaves a line (the &lt;code&gt;'mouseout'&lt;/code&gt; event) we want to close the InfoWindow.&lt;/p&gt;
&lt;p&gt;When the event handling function is called, Google Maps will pass it a &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/reference#MouseEvent&quot;&gt;MouseEvent&lt;/a&gt; object with has a &lt;code&gt;latLng&lt;/code&gt; property of where the mouse event happened. We can use that location to set the position of the InfoWindow.&lt;/p&gt;
&lt;p&gt;After poking around the Google Maps documentation, here's the code I came up with to do this:&lt;/p&gt;
&lt;pre&gt;var routeNames = [&quot;38BX&quot;, ... (a bunch more code)

var routeInfoWindow = new google.maps.InfoWindow({ // this info window shows the route name when the mouse hovers over a route line
  disableAutoPan: true
});

...(other code)...

        var routePath = new google.maps.Polyline({
            path: polylinePoints,
            strokeColor: routeColors[routeName],
            strokeOpacity: 1.0,
            strokeWeight: 2
            });

        (function(thisRouteName) { // making this into a closure so that &quot;thisRouteName&quot; keeps its value
          google.maps.event.addListener(routePath, 'mouseover', function(moevent) {
            routeInfoWindow.setPosition(moevent.latLng); // set the info window where the mouse is
            routeInfoWindow.setContent(thisRouteName);
            routeInfoWindow.open(map);
          });
        })(routeName);

        routePath.setMap(map);
...(rest of the map web page)...&lt;/pre&gt;
&lt;p&gt;I decided not to have code that closes the window on the mouseout event because then you have to get the mouse precisely on the super skinny line, which was less than ideal. Also, I realized that I could make these info windows have not just the text of the route name, but also make them into a link to the &lt;a href=&quot;http://www.sfmta.com/maps/categories/muni-route-maps&quot;&gt;individual route maps on the Muni website&lt;/a&gt;. (Although since the URLs for these maps are named like &lt;a href=&quot;http://www.sfmta.com/node/11329&quot;&gt;http://www.sfmta.com/node/11329&lt;/a&gt; instead of having names based off the route name, I had to copy and paste the links from my browser and into my code. The JavaScript I added looks like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;var routeMapLinks = {&quot;1&quot;:&quot;11329&quot;, &quot;10&quot;:&quot;11341&quot;, &quot;108&quot;:&quot;11406&quot;, &quot;12&quot;:&quot;11342&quot;, &quot;14&quot;:&quot;11343&quot;, &quot;16X&quot;:&quot;11344&quot;, &quot;17&quot;:&quot;76586&quot;, &quot;18&quot;:&quot;11346&quot;, &quot;19&quot;:&quot;11347&quot;, &quot;2&quot;:&quot;11330&quot;, &quot;21&quot;:&quot;11348&quot;, &quot;22&quot;:&quot;11349&quot;, &quot;23&quot;:&quot;11350&quot;, &quot;24&quot;:&quot;11351&quot;, &quot;27&quot;:&quot;11352&quot;, &quot;28&quot;:&quot;11353&quot;, &quot;29&quot;:&quot;11355&quot;, &quot;3&quot;:&quot;11331&quot;, &quot;30&quot;:&quot;11356&quot;, &quot;31&quot;:&quot;11358&quot;, &quot;33&quot;:&quot;11359&quot;, &quot;35&quot;:&quot;11360&quot;, &quot;36&quot;:&quot;11361&quot;, &quot;37&quot;:&quot;11362&quot;, &quot;38&quot;:&quot;11363&quot;, &quot;39&quot;:&quot;11364&quot;, &quot;41&quot;:&quot;11365&quot;, &quot;43&quot;:&quot;11366&quot;, &quot;44&quot;:&quot;11367&quot;, &quot;45&quot;:&quot;11357&quot;, &quot;47&quot;:&quot;11368&quot;, &quot;48&quot;:&quot;11369&quot;, &quot;49&quot;:&quot;87351&quot;, &quot;5&quot;:&quot;11332&quot;, &quot;52&quot;:&quot;11371&quot;, &quot;54&quot;:&quot;11372&quot;, &quot;56&quot;:&quot;11373&quot;, &quot;6&quot;:&quot;11333&quot;, &quot;66&quot;:&quot;11377&quot;, &quot;67&quot;:&quot;11378&quot;, &quot;71&quot;:&quot;88001&quot;, &quot;76X&quot;:&quot;11379&quot;, &quot;81X&quot;:&quot;11381&quot;, &quot;82X&quot;:&quot;11382&quot;, &quot;83X&quot;:&quot;11383&quot;, &quot;88&quot;:&quot;73391&quot;, &quot;8X&quot;:&quot;72596&quot;, &quot;9&quot;:&quot;11339&quot;, &quot;90&quot;:&quot;11385&quot;, &quot;91&quot;:&quot;11386&quot;, &quot;F&quot;:&quot;11399&quot;, &quot;J&quot;:&quot;11387&quot;, &quot;K&quot;:&quot;71901&quot;, &quot;KT&quot;:&quot;69176&quot;, &quot;L&quot;:&quot;11398&quot;, &quot;M&quot;:&quot;11397&quot;, &quot;N&quot;:&quot;11388&quot;};&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I've made the code adjustments to the map web page and you can view it here: &lt;a href=&quot;http://inventwithpython.com/sfmuni/fourthmap.html&quot;&gt;http://inventwithpython.com/sfmuni/fourthmap.html&lt;/a&gt;. You can &lt;a href=&quot;http://pastebin.com/eHtuL53k&quot;&gt;view the source HTML online&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Adding Bus Stop Markers to the Map&lt;/h2&gt;
&lt;p&gt;Next, we want to add Google Map's markers for each of the stops. One slight problem with the data in munistops.py though: it has a list of stops for each route, but because some stops are used by multiple routes there's a lot of redundant information there. We need to make a dictionary where the keys are stops and the values hold the information for the stop (including a list of routes that the stop serves).&lt;/p&gt;
&lt;p&gt;According to the &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/reference#Marker&quot;&gt;Google Maps API documentation for markers&lt;/a&gt;, adding a marker to the map looks like this:&lt;/p&gt;
&lt;pre&gt;var marker = new google.maps.Marker({
    position: new google.maps.LatLng(, ),
    map: map,
    title: &quot;Some Title Text&quot;
    });&lt;/pre&gt;
&lt;p&gt;There's a slight problem. We have our bus stop data in a format where the keys are route names and the values are lists of stops. Since multiple routes use the same stops, we will end up with redundant bus stop markers on our map. We need to invert it so we have a Python dictionary of bus stops as keys and route names (and other info) as the values. I've written &lt;a href=&quot;http://inventwithpython.com/sfmunicleanup_stops.py/&quot;&gt;cleanup_stops.py&lt;/a&gt; to generate the JavaScript I need (it is outputted to &lt;a href=&quot;http://inventwithpython.com/sfmuni/stops_cleanedup.js?e35b04&quot;&gt;stops_cleanedup.js&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;http://inventwithpython.com/sfmuni/cleanup_stops.py&quot;&gt;cleanup_stops.py&lt;/a&gt; or &lt;a href=&quot;http://pastebin.com/aqJPqm7W&quot;&gt;view it online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;http://inventwithpython.com/sfmuni/stops_cleanedup.js?e35b04&quot;&gt;stops_cleanedup.js&lt;/a&gt; or &lt;a href=&quot;http://pastebin.com/QGXxiyrE&quot;&gt;view it online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The map web page with stop markers is here: &lt;a href=&quot;http://inventwithpython.com/sfmuni/fifthmap.html&quot;&gt;http://inventwithpython.com/sfmuni/fifthmap.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://inventwithpython.com/sfmuni/sfmuni_screenshot3.png?e35b04&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Wow. That looks horrible. I realized that I don't need another InfoWindow to appear when you click on the marker, because hovering the mouse over the marker will show a tooltip with the stop's name. But even after commenting that out, the sheer number of stops makes the map look terrible.&lt;/p&gt;
&lt;p&gt;I could add code that makes a single route's stop markers appear when the mouse is over the route polyline. Or maybe the markers only show up once you are zoomed in enough. But I like the fourth map that didn't have the markers, so I'll just go with that. (Making bus stop markers appear and disappear on the map as the mouse hovers over the route polyline is left as an exercise for the reader.)&lt;/p&gt;
&lt;p&gt;The final product is hosted at &lt;a href=&quot;http://inventwithpython.com/sfmuni/&quot;&gt;http://inventwithpython.com/sfmuni/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can &lt;a href=&quot;http://pastebin.com/7HWNKLan&quot;&gt;view the final source HTML online&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;That's the entire product: a Google Map with the San Francisco Muni routes drawn over it. At the start of this project I had no experience with the Google Maps API and didn't know where I'd get the route info. I spent much more time reading documentation and experimenting than I did writing code, which is usually how projects go.&lt;/p&gt;
&lt;p&gt;Here are the files in this tutorial:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/getroutes.py&quot;&gt;getroutes.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/routedata.py&quot;&gt;routedata.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/getpathdata.py&quot;&gt;getpathdata.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/munipaths.py&quot;&gt;munipaths.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/getstopdata.py&quot;&gt;getstopdata.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/munistops.py&quot;&gt;munistops.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/generatePolylineJS.py&quot;&gt;generatePolylineJS.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/polylineJS.js?e35b04&quot;&gt;polylineJS.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/generatePolylineJS2.py&quot;&gt;generatePolylineJS2.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/polylineJS2.js?e35b04&quot;&gt;polylineJS2.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/cleanup_stops.py&quot;&gt;cleanup_stops.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/stops_cleanedup.js?e35b04&quot;&gt;stops_cleanedup.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inventwithpython.com/sfmuni/index.html&quot;&gt;index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My final secret: I play the &lt;a href=&quot;http://en.wikipedia.org/wiki/Augmented_reality&quot;&gt;AR game&lt;/a&gt; &lt;a href=&quot;http://ingress.com&quot;&gt;Ingress&lt;/a&gt; and the reason I wanted a better Muni system map was so that I could compare it to the Ingress map of portals in the game. The 71 bus through the Haight goes by a ton of portals, and it's nice to hit them all while sitting in a bus seat, and I was wondering if there were other routes similarly packed with portals. To do that, I needed a Muni system map that was easy to navigate. :)&lt;/p&gt;
&lt;p&gt;I hope you enjoyed this tutorial. Please leave comments for any parts you have trouble understanding or you think need more explanation. Have fun and keep coding!&lt;/p&gt;</description>
	<pubDate>Thu, 11 Dec 2014 22:47:01 +0000</pubDate>
</item>
<item>
	<title>Rob Cakebread: Gigcaster hiring in L.A. - Python / SysAdmin / Music</title>
	<guid>http://blog.cakebread.info/2014/12/gigcaster-hiring-in-la-python-sysadmin.html</guid>
	<link>http://blog.cakebread.info/2014/12/gigcaster-hiring-in-la-python-sysadmin.html</link>
	<description>&lt;br /&gt;A few months ago I created a start-up called Gigcaster. We produce a handheld device for broadcasting audio live on the internet. I've been testing and demonstrating the device around Los Angeles with bands, dj's, record labels, studios and radio stations. We're about to launch our site and do a private beta test soon.&lt;br /&gt;&lt;br /&gt;I don't expect to hire until the first quarter of 2015, but I'm looking for local skilled Python coders and Linux systems administrators, particularly if you're interested in live music.&lt;br /&gt;&lt;br /&gt;Our data center and office are located in downtown Los Angeles. Please send resumes or inquiries to my last name at gmail.com.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-jkjejpUB_T0/VIpOr4Np1pI/AAAAAAAABwc/7WLMReTP7tE/s1600/gigcaster_stack.png&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://1.bp.blogspot.com/-jkjejpUB_T0/VIpOr4Np1pI/AAAAAAAABwc/7WLMReTP7tE/s1600/gigcaster_stack.png&quot; height=&quot;213&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Thu, 11 Dec 2014 18:14:17 +0000</pubDate>
</item>
<item>
	<title>Martijn Faassen: A Review of the Web and how Morepath fits in</title>
	<guid>http://blog.startifact.com/posts/a-review-of-the-web-and-how-morepath-fits-in.html</guid>
	<link>http://blog.startifact.com/posts/a-review-of-the-web-and-how-morepath-fits-in.html</link>
	<description>&lt;div&gt;&lt;p&gt;I've spent a bit of time writing the somewhat grandiosely titled &lt;a class=&quot;reference external&quot; href=&quot;http://morepath.readthedocs.org/en/latest/web.html&quot;&gt;A
Review of the Web&lt;/a&gt;, and I think it's a neat addition to the
documentation of the &lt;a class=&quot;reference external&quot; href=&quot;http://morepath.readthedocs.org&quot;&gt;Morepath&lt;/a&gt; web framework.&lt;/p&gt;
&lt;p&gt;It attempts to do two things:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Help those developers who aren't as familiar yet with the details of
web technology to get a handle on various concepts surrounding web
frameworks and web services.&lt;/li&gt;
&lt;li&gt;Show to developers who &lt;em&gt;are&lt;/em&gt; more familiar with these concepts how
Morepath fits in as a web framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Does this document fulfill either purpose? Let me know!&lt;/p&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 11 Dec 2014 16:26:00 +0000</pubDate>
</item>
<item>
	<title>Nathan Lemoine: An intuitive explanation for the ‘double-zeroes’ problem with Euclidean distances</title>
	<guid></guid>
	<link></link>
	<description>First, some background. Given a multivariate dataset with a large number of descriptor variables (i.e. columns in the matrix), ecologists (and others) often try to distill all of the descriptors into a single metric describing the relatedness of the objects &amp;#8230; &lt;a href=&quot;https://climateecology.wordpress.com/2014/12/11/an-intuitive-explanation-for-the-double-zeroes-problem-with-euclidean-distances/&quot;&gt;Continue reading &lt;span class=&quot;meta-nav&quot;&gt;&amp;#8594;&lt;/span&gt;&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://pixel.wp.com/b.gif?host=climateecology.wordpress.com&amp;blog=38320047&amp;post=1108&amp;subd=climateecology&amp;ref=&amp;feed=1&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 11 Dec 2014 14:00:53 +0000</pubDate>
</item>
<item>
	<title>Filipe Saraiva: Moving to Stockholm</title>
	<guid>http://blog.filipesaraiva.info/?p=1447</guid>
	<link>http://blog.filipesaraiva.info/?p=1447</link>
	<description>&lt;p&gt;&lt;img class=&quot;alignnone aligncenter&quot; src=&quot;http://blog.filipesaraiva.info/wp-content/uploads/2014/12/moving_to_stockholm.jpg&quot; alt=&quot;&quot; width=&quot;652&quot; height=&quot;318&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Stockholm&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[&lt;em&gt;This post is off-topic for some Planet readers, sorry for it. I just expect to get some help with free software communities.&lt;/em&gt;]&lt;/p&gt;
&lt;p&gt;Exciting times are coming to me before the end of year. Next week (probably) I am going to Stockholm to live for 5 months. I am getting an visiting researcher position at  &lt;a href=&quot;http://www.kth.se/en&quot;&gt;KTH &amp;#8211; Royal Institute of Technology&lt;/a&gt; as part of my PhD course. I will work with &lt;a href=&quot;http://www.kth.se/en/ees/omskolan/organisation/avdelningar/ics/2.34629/welcome-to-psmix-1.184319&quot; target=&quot;_blank&quot;&gt;PSMIX&lt;/a&gt; group &amp;#8211; Power System Management with related Information Exchange, leaded by Prof. Lars Nordström.&lt;/p&gt;
&lt;p&gt;The subject of my project is the modelling and simulation of smart grids (power system plus a layer of communication and decision making automation) features using multi-agent systems. I expect to work with the simulation platform developed by PSMIX based in Raspberry PI and &lt;a href=&quot;https://github.com/javipalanca/spade&quot; target=&quot;_blank&quot;&gt;SPADE&lt;/a&gt; framework. The platform is described in &lt;a href=&quot;http://dx.doi.org/10.1109/PESGM.2014.6939798&quot; target=&quot;_blank&quot;&gt;this paper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Well, I am &lt;span id=&quot;result_box&quot; class=&quot;short_text&quot; lang=&quot;en&quot;&gt;&lt;span class=&quot;hps&quot;&gt;very anxious&lt;/span&gt;&lt;/span&gt; with this travel because two things: the communication in English and the Sweden winter. The second is my main concern. Gosh, going out from the all the days Brazilian summer to the Nordic winter! :'( But ♫ I will survive ♪ (I expect). &lt;img src=&quot;http://blog.filipesaraiva.info/wp-includes/images/smilies/icon_wink.gif&quot; alt=&quot;;)&quot; class=&quot;wp-smiley&quot; /&gt;&lt;/p&gt;
&lt;p&gt;If you know someone to help me with tips about apartment rent, I will be very glad. Rent accommodation in Stockholm is very hard and expensive.&lt;/p&gt;
&lt;p&gt;Thanks and I will send news!&lt;/p&gt;</description>
	<pubDate>Thu, 11 Dec 2014 12:41:03 +0000</pubDate>
</item>
<item>
	<title>Python Diary: Developing an XBMC add-on in Python</title>
	<guid>http://www.pythondiary.com/blog/Dec.11,2014/developing-xbmc-add-python.html</guid>
	<link>http://www.pythondiary.com/blog/Dec.11,2014/developing-xbmc-add-python.html</link>
	<description>&lt;p&gt;XBMC is one awesome piece of media center software that runs on all popular platforms.  What's more, is that it's entirely programmable via Python.  I have released a couple XBMC related Python tools and videos earlier this year, and now I wanted to dive into add-on development.  The add-on I will show you today takes advantage of my &lt;a href=&quot;gopher://gopher.veroneau.net/0library/gopherlib.py&quot;&gt;gopherlib.py&lt;/a&gt; module.  This add-on will soon be submitted to the Official XBMC Addon repository in the coming weeks for all to enjoy.  Here is how the add-on looks when it's running in XBMC:&lt;/p&gt;
&lt;a href=&quot;http://b8b0a9c6c88688e6d1be-06e5a87bf9bab6caba985efbd63d0222.r54.cf1.rackcdn.com/blog_image/XBMCGopher1.png&quot;&gt;&lt;img src=&quot;http://b8b0a9c6c88688e6d1be-06e5a87bf9bab6caba985efbd63d0222.r54.cf1.rackcdn.com/blog_image/XBMCGopher1.png&quot; border=&quot;0&quot; width=&quot;100&quot; height=&quot;100&quot; /&gt;&lt;/a&gt;
&lt;p&gt;As I mentioned in my last post about Gopher, XBMC follows the Gopher protocol pretty closely, so it was pretty easy to create an XBMC Gopher client.  Here is the code which I will explain afterwords:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;xbmcgui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;xbmcplugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urlparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gopherlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Gopher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GopherMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextFile&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;BASE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addon_handle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'HANDLE: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addon_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LOGNOTICE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmcgui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iconImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DefaultFolder.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xbmcplugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addDirectoryItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addon_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;listitem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isFolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_text_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmcgui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iconImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DefaultVideo.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xbmcplugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addDirectoryItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addon_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;listitem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_image_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmcgui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iconImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DefaultPicture.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#li.setProperty('isPlayable', 'true')&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xbmcplugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addDirectoryItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addon_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;listitem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmcgui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iconImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DefaultVideo.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xbmcplugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addDirectoryItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addon_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listitem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;text_viewer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;WINDOW&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10147&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Text Viewer window in XBMC&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TITLEBAR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executebuiltin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ActivateWindow(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;)&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WINDOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmcgui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WINDOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TITLEBAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CONTENTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;image_viewer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmcgui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xbmcgui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ControlImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doModal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;del&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BASE URL: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BASE_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LOGNOTICE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Arguments: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LOGNOTICE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remainder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BASE_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlparse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remainder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;netloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_qs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'query'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Path: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LOGNOTICE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/gopher.floodgap.com:70/1'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Gopher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'7'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keyboard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Keyboard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Input Required'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keyboard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doModal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyboard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isConfirmed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyboard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GopherMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'plugin://plugin.picture.gopher/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'port'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'selector'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;add_text_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;add_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;add_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'7'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;add_directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'I'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;add_image_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xbmcplugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endOfDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addon_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text_viewer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'I'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xbmc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translatePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'special://temp/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;image_viewer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unlink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This code should be fairly easy to follow, as it basically goes from top to bottom, with a function call here and there.  The first 4 functions are for generating the correct directory entries within the XBMC GUI.  After, you will see 2 specialized functions used to display textual data, and another to display an image.  I was unable to find a more elegant way to display resolved image URLs in XBMC.  I tried using many different XBMC functions, but &lt;strong&gt;xbmcplugin.setResolvedUrl&lt;/strong&gt; just wouldn't work with image files...  When I implement video and audio support in the future, I will try it again.  I may need to see if I can create a new VFS module for XBMC, so that the &lt;strong&gt;gopher://&lt;/strong&gt; protocol is natively supported for streaming.&lt;/p&gt;
&lt;p&gt;The next section here takes the arguments from XBMC and turns them into a valid Gopher URL which we can then send to my &lt;strong&gt;gopherlib&lt;/strong&gt; module.  Once that is out of the way, we can instantiate our &lt;strong&gt;Gopher&lt;/strong&gt; class.  It is here that we check if the selector is a search selector and bring up the on-screen keyboard for the user if needed.  Finally we get our selector and the resulting data object.&lt;/p&gt;
&lt;p&gt;The final &lt;strong&gt;if&lt;/strong&gt; structure here is used to either display an XBMC directory, a text file, or an image to the user.&lt;/p&gt;
&lt;p&gt;You can view many more screenshots and even download the prepackaged add-on in ZIP format from my &lt;a href=&quot;gopher://gopher.veroneau.net/1library/XBMC&quot;&gt;Gopher server&lt;/a&gt; or use the &lt;a href=&quot;http://gopher.floodgap.com/gopher/gw?gopher://gopher.veroneau.net:70/1library/XBMC&quot;&gt;Gopher proxy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On a side note, I also updated the Android Gopher client, since it's licensed under the BSD license, the source was available.  The update now brings a more modern look and feel on newer phones and tablets, and now included a working address bar.  You can grab the APK from my &lt;a href=&quot;gopher://gopher.veroneau.net/1library/OverbiteAndroid&quot;&gt;Gopher&lt;/a&gt; or &lt;a href=&quot;http://gopher.floodgap.com/gopher/gw?gopher://gopher.veroneau.net:70/1library/OverbiteAndroid&quot;&gt;Gopher proxy&lt;/a&gt; and side load today!&lt;/p&gt;
&lt;p&gt;One added benefit coming soon to Gopher users, will be the ability to browse and search all of the content on Python Diary from the comfort of Gopher.  I will be developing a basic Gopher application which will be-able to access the current Python Diary database and query it.  So, Python Diary will soon be available on XBMC I guess.  So keep a look out for that update when it arrives.&lt;/p&gt;</description>
	<pubDate>Thu, 11 Dec 2014 12:00:00 +0000</pubDate>
</item>
<item>
	<title>eGenix.com: eGenix mxODBC Zope DA 2.2.0 GA</title>
	<guid>http://www.egenix.com/company/news/eGenix-mxODBC-Zope-DA-2.2.0-GA.html</guid>
	<link>http://www.egenix.com/company/news/eGenix-mxODBC-Zope-DA-2.2.0-GA.html</link>
	<description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;http://www.egenix.com/products/zope/mxODBCZopeDA/&quot;&gt;eGenix mxODBC Zope DA&lt;/a&gt;&lt;a class=&quot;egenix-tm&quot; href=&quot;http://www.egenix.com/legal/trademarks.html&quot;&gt;™&lt;/a&gt; allows you to &lt;span&gt;easily connect&lt;/span&gt; your &lt;a href=&quot;http://www.plone.org/&quot;&gt;Plone CMS&lt;/a&gt;
or  &lt;a href=&quot;http://www.zope.org/&quot;&gt;Zope&lt;/a&gt; installation &lt;span&gt;to just about any database backend&lt;/span&gt; on the market today,
giving you the reliability of the commercially supported eGenix product
&lt;a href=&quot;http://www.egenix.com/products/python/mxODBC/&quot;&gt;mxODBC &lt;/a&gt;and the flexibility of the ODBC standard as middle-tier architecture.&lt;/p&gt;
&lt;p&gt;The mxODBC Zope Database Adapter is highly portable, just like Zope itself and provides a &lt;span&gt;high performance interface&lt;/span&gt;
to all your ODBC data sources, using a single well-supported interface
on Windows, Linux, Mac OS X, FreeBSD and other platforms.&lt;/p&gt;
&lt;p&gt;This makes it &lt;span&gt;ideal for deployment in ZEO Clusters&lt;/span&gt;
and Zope hosting environments where stability and high performance are
a top priority, establishing an excellent basis and scalable solution
for your Plone CMS.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;a href=&quot;http://www.egenix.com/products/zope/mxODBCZopeDA/&quot;&gt;&lt;span&gt;mxODBC Zope DA Product Page&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;News&lt;/h2&gt;
&lt;p&gt;We are pleased to announce our new &lt;a href=&quot;http://www.egenix.com/products/zope/mxODBCZopeDA/&quot;&gt;version 2.2.0&lt;/a&gt; of the &lt;a href=&quot;http://www.egenix.com/products/zope/mxODBCZopeDA/&quot;&gt;&lt;span&gt;mxODBC Zope/Plone Database Adapter&lt;/span&gt;&lt;/a&gt; product.&lt;/p&gt;
&lt;p&gt;In this release, we have upgraded the adapter to mxODBC 3.3.1 and 
added compatibility with the latest Plone releases and ODBC 
drivers/managers.&lt;br /&gt;
&lt;/p&gt;
&lt;h3&gt;Feature Enhancements:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Compatible with Plone 4.0 - 4.3.&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Compatible with the upcoming Plone 5.0.&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h4&gt;Enhanced Support for Stored Procedures&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;Added documentation on how to call stored procedures&lt;/b&gt; from Plone / Zope.&lt;br /&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Added support for input, output and input/output parameters to the .callproc() method&lt;/b&gt; for calling stored procedures.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Added documentation on how to use External Methods&lt;/b&gt; to access and use the mxODBC Zope DA connection objects.&lt;/li&gt;

&lt;/ul&gt;
&lt;h4&gt;Fast Cursor Types&lt;/h4&gt;


&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Switched to forward-only cursor types for all database backends&lt;/b&gt;, since this provides a much better performance for MS SQL Server and IBM DB2 drivers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Updated mxODBC API&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;
    &lt;/b&gt;&lt;b&gt;Access all new features from the updated mxODBC 3.3 API&lt;/b&gt; via the DatabaseConnect.connection attribute or by importing the &lt;a href=&quot;http://www.egenix.com/products/python/mxODBC/&quot;&gt;mxODBC API&lt;/a&gt; directly. Please see the &lt;a href=&quot;http://www.egenix.com/company/news/eGenix-mxODBC-3.3.0-GA.html&quot;&gt;mxODBC 3.3.0&lt;/a&gt; and &lt;a href=&quot;http://www.egenix.com/company/news/eGenix-mxODBC-3.3.0-GA.html&quot;&gt;3.3.1 release announcements&lt;/a&gt; for full details.&lt;/li&gt;&lt;/ul&gt;
&lt;h4&gt;Easier Installation&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;ThreadLock egg distribution&lt;/b&gt; provided by eGenix to avoid having a compiler installed for the installation buildout run. Please see our &lt;a href=&quot;http://www.egenix.com/company/news/eGenix-ThreadLock-Distribution-2.13.0.1.html&quot;&gt;ThreadLock distribution release announcement&lt;/a&gt; for details.
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the full list of features, please see the &lt;a href=&quot;http://www.egenix.com/products/zope/mxODBCZopeDA/#Features&quot;&gt;mxODBC Zope DA feature list&lt;/a&gt;.

&lt;/p&gt;
&lt;ul&gt;

&lt;/ul&gt;


&lt;h3&gt;Driver Compatibility Enhancements:&lt;/h3&gt;







&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ODBC driver compatibility updated&lt;/b&gt;. By upgrading to the latest
 mxODBC 3.3 release, we are bringing all compatibility enhancements 
added to mxODBC 3.3 to the mxODBC Zope DA. This includes updated support
 for &lt;b&gt;Oracle, MS SQL Server, Sybase ASE, IBM DB2, PostgreSQL &lt;/b&gt;and &lt;b&gt;MySQL&lt;/b&gt;. See the &lt;a href=&quot;http://www.egenix.com/company/news/eGenix-mxODBC-3.3.0-GA.html&quot;&gt;mxODBC 3.3.0&lt;/a&gt; and &lt;a href=&quot;http://www.egenix.com/company/news/eGenix-mxODBC-3.3.0-GA.html&quot;&gt;3.3.1 release announcements&lt;/a&gt; for full details.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ODBC manager compatibility updated.&lt;/b&gt; Built against unixODBC 
2.3.2, iODBC 3.52.8, DataDirect 7.1.2 on Unix. Built against the MS 
Windows Manager ODBC on Windows. Built against iODBC 3.52.8 on Mac OS X.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
  
&lt;/p&gt;
&lt;p&gt;The complete list of changes is available on the &lt;a href=&quot;http://www.egenix.com/products/zope/mxODBCZopeDA/changelog.html&quot;&gt;mxODBC Zope DA changelog page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Upgrading

  &lt;/h2&gt;
&lt;p&gt;Users are encouraged to upgrade to this latest mxODBC Plone/Zope Database Adapter
 release to benefit from the new features and updated ODBC driver 
support. We have taken special care not to introduce backwards incompatible
changes, making the upgrade experience as smooth as possible.&lt;br /&gt;
  &lt;/p&gt;



  
&lt;p&gt;For major and minor upgrade purchases, we will give out &lt;b&gt;20% discount coupons&lt;/b&gt; going 
from mxODBC Zope DA 1.x to 2.2 and &lt;b&gt;50% coupons&lt;/b&gt; for upgrades from mxODBC 2.x to 
2.2. After upgrade, use of the original license
from which you upgraded is no longer permitted. Patch level upgrades (e.g. 2.2.0 to 2.2.1) are always free of charge.&lt;br /&gt;
&lt;/p&gt;


  &lt;p&gt;Please contact the &lt;a href=&quot;mailto:sales@egenix.com&quot;&gt;eGenix.com Sales Team&lt;/a&gt;  with your existing license serials for details for an upgrade discount coupon.&lt;/p&gt;

If you want to try the new release before purchase, you can &lt;a href=&quot;http://www.egenix.com/products/python/mxODBCZopeDA/#Evaluation&quot;&gt;&lt;strong&gt;request 30-day evaluation licenses&lt;/strong&gt;&lt;/a&gt; by visiting our web-site or writing to &lt;a href=&quot;mailto:sales@egenix.com?subject=mxODBC%20Python%20Package%20Evaluation%20Request&quot;&gt;sales@egenix.com&lt;/a&gt;, stating your name (or the name of the company) and the number of eval licenses that you need.&lt;h2&gt;Downloads&lt;/h2&gt;

&lt;p&gt;Please visit the &lt;a href=&quot;http://www.egenix.com/products/zope/mxODBCZopeDA/&quot;&gt;&lt;span&gt;eGenix mxODBC Zope DA&lt;/span&gt;&lt;/a&gt; product page for  downloads, instructions on installation and documentation of the packages.&lt;/p&gt;
&lt;p&gt;If you want to try the package, please jump straight to the &lt;a href=&quot;http://www.egenix.com/products/zope/mxODBCZopeDA/#Download&quot;&gt;download instructions&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;


Fully functional evaluation licenses for the mxODBC Zope DA are &lt;a href=&quot;http://www.egenix.com/products/zope/mxODBCZopeDA/#Evaluation&quot;&gt;&lt;strong&gt;available free of charge&lt;/strong&gt;&lt;/a&gt;.&lt;br /&gt;
&lt;h2&gt;Support&lt;/h2&gt;

&lt;p&gt;Commercial support for this product is available directly from eGenix.com. &lt;br /&gt;
  &lt;br /&gt;
 Please see the &lt;a href=&quot;http://www.egenix.com/services/support/&quot;&gt;support section of our website&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;




&lt;h2&gt;More Information&lt;/h2&gt;
&lt;p&gt;For more information on eGenix mxODBC Zope DA, licensing and download instructions, please write to &lt;a href=&quot;mailto:sales@egenix.com&quot;&gt;sales@egenix.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enjoy ! &lt;/p&gt;
&lt;p&gt;&lt;i&gt; Marc-Andre Lemburg, eGenix.com&lt;/i&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 11 Dec 2014 08:00:00 +0000</pubDate>
</item>
<item>
	<title>Mike C. Fletcher: Playing with Web Sockets</title>
	<guid>http://blog.vrplumber.com/b/2014/12/10/playing-web-sockets/</guid>
	<link>http://blog.vrplumber.com/b/2014/12/10/playing-web-sockets/</link>
	<description>&lt;p&gt;Been playing around a bit with web-sockets under Twisted. This time I didn't go with autobahn, as the last time I played with it I just wound up stuck on lots of stuff I didn't need.  What I decided to play with is a Web Socket based server-controlled messaging daemon. It's *not* going to run your bit enterprise, it's just me playing around.&lt;/p&gt;

&lt;p&gt;The idea:&lt;/p&gt;

&lt;p&gt;* you have a django web site&lt;br /&gt;* you want to have any process on the server be able to send messages to connected sessions on any number of channels&lt;br /&gt;* you want the server-side api to be dirt-simple-dumb (as in, you could include it in a bash script)&lt;br /&gt;* you may want to allow a remote client to send messages to a channel as well&lt;br /&gt;* there is no configuration happening on-the-wire, all control is handled by the server&lt;br /&gt;* the server controls which sessions can read/write to each channel&lt;br /&gt;* the server also controls which sessions can be connected&lt;/p&gt;

&lt;p&gt;I went with txWS as the web socket implementation, mostly because it was simple to comprehend the source code. The use of the web socket isn't really all that relevant to the application, it's just how messages get to/from it. The low-level server-side sending is done with inotify watches on a directory structure (stored in a RAM disk). Server processes can write files directly or use a command-line to send them.&lt;/p&gt;

&lt;p&gt;I'd say the code is now at &quot;sketch&quot; level. You can start up an ssws-server, run ssws-session --readable mychannel my-session-key to enable connection/reading on a channel, and then connect your web-browser to the ssws-server via the included JQuery-based Javascript object. Lots of critical bits are missing, and I still haven't tried it behind an nginx 1.6 proxy setup for wss support.&lt;/p&gt;

&lt;p&gt;Anyway, the sketch is up on github https://github.com/mcfletch/ssws&lt;/p&gt;</description>
	<pubDate>Thu, 11 Dec 2014 05:37:05 +0000</pubDate>
</item>
<item>
	<title>Nick Coghlan: Running Kallithea on OpenShift</title>
	<guid>http://www.curiousefficiency.org/posts/2014/12/kallithea-on-openshift.html</guid>
	<link>http://www.curiousefficiency.org/posts/2014/12/kallithea-on-openshift.html</link>
	<description>&lt;div&gt;&lt;h2&gt;Kallithea for CPython&lt;/h2&gt;
&lt;p&gt;The CPython core development team are currently evaluating our options for
modernising our core development workflows to better match the standards
set by other projects and services like OpenStack and GitHub.&lt;/p&gt;
&lt;p&gt;The first step in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0474/&quot;&gt;my own proposal&lt;/a&gt;
for that is to migrate a number of the support repositories currently hosted
using a basic Mercurial server on hg.python.org to an instance of
&lt;a href=&quot;https://kallithea-scm.org/&quot;&gt;Kallithea&lt;/a&gt; hosted as forge.python.org.
(Kallithea is a GPLv3 Python project that was forked from RhodeCode after
certain aspects of the latter's commercialisation efforts started alienating
several members of their user and developer community)&lt;/p&gt;
&lt;p&gt;Tymoteusz Jankowski (a contributor to Allegro Group's open source data centre
inventory management system, &lt;a href=&quot;http://ralph.allegrogroup.com/&quot;&gt;Ralph&lt;/a&gt;), has
already started looking at the steps that might be involved in integrating a
Kallithea instance into the PSF's Salt based
&lt;a href=&quot;https://github.com/xliiv/psf-salt/tree/kallithea&quot;&gt;infrastructure automation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, for my proposal to be as successful as I would like it to be, I need
the barriers to entry for the development and deployment of the upstream
Kallithea project itself to be as low as possible. One of the challenges
we've often had with gaining contributors to CPython infrastructure
maintenance is the relatively high barriers to entry for trying out service
changes and sharing them with others, so this time I plan to tackle that
concern &lt;em&gt;first&lt;/em&gt;, by ensuring that addressing it is a mandatory requirement
in my proposal.&lt;/p&gt;
&lt;p&gt;That means tackling two particular problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Having a way to easily run local test instances for development and
  experimentation&lt;/li&gt;
&lt;li&gt;Having a way to easily share demonstration instances with others&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the first problem, I plan to rely on Vagrant and Docker, while for the
second I'll be relying on the free tier in Red Hat's OpenShift Online
service. Unfortunately, while the
&lt;a href=&quot;http://www.openshift.org/&quot;&gt;next generation&lt;/a&gt; of OpenShift will support Docker
images natively, for the time being, I need to tackle these as two separate
problems, as there aren't any existing Docker based services I'm aware of
with a free tier that is similarly suited to the task of sharing development
prototypes for open source web services with a broad audience (let alone
any such services that are also
&lt;a href=&quot;https://github.com/openshift&quot;&gt;fully open source&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Once I have these working to my satisfaction, I'll propose them to the
Kallithea team for inclusion in the Kallithea developer documentation, but
in the meantime I'll just document them here on the blog.&lt;/p&gt;
&lt;h2&gt;Enabling Kallithea deployment on OpenShift&lt;/h2&gt;
&lt;p&gt;My first priority is to get a public demonstration instance up and running
that I can start tweaking towards the CPython core development community's
needs (e.g. installing the custom repo hooks we run on hg.python.org), so
I'm starting by figuring out the OpenShift setup needed to run public
instances - the Vagrant/Docker based setup for local development will come
later.&lt;/p&gt;
&lt;p&gt;Conveniently, WorldLine previously created an &lt;a href=&quot;https://github.com/worldline/openshift-rhodecode&quot;&gt;OpenShift quickstart for
RhodeCode&lt;/a&gt; and published
it under the Apache License 2.0, so I was able to use that as a starting
point for my own
&lt;a href=&quot;https://github.com/ncoghlan/openshift-kallithea&quot;&gt;Kallithea quickstart&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While I personally prefer to run Python web services under mod_wsgi in order
to take advantage of Apache's authentication &amp;amp; authorisation plugin ecosystem,
that's not a significant concern for the demonstration server use case I have
in mind here. There are also some other aspects in the WorldLine quickstart
I'd like to understand better and potentially change (like figuring out a
better way of installing git that doesn't involve hardcoding a particular
version), but again, not a big deal for demonstration instances - rather
than worrying about them too much, I just annotated them as &lt;code&gt;TODO&lt;/code&gt; comments
in the OpenShift hook source code.&lt;/p&gt;
&lt;p&gt;I'd also prefer to be running under the official Python 2.7 cartridge rather
than a DIY cartridge, but again, my focus at this point is on getting
something up and running, and then iterating from there to improve it.&lt;/p&gt;
&lt;p&gt;That meant adapting the quickstart from RhodeCode to Kallithea was mostly
just a matter of changing the names of the various components being installed
and invoked, together with changing the actual installation and upgrade steps
to be based on Kallithea's deployment instructions.&lt;/p&gt;
&lt;p&gt;The keys to this are the
&lt;a href=&quot;https://github.com/ncoghlan/openshift-kallithea/blob/master/.openshift/action_hooks/build&quot;&gt;build hook&lt;/a&gt;
and the
&lt;a href=&quot;https://github.com/ncoghlan/openshift-kallithea/blob/master/.openshift/action_hooks/start&quot;&gt;start hook&lt;/a&gt;.
The &lt;a href=&quot;https://developers.openshift.com/en/managing-action-hooks.html&quot;&gt;OpenShift docs&lt;/a&gt;
have more details on the various available action hooks and when they're run.&lt;/p&gt;
&lt;p&gt;In addition to the &lt;code&gt;TODO&lt;/code&gt; comments noted above, I also added various comments
explaining &lt;em&gt;what&lt;/em&gt; different parts of the action hook scripts were doing.&lt;/p&gt;
&lt;p&gt;(Note: I haven't actually &lt;em&gt;tested&lt;/em&gt; an upgrade, only the initial
deployment described below, so I can't be sure I have actually adapted the
upgrade handling correctly yet)&lt;/p&gt;
&lt;h2&gt;Deploying my own Kallithea instance&lt;/h2&gt;
&lt;p&gt;I already have an OpenShift account, so I could
&lt;a href=&quot;https://www.openshift.com/app/account/new&quot;&gt;skip that step&lt;/a&gt;, and just
create a new app under my existing account. However, I didn't have the command
line tools installed, so that was the first step in creating my own instance:&lt;/p&gt;
&lt;pre class=&quot;code literal-block&quot;&gt;&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rhc&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;yum is able to figure out on my behalf that it is &lt;code&gt;rubygems-rhc&lt;/code&gt; that
provides the command line tools for OpenShift in Fedora (alternatively,
I could have looked that up myself in the
&lt;a href=&quot;https://developers.openshift.com/en/getting-started-client-tools.html#fedora&quot;&gt;OpenShift client tools installation docs&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The next step was to configure the command line tools to use my OpenShift
Online account, generate a local login token for this machine, and upload
my public SSH key to OpenShift Online. That process involved working through
the interactive prompts in:&lt;/p&gt;
&lt;pre class=&quot;code literal-block&quot;&gt;&lt;span class=&quot;n&quot;&gt;rhc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;With those preliminary OpenShift steps out of the way, it was time to
move on to deploying the application itself. It's worth noting that
app creation automatically clones a local git repo named after the application,
so I created a separate &quot;app_repos&quot; subdirectory in my development directory
specifically so I could call my OpenShift app &quot;kallithea&quot; without conflicting
with my local clone of the main kallithea repo.&lt;/p&gt;
&lt;p&gt;As described in the quickstart README, the app creation command is:&lt;/p&gt;
&lt;pre class=&quot;code literal-block&quot;&gt;&lt;span class=&quot;n&quot;&gt;rhc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kallithea&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postgresql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.2&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;That churned away for a while, and then attempted to clone the app repo
locally over ssh (with SSH putting up a prompt to accept the validity of the
app's freshly generated SSH key). I'm not sure why, but for some reason that
automatic clone operation didn't work for me. &lt;code&gt;rhc&lt;/code&gt; put up a detailed
message explaining that the app creation had worked, but the clone step had
failed. Fortunately, as the troubleshooting notice suggested, a subsequent
&lt;code&gt;rhc git-clone kallithea&lt;/code&gt; worked as expected.&lt;/p&gt;
&lt;p&gt;OpenShift provides a default app skeleton automatically, but I actually
want to get rid of that and replace it with the contents of the quickstart
repo:&lt;/p&gt;
&lt;pre class=&quot;code literal-block&quot;&gt;&lt;span class=&quot;n&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;openshift&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;misc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;README&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Remove template files&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remote&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quickstart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//github.com/ncoghlan/openshift-kallithea.git&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pull&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theirs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quickstart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;The default merge commit message that popped up was fine, so I just accepted
that and moved on to the most interesting step:&lt;/p&gt;
&lt;pre class=&quot;code literal-block&quot;&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Because this is the first build, there's a lot of output related to
installing and building the PostgreSQL driver and git, before moving on
to installing Kallithea and its dependencies.&lt;/p&gt;
&lt;p&gt;However, that still didn't take long, and completed without errors, so I now
have my own Kallithea instance
&lt;a href=&quot;http://kallithea-ncoghlan.rhcloud.com/&quot;&gt;up and running&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And no, the default admin credentials created by the quickstart won't work
anymore - I immediately logged in to the admin account to change them!&lt;/p&gt;
&lt;h2&gt;Where to from here?&lt;/h2&gt;
&lt;p&gt;There are various aspects of the current quickstart that are far from ideal,
but I don't plan to spend a lot of time worrying about it when I know that
support for using Docker images directly in OpenShift is coming at some
point in the not too distant future.&lt;/p&gt;
&lt;p&gt;One of the key advantages of Docker is the much nicer approach it offers to
layered application development where infrastructure experts can provide
base images for others to build on, and in the case of deploying Python
applications with mod_wsgi, that means listening to Graham Dumpleton (the
author of mod_wsgi, currently working for New Relic).&lt;/p&gt;
&lt;p&gt;On that front, Graham has actually been
&lt;a href=&quot;http://blog.dscpl.com.au/2014/12/hosting-python-wsgi-applications-using.html&quot;&gt;working on&lt;/a&gt;
creating a set of Debian based
&lt;a href=&quot;https://registry.hub.docker.com/u/grahamdumpleton/mod-wsgi-docker/&quot;&gt;mod_wsgi Docker images&lt;/a&gt;
that Python developers can use, rather than having to build their own from
scratch.&lt;/p&gt;
&lt;p&gt;In my case, I'd really prefer something based on CentOS 7 or Fedora Cloud,
but that's a relatively minor quibble, and Graham's images should still make
a great basis for putting together a Vagrant+Docker based local workflow
for folks working on Kallithea.&lt;/p&gt;
&lt;p&gt;That, however, is a topic for a future post :)&lt;/p&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 11 Dec 2014 03:18:26 +0000</pubDate>
</item>
<item>
	<title>Amit Saha: Announcing early access for “Doing Math with Python”</title>
	<guid>http://echorand.me/2014/12/11/announcing-early-access-for-doing-math-with-python/</guid>
	<link>http://echorand.me/2014/12/11/announcing-early-access-for-doing-math-with-python/</link>
	<description>&lt;p&gt;I am excited to write that my new book &amp;#8220;&lt;a title=&quot;Doing Math with Python&quot; href=&quot;http://www.nostarch.com/doingmathwithpython&quot; target=&quot;_blank&quot;&gt;Doing Math with Python&lt;/a&gt;&amp;#8221; to be published by &lt;a title=&quot;No Starch Press&quot; href=&quot;http://www.nostarch.com/&quot; target=&quot;_blank&quot;&gt;No Starch Press&lt;/a&gt; is now available via their &amp;#8220;&lt;a href=&quot;http://www.nostarch.com/aboutearlyaccess&quot; target=&quot;_blank&quot;&gt;Early Access&lt;/a&gt;&amp;#8221; program &amp;#8211; which means if you now buy the book, you will get the chapters as and when they are available and also, the chapters may need more polishing.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.nostarch.com/doingmathwithpython&quot;&gt;&lt;img class=&quot;aligncenter wp-image-2694&quot; src=&quot;https://amitksaha.files.wordpress.com/2014/12/10255353_654805211303462_239961520606625195_n.jpg?w=240&amp;h=316&quot; alt=&quot;10255353_654805211303462_239961520606625195_n&quot; width=&quot;240&quot; height=&quot;316&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The book uses Python 3 exclusively and the Appendix A covers setup and installation instructions for Python 3 and the libraries used in the book. However, that is not yet available. Hence, at this stage, the easiest way would be to use a distribution such as &lt;a href=&quot;https://store.continuum.io/cshop/anaconda/&quot; target=&quot;_blank&quot;&gt;Anaconda&lt;/a&gt; on Windows, Linux or Mac OSX (untested, I don&amp;#8217;t have access to the OS).&lt;/p&gt;&lt;br /&gt;  &lt;a rel=&quot;nofollow&quot; href=&quot;http://feeds.wordpress.com/1.0/gocomments/amitksaha.wordpress.com/2690/&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/amitksaha.wordpress.com/2690/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://pixel.wp.com/b.gif?host=echorand.me&amp;blog=899010&amp;post=2690&amp;subd=amitksaha&amp;ref=&amp;feed=1&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 11 Dec 2014 02:05:10 +0000</pubDate>
</item>
<item>
	<title>Graham Dumpleton: Deferred build actions for Docker images.</title>
	<guid>http://blog.dscpl.com.au/2014/12/deferred-build-actions-for-docker-images.html</guid>
	<link>http://blog.dscpl.com.au/2014/12/deferred-build-actions-for-docker-images.html</link>
	<description>In my last blog post I introduced what I have been doing on creating a production quality Docker image for hosting Python WSGI applications using Apache/mod_wsgi.
In that post I gave an example of the Dockerfile you would use for a simple WSGI hello world application:

FROM grahamdumpleton/mod-wsgi-docker:python-2.7-onbuildCMD [ &quot;wsgi.py&quot; ]

I also presented a more complicated example for a</description>
	<pubDate>Wed, 10 Dec 2014 22:20:18 +0000</pubDate>
</item>

</channel>
</rss>
